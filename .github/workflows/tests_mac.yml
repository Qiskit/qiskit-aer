name: Tests MacOS
on:
  push:
    branches: [master, 'stable/*']
  pull_request:
    branches: [master, 'stable/*']
jobs:
  lint:
    runs-on: macOS-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version}}-pip-lint-${{ hashFiles('setup.py','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version}}-pip-lint-
            ${{ runner.os }}-${{ matrix.python-version}}-pip-
            ${{ runner.os }}-${{ matrix.python-version}}-
      - name: Install deps
        run: |
          set -e
          pip install -U pip wheel
          pip install -U -c constraints.txt git+https://github.com/Qiskit/qiskit-terra
          pip install -U -c constraints.txt -r requirements-dev.txt
        shell: bash
      - name: Run Lint
        run: |
          set -e
          pycodestyle --ignore=E402,W504 --max-line-length=100 qiskit/providers/aer
          pylint -j 2 -rn qiskit/providers/aer
  sdist:
    runs-on: ${{ matrix.platform.os }}
    needs: ["lint"]
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        platform: [
          { os: "macOS-latest",   python-architecture: "x64"},
        ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version}}-pip-sdist-${{ hashFiles('setup.py','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version}}-pip-sdist-
            ${{ runner.os }}-${{ matrix.python-version}}-pip-
            ${{ runner.os }}-${{ matrix.python-version}}-
      - name: Install Deps
        run: python -m pip install -U setuptools wheel virtualenv
      - name: Build Sdist
        run: python setup.py sdist
      - name: Install from sdist and test
        run: |
          set -e
          mkdir out; cd out; virtualenv aer-test
          aer-test/bin/pip install ../dist/*tar.gz
          aer-test/bin/pip install -c ../constraints.txt git+https://github.com/Qiskit/qiskit-terra
          aer-test/bin/python ../tools/verify_wheels.py
          aer-test/bin/pip check
        shell: bash
  tests:
    runs-on: ${{ matrix.os }}
    needs: [sdist, lint]
    timeout-minutes: 40
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: ["macOS-latest"]
    env:
      AER_THRUST_BACKEND: OMP
      QISKIT_TEST_CAPTURE_STREAMS: 1
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version}}-pip-test-${{ hashFiles('setup.py','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version}}-pip-test-
            ${{ runner.os }}-${{ matrix.python-version}}-pip-
            ${{ runner.os }}-${{ matrix.python-version}}-
      - name: Install Deps
        run: |
          set -e
          pip install -U -c constraints.txt wheel git+https://github.com/Qiskit/qiskit-terra
          pip install -U -c constraints.txt -r requirements-dev.txt
      - name: Install Aer
        run: python -m pip install -U .
      - name: Run Tests
        env:
          QISKIT_SUPPRESS_PACKAGING_WARNINGS: Y
        run: |
          set -e
          pip check
          stestr run --slowest
        shell: bash
        if: runner.os != 'macOS' || matrix.python-version != '3.8'
      - name: Run Tests macOS 3.8
        env:
          QISKIT_SUPPRESS_PACKAGING_WARNINGS: Y
          QISKIT_IN_PARALLEL: TRUE
        run: |
          set -e
          pip check
          stestr run --slowest
        shell: bash
        if: runner.os == 'macOS' && matrix.python-version == '3.8'

  tests-json-input:
    runs-on: ${{ matrix.os }}
    needs: [sdist, lint]
    timeout-minutes: 45
    strategy:
      matrix:
        python-version: [3.9]
        os: ["macOS-latest"]
    env:
      AER_THRUST_BACKEND: OMP
      QISKIT_TEST_CAPTURE_STREAMS: 1
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version}}-pip-test-${{ hashFiles('setup.py','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version}}-pip-test-
            ${{ runner.os }}-${{ matrix.python-version}}-pip-
            ${{ runner.os }}-${{ matrix.python-version}}-
      - name: Install Deps
        run: |
          set -e
          pip install -U -c constraints.txt wheel git+https://github.com/Qiskit/qiskit-terra
          pip install -U -c constraints.txt -r requirements-dev.txt
      - name: Install Aer
        run: |
          set -e
          python setup.py bdist_wheel -- -DTEST_JSON=1
          pip install --find-links=dist qiskit-aer
      - name: Run Tests
        env:
          QISKIT_SUPPRESS_PACKAGING_WARNINGS: Y
        run: |
          set -e
          pip check
          stestr run --slowest
        shell: bash
