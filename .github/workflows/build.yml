name: Build
on:
  push:
    branches: [master, 'stable/*']
  pull_request:
    branches: [master, 'stable/*']
jobs:
  standalone:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["macOS-latest", "ubuntu-latest", "windows-latest"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install deps
        run: pip install "conan>=1.31.2"
      - name: Install openblas
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y libopenblas-dev
        shell: bash
        if: runner.os == 'Linux'
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
        if: runner.os == 'Windows'
      - name: Compile Standalone Windows
        run: |
          set -e
          mkdir out; cd out; cmake .. -DBUILD_TESTS=1
          cmake --build . --config Release
        shell: bash
        if: runner.os == 'Windows'
      - name: Compile Standalone
        run: |
          set -e
          mkdir out; cd out; cmake .. -DBUILD_TESTS=1
          make
        shell: bash
        if: runner.os != 'Windows'
      - name: Run Unit Tests
        run: |
          cd out/bin
          for test in test*
          do echo $test
            if ! ./$test
            then
              ERR=1
            fi
          done
          if [ ! -z "$ERR" ]
          then
            exit 1
          fi
        shell: bash
  wheel:
    runs-on: ${{ matrix.os }}
    needs: ["standalone"]
    strategy:
      matrix:
        os: ["macOS-latest", "ubuntu-latest", "windows-latest"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
        if: runner.os == 'Windows'
      - name: Install deps
        run: python -m pip install -U cibuildwheel==1.9.0
      - name: Build Wheels
        env:
          CIBW_BEFORE_ALL_LINUX: "yum install -y openblas-devel"
          CIBW_SKIP: "cp27-* cp34-* cp35-* pp*"
          CIBW_TEST_COMMAND: "python {project}/tools/verify_wheels.py"
          CIBW_TEST_REQUIRES: "git+https://github.com/Qiskit/qiskit-terra.git"
          CIBW_ENVIRONMENT_WINDOWS: "CMAKE_GENERATOR='Visual Studio 16 2019'"
        run: cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
