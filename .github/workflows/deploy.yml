name: Deploy
on:
  push:
    tags:
      - '*'
jobs:
  wheel-build:
    name: Build qiskit-aer wheels
    strategy:
      matrix:
        os: ["macOS-latest", "ubuntu-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==1.7.1
      - name: Build wheels
        env:
          CIBW_BEFORE_ALL_LINUX: "yum install -y https://archives.fedoraproject.org/pub/archive/epel/6/x86_64/epel-release-6-8.noarch.rpm && yum install -y openblas-devel"
          CIBW_BEFORE_BUILD: "pip install -U Cython pip virtualenv pybind11"
          CIBW_SKIP: "cp27-* cp34-* cp35-* pp*"
          CIBW_MANYLINUX_X86_64_IMAGE: "quay.io/pypa/manylinux2010_x86_64:2020-12-03-912b0de"
          CIBW_MANYLINUX_I686_IMAGE: "quay.io/pypa/manylinux2010_i686:2020-12-03-912b0de"
          CIBW_TEST_COMMAND: "python3 {project}/tools/verify_wheels.py"
          CIBW_TEST_REQUIRES: "git+https://github.com/Qiskit/qiskit-terra.git"
        run: |
          python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
      - name: Publish Wheels
        env:
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
          TWINE_USERNAME: qiskit
        run : |
          pip install -U twine
          twine upload wheelhouse/*
  sdist:
    name: Publish qiskit-aer sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'
      - name: Install Deps
        run: pip install -U twine wheel
      - name: Build Artifacts
        run: |
          python setup.py sdist
        shell: bash
      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/qiskit*
      - name: Publish to PyPi
        env:
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
          TWINE_USERNAME: qiskit
        run: twine upload dist/qiskit*
  gpu-build:
    name: Build qiskit-aer-gpu wheels
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==1.7.1
      - name: Build wheels
        env:
          CIBW_BEFORE_ALL: "yum install -y yum-utils wget && wget https://developer.download.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda-repo-rhel6-10-1-local-10.1.243-418.87.00-1.0-1.x86_64.rpm && rpm -i cuda-repo-rhel6-10-1-local-10.1.243-418.87.00-1.0-1.x86_64.rpm && yum clean all && yum -y install cuda-10-1"
          CIBW_BEFORE_BUILD: "pip install -U Cython pip virtualenv pybind11 && yum install -y openblas-devel"
          CIBW_SKIP: "cp27-* cp34-* cp35-* *-manylinux_i686 pp*"
          CIBW_MANYLINUX_X86_64_IMAGE: "quay.io/pypa/manylinux2010_x86_64:latest"
          CIBW_MANYLINUX_I686_IMAGE: "quay.io/pypa/manylinux2010_i686:latest"
          CIBW_ENVIRONMENT: QISKIT_AER_PACKAGE_NAME=qiskit-aer-gpu AER_THRUST_BACKEND=CUDA CUDACXX=/usr/local/cuda/bin/nvcc
          CIBW_TEST_COMMAND: "python3 {project}/tools/verify_wheels.py"
          CIBW_TEST_REQUIRES: "git+https://github.com/Qiskit/qiskit-terra.git"
        run: |
          python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
      - name: Publish Wheels
        env:
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
          TWINE_USERNAME: qiskit
        run : |
          pip install -U twine
          twine upload wheelhouse/*
