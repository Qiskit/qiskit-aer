name: Compile tests
on:
  push:
    branches: [master, 'stable/*']
  pull_request:
    branches: [master, 'stable/*']
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install deps
        run: |
          set -e
          pip install -U pip
          pip install -U -c constraints.txt -r requirements-dev.txt
        shell: bash
      - name: Run Lint
        run: |
          set -e
          pycodestyle --ignore=E402,W504 --max-line-length=100 qiskit/providers/aer
          pylint -j 2 -rn qiskit/providers/aer
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Deps
        run: |
          set -e
          pip install -U pip virtualenv
          pip install -U tox
          sudo apt-get update
          sudo apt-get install -y build-essential libopenblas-dev
        shell: bash
      - name: Run Docs Build
        run: tox -edocs
      - uses: actions/upload-artifact@v2
        with:
          name: html_docs
          path: docs/_build/html
  standalone:
    name: compile-standalone-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["macOS-latest", "ubuntu-latest", "windows-latest"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install deps
        run: pip install conan
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.1
        if: runner.os == 'Windows'
      - name: Compile Standalone Windows
        run: |
          set -e
          mkdir out; cd out; cmake ..
          cmake --build . --config Release
        shell: bash
        if: runner.os == 'Windows'
      - name: Compile Standalone
        run: |
          set -e
          mkdir out; cd out; cmake ..
          make
        shell: bash
        if: runner.os != 'Windows'
  sdist:
    name: compile-sdist-python${{ matrix.python-version }}-${{ matrix.platform.os }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        platform: [
          { os: "macOS-latest",   python-architecture: "x64"},
          { os: "ubuntu-latest", python-architecture: "x64" },
        ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.1
        if: runner.os == 'Windows'
      - name: Install Deps
        run: python -m pip install -U setuptools wheel virtualenv
      - name: Build Sdist
        run: python setup.py sdist
        if: runner.os != 'Windows'
      - name: Build Sdist Windows
        run: python setup.py sdist -- -G 'Visual Studio 16 2019'
        if: runner.os == 'Windows'
      - name: Install from sdist and test
        run: |
          set -e
          mkdir out; cd out; virtualenv aer-test
          aer-test/bin/pip install ../dist/*tar.gz
          aer-test/bin/pip install -c ../constraints.txt git+https://github.com/Qiskit/qiskit-terra
          aer-test/bin/python ../tools/verify_wheels.py
          aer-test/bin/pip check
        shell: bash
        if: runner.os != 'Windows'
#      - name: Install from sdist and test Windows
#        run: |
#          set -e
#          mkdir out; cp -r dist out/.; cd out; virtualenv aer-test
#          aer-test/Scripts/pip install --find-links=dist qiskit-aer
#          aer-test/Scripts/pip install -c ../constraints.txt git+https://github.com/Qiskit/qiskit-terra
#          aer-test/Scripts/python ../tools/verify_wheels.py
#          aer-test/Scripts/pip check
#        shell: bash
#        if: runner.os == 'Windows'
  wheel:
    name: compile-wheel-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["macOS-latest", "ubuntu-latest"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install deps
        run: python -m pip install -U cibuildwheel==1.5.5
      - name: Build Wheels
        env:
          CIBW_BEFORE_ALL_LINUX: "yum install -y openblas-devel"
          CIBW_BEFORE_BUILD: "pip install -U Cython virtualenv pybind11"
          CIBW_SKIP: "cp27-* cp34-* cp35-* *-manylinux_i686 pp*"
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux2010"
          CIBW_MANYLINUX_I686_IMAGE: "manylinux2010"
          CIBW_TEST_COMMAND: "python3 {project}/tools/verify_wheels.py"
          CIBW_TEST_REQUIRES: "git+https://github.com/Qiskit/qiskit-terra.git"
        run: cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
#  wheel-windows:
#    name: compile-wheel-${{ matrix.os }}-${{ matrix.python-version }}
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: ["windows-latest"]
#        python-version: [3.6, 3.7, 3.8]
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python Python 3.8
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.8
#      - name: Add msbuild to PATH
#        uses: microsoft/setup-msbuild@v1.0.1
#        if: runner.os == 'Windows'
#      - name: Install deps
#        run: python -m pip install -U virtualenv setuptools wheel numpy
#      - name: Build Wheels
#        run: python setup.py bdist_wheel -- -G 'Visual Studio 16 2019'
#      - name: Install and test wheel
#        run: |
#          set -e
#          virtualenv test-wheel
#          test-wheel/Scripts/pip install -c constraints.txt git+https://github.com/Qiskit/qiskit-terra
#          test-wheel/Scripts/pip install -c constraints.txt dist/*whl
#          test-wheel/Scripts/python tools/verify_wheels.py
#        shell: bash
#      - uses: actions/upload-artifact@v2
#        with:
#          path: ./dist/*.whl
  tests:
    name: tests-python${{ matrix.python-version }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: [standalone, wheel, sdist, wheel-windows]
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: ["macOS-latest", "ubuntu-latest", "windows-latest"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.1
        if: runner.os == 'Windows'
      - name: Install Deps
        run: python -m pip install -U -r requirements-dev.txt git+https://github.com/Qiskit/qiskit-terra
      - name: Install Aer
        run: python -m pip install -U .
        if: runner.os != 'Windows'
      - name: Install Aer Windows
        run: |
          set -e
          python setup.py bdist_wheel -- -G 'Visual Studio 16 2019'
          pip install --find-links=dist qiskit-aer
        shell: bash
        if: runner.os == 'Windows'
      - name: Run Tests
        env:
          QISKIT_SUPPRESS_PACKAGING_WARNINGS: Y
        run: |
          set -e
          pip check
          stestr run --slowest
