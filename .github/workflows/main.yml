name: Compile tests
on:
  push:
    branches: [master, 'stable/*']
  pull_request:
    branches: [master, 'stable/*']
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-lint-${{ hashFiles('setup.py','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-lint-
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install deps
        run: |
          set -e
          pip install -U pip wheel
          pip install -U -c constraints.txt git+https://github.com/Qiskit/qiskit-terra
          pip install -U -c constraints.txt -r requirements-dev.txt
        shell: bash
      - name: Run Lint
        run: |
          set -e
          pycodestyle --ignore=E402,W504 --max-line-length=100 qiskit/providers/aer
          pylint -j 2 -rn qiskit/providers/aer
  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-docs-${{ hashFiles('setup.py','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-docs-
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install Deps
        run: |
          set -e
          pip install -U pip virtualenv wheel
          pip install -U tox
          sudo apt-get update
          sudo apt-get install -y build-essential libopenblas-dev
        shell: bash
      - name: Run Docs Build
        run: tox -edocs
      - uses: actions/upload-artifact@v2
        with:
          name: html_docs
          path: docs/_build/html
  standalone:
    name: compile-standalone-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["macOS-latest", "ubuntu-latest", "windows-latest"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install deps
        run: pip install "urllib3<1.26" conan
      - name: Install openblas
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y libopenblas-dev
        shell: bash
        if: runner.os == 'Linux'
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.1
        if: runner.os == 'Windows'
      - name: Compile Standalone Windows
        run: |
          set -e
          mkdir out; cd out; cmake ..
          cmake --build . --config Release
        shell: bash
        if: runner.os == 'Windows'
      - name: Compile Standalone
        run: |
          set -e
          mkdir out; cd out; cmake ..
          make
        shell: bash
        if: runner.os != 'Windows'
  sdist:
    name: compile-sdist-python${{ matrix.python-version }}-${{ matrix.platform.os }}
    runs-on: ${{ matrix.platform.os }}
    needs: ["lint"]
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        platform: [
          { os: "macOS-latest",   python-architecture: "x64"},
          { os: "ubuntu-latest", python-architecture: "x64" },
        ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version}}-pip-sdist-${{ hashFiles('setup.py','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version}}-pip-sdist-
            ${{ runner.os }}-${{ matrix.python-version}}-pip-
            ${{ runner.os }}-${{ matrix.python-version}}-
      - name: Install Deps
        run: python -m pip install -U setuptools wheel virtualenv
      - name: Install openblas
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y libopenblas-dev
        shell: bash
        if: runner.os == 'Linux'
      - name: Build Sdist
        run: python setup.py sdist
      - name: Install from sdist and test
        run: |
          set -e
          mkdir out; cd out; virtualenv aer-test
          aer-test/bin/pip install ../dist/*tar.gz
          aer-test/bin/pip install -c ../constraints.txt git+https://github.com/Qiskit/qiskit-terra
          aer-test/bin/python ../tools/verify_wheels.py
          aer-test/bin/pip check
        shell: bash
  wheel:
    name: compile-wheel-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: ["lint"]
    strategy:
      matrix:
        os: ["macOS-latest", "ubuntu-latest"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install deps
        run: python -m pip install -U cibuildwheel==1.5.5
      - name: Build Wheels
        env:
          CIBW_BEFORE_ALL_LINUX: "yum install -y openblas-devel"
          CIBW_BEFORE_BUILD: "pip install -U Cython virtualenv pybind11"
          CIBW_SKIP: "cp27-* cp34-* cp35-* pp*"
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux2010"
          CIBW_MANYLINUX_I686_IMAGE: "manylinux2010"
          CIBW_TEST_COMMAND: "python3 {project}/tools/verify_wheels.py"
          CIBW_TEST_REQUIRES: "git+https://github.com/Qiskit/qiskit-terra.git"
        run: cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
  tests:
    name: tests-python${{ matrix.python-version }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: [standalone, sdist, lint, docs]
    timeout-minutes: 25
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: ["macOS-latest", "ubuntu-latest", "windows-latest"]
    env:
      AER_THRUST_BACKEND: OMP
      QISKIT_TEST_CAPTURE_STREAMS: 1
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version}}-pip-test-${{ hashFiles('setup.py','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version}}-pip-test-
            ${{ runner.os }}-${{ matrix.python-version}}-pip-
            ${{ runner.os }}-${{ matrix.python-version}}-
        if: runner.os != 'Windows'
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-${{ matrix.python-version}}-pip-${{ hashFiles('setup.py','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version}}-pip-test-
            ${{ runner.os }}-${{ matrix.python-version}}-pip-
            ${{ runner.os }}-${{ matrix.python-version}}-
        if: runner.os == 'Windows'
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.1
        if: runner.os == 'Windows'
      - name: Install Deps
        run: python -m pip install -U -r requirements-dev.txt wheel git+https://github.com/Qiskit/qiskit-terra
      - name: Install openblas
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y libopenblas-dev
        shell: bash
        if: runner.os == 'Linux'
      - name: Install Aer
        run: python -m pip install -U .
        if: runner.os != 'Windows'
      - name: Install Aer Windows
        run: |
          set -e
          python setup.py bdist_wheel -- -G 'Visual Studio 16 2019'
          pip install --find-links=dist qiskit-aer
        shell: bash
        if: runner.os == 'Windows'
      - name: Run Tests
        env:
          QISKIT_SUPPRESS_PACKAGING_WARNINGS: Y
        run: |
          set -e
          pip check
          stestr run --slowest
        shell: bash
        if: runner.os != 'macOS' || matrix.python-version != '3.8'
      - name: Run Tests macOS 3.8
        env:
          QISKIT_SUPPRESS_PACKAGING_WARNINGS: Y
          QISKIT_IN_PARALLEL: TRUE
        run: |
          set -e
          pip check
          stestr run --slowest
        shell: bash
        if: runner.os == 'macOS' && matrix.python-version == '3.8'
  tutorials:
    name: Tutorials
    runs-on: ubuntu-latest
    needs: [standalone, sdist, lint, docs]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-tutorials-${{ hashFiles('setup.py','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-tutorials-
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Setup tutorials job
        run: |
          set -e
          git clone https://github.com/Qiskit/qiskit-tutorials --depth=1
          python -m pip install --upgrade pip wheel
          pip install -U -r requirements-dev.txt -c constraints.txt
          pip install -c constraints.txt git+https://github.com/Qiskit/qiskit-terra
          pip install -c constraints.txt .
          pip install -U "qiskit-ibmq-provider" "z3-solver" "qiskit-ignis" "qiskit-aqua" "pyscf<1.7.4" "matplotlib<3.3.0" jupyter pylatexenc sphinx nbsphinx sphinx_rtd_theme cvxpy -c constraints.txt
          python setup.py build_ext --inplace
          sudo apt install -y graphviz pandoc libopenblas-dev
          pip check
        shell: bash
      - name: Run Tutorials
        run: |
          set -e
          cd qiskit-tutorials
          rm -rf tutorials/chemistry tutorials/circuits tutorials/circuits_advanced tutorials/finance tutorials/optimization tutorials/noise
          sphinx-build -b html . _build/html
      - uses: actions/upload-artifact@v2
        with:
          name: tutorials_html
          path: qiskit-tutorials/_build/html
