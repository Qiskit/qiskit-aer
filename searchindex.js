Search.setIndex({"docnames": ["apidocs/aer", "apidocs/aer_jobs", "apidocs/aer_library", "apidocs/aer_noise", "apidocs/aer_primitives", "apidocs/aer_provider", "apidocs/aer_quantum_info", "apidocs/aer_utils", "apidocs/circuit", "getting_started", "howtos/index", "howtos/parallel", "howtos/running_gpu", "index", "release_notes", "stubs/qiskit_aer.AerError", "stubs/qiskit_aer.AerProvider", "stubs/qiskit_aer.AerSimulator", "stubs/qiskit_aer.QasmSimulator", "stubs/qiskit_aer.StatevectorSimulator", "stubs/qiskit_aer.UnitarySimulator", "stubs/qiskit_aer.jobs.AerJob", "stubs/qiskit_aer.library.SaveAmplitudes", "stubs/qiskit_aer.library.SaveAmplitudesSquared", "stubs/qiskit_aer.library.SaveClifford", "stubs/qiskit_aer.library.SaveDensityMatrix", "stubs/qiskit_aer.library.SaveExpectationValue", "stubs/qiskit_aer.library.SaveExpectationValueVariance", "stubs/qiskit_aer.library.SaveMatrixProductState", "stubs/qiskit_aer.library.SaveProbabilities", "stubs/qiskit_aer.library.SaveProbabilitiesDict", "stubs/qiskit_aer.library.SaveStabilizer", "stubs/qiskit_aer.library.SaveState", "stubs/qiskit_aer.library.SaveStatevector", "stubs/qiskit_aer.library.SaveStatevectorDict", "stubs/qiskit_aer.library.SaveSuperOp", "stubs/qiskit_aer.library.SaveUnitary", "stubs/qiskit_aer.library.SetDensityMatrix", "stubs/qiskit_aer.library.SetMatrixProductState", "stubs/qiskit_aer.library.SetStabilizer", "stubs/qiskit_aer.library.SetStatevector", "stubs/qiskit_aer.library.SetSuperOp", "stubs/qiskit_aer.library.SetUnitary", "stubs/qiskit_aer.library.save_amplitudes", "stubs/qiskit_aer.library.save_amplitudes_squared", "stubs/qiskit_aer.library.save_clifford", "stubs/qiskit_aer.library.save_density_matrix", "stubs/qiskit_aer.library.save_expectation_value", "stubs/qiskit_aer.library.save_expectation_value_variance", "stubs/qiskit_aer.library.save_matrix_product_state", "stubs/qiskit_aer.library.save_probabilities", "stubs/qiskit_aer.library.save_probabilities_dict", "stubs/qiskit_aer.library.save_stabilizer", "stubs/qiskit_aer.library.save_state", "stubs/qiskit_aer.library.save_statevector", "stubs/qiskit_aer.library.save_statevector_dict", "stubs/qiskit_aer.library.save_superop", "stubs/qiskit_aer.library.save_unitary", "stubs/qiskit_aer.library.set_density_matrix", "stubs/qiskit_aer.library.set_matrix_product_state", "stubs/qiskit_aer.library.set_stabilizer", "stubs/qiskit_aer.library.set_statevector", "stubs/qiskit_aer.library.set_superop", "stubs/qiskit_aer.library.set_unitary", "stubs/qiskit_aer.noise.LocalNoisePass", "stubs/qiskit_aer.noise.NoiseModel", "stubs/qiskit_aer.noise.PauliLindbladError", "stubs/qiskit_aer.noise.QuantumError", "stubs/qiskit_aer.noise.ReadoutError", "stubs/qiskit_aer.noise.RelaxationNoisePass", "stubs/qiskit_aer.noise.amplitude_damping_error", "stubs/qiskit_aer.noise.coherent_unitary_error", "stubs/qiskit_aer.noise.depolarizing_error", "stubs/qiskit_aer.noise.device.basic_device_gate_errors", "stubs/qiskit_aer.noise.device.basic_device_readout_errors", "stubs/qiskit_aer.noise.device.gate_error_values", "stubs/qiskit_aer.noise.device.gate_length_values", "stubs/qiskit_aer.noise.device.gate_param_values", "stubs/qiskit_aer.noise.device.readout_error_values", "stubs/qiskit_aer.noise.device.thermal_relaxation_values", "stubs/qiskit_aer.noise.kraus_error", "stubs/qiskit_aer.noise.mixed_unitary_error", "stubs/qiskit_aer.noise.pauli_error", "stubs/qiskit_aer.noise.phase_amplitude_damping_error", "stubs/qiskit_aer.noise.phase_damping_error", "stubs/qiskit_aer.noise.reset_error", "stubs/qiskit_aer.noise.thermal_relaxation_error", "stubs/qiskit_aer.primitives.Estimator", "stubs/qiskit_aer.primitives.EstimatorV2", "stubs/qiskit_aer.primitives.Sampler", "stubs/qiskit_aer.primitives.SamplerV2", "stubs/qiskit_aer.quantum_info.AerDensityMatrix", "stubs/qiskit_aer.quantum_info.AerStatevector", "stubs/qiskit_aer.utils.approximate_noise_model", "stubs/qiskit_aer.utils.approximate_quantum_error", "stubs/qiskit_aer.utils.insert_noise", "stubs/qiskit_aer.utils.transform_noise_model", "stubs/qiskit_aer.utils.transpile_noise_model", "stubs/qiskit_aer.utils.transpile_quantum_error", "tutorials/1_aersimulator", "tutorials/2_device_noise_simulation", "tutorials/3_building_noise_models", "tutorials/4_custom_gate_noise", "tutorials/5_noise_transformation", "tutorials/6_extended_stabilizer_tutorial", "tutorials/7_matrix_product_state_method", "tutorials/index"], "filenames": ["apidocs/aer.rst", "apidocs/aer_jobs.rst", "apidocs/aer_library.rst", "apidocs/aer_noise.rst", "apidocs/aer_primitives.rst", "apidocs/aer_provider.rst", "apidocs/aer_quantum_info.rst", "apidocs/aer_utils.rst", "apidocs/circuit.rst", "getting_started.rst", "howtos/index.rst", "howtos/parallel.rst", "howtos/running_gpu.rst", "index.rst", "release_notes.rst", "stubs/qiskit_aer.AerError.rst", "stubs/qiskit_aer.AerProvider.rst", "stubs/qiskit_aer.AerSimulator.rst", "stubs/qiskit_aer.QasmSimulator.rst", "stubs/qiskit_aer.StatevectorSimulator.rst", "stubs/qiskit_aer.UnitarySimulator.rst", "stubs/qiskit_aer.jobs.AerJob.rst", "stubs/qiskit_aer.library.SaveAmplitudes.rst", "stubs/qiskit_aer.library.SaveAmplitudesSquared.rst", "stubs/qiskit_aer.library.SaveClifford.rst", "stubs/qiskit_aer.library.SaveDensityMatrix.rst", "stubs/qiskit_aer.library.SaveExpectationValue.rst", "stubs/qiskit_aer.library.SaveExpectationValueVariance.rst", "stubs/qiskit_aer.library.SaveMatrixProductState.rst", "stubs/qiskit_aer.library.SaveProbabilities.rst", "stubs/qiskit_aer.library.SaveProbabilitiesDict.rst", "stubs/qiskit_aer.library.SaveStabilizer.rst", "stubs/qiskit_aer.library.SaveState.rst", "stubs/qiskit_aer.library.SaveStatevector.rst", "stubs/qiskit_aer.library.SaveStatevectorDict.rst", "stubs/qiskit_aer.library.SaveSuperOp.rst", "stubs/qiskit_aer.library.SaveUnitary.rst", "stubs/qiskit_aer.library.SetDensityMatrix.rst", "stubs/qiskit_aer.library.SetMatrixProductState.rst", "stubs/qiskit_aer.library.SetStabilizer.rst", "stubs/qiskit_aer.library.SetStatevector.rst", "stubs/qiskit_aer.library.SetSuperOp.rst", "stubs/qiskit_aer.library.SetUnitary.rst", "stubs/qiskit_aer.library.save_amplitudes.rst", "stubs/qiskit_aer.library.save_amplitudes_squared.rst", "stubs/qiskit_aer.library.save_clifford.rst", "stubs/qiskit_aer.library.save_density_matrix.rst", "stubs/qiskit_aer.library.save_expectation_value.rst", "stubs/qiskit_aer.library.save_expectation_value_variance.rst", "stubs/qiskit_aer.library.save_matrix_product_state.rst", "stubs/qiskit_aer.library.save_probabilities.rst", "stubs/qiskit_aer.library.save_probabilities_dict.rst", "stubs/qiskit_aer.library.save_stabilizer.rst", "stubs/qiskit_aer.library.save_state.rst", "stubs/qiskit_aer.library.save_statevector.rst", "stubs/qiskit_aer.library.save_statevector_dict.rst", "stubs/qiskit_aer.library.save_superop.rst", "stubs/qiskit_aer.library.save_unitary.rst", "stubs/qiskit_aer.library.set_density_matrix.rst", "stubs/qiskit_aer.library.set_matrix_product_state.rst", "stubs/qiskit_aer.library.set_stabilizer.rst", "stubs/qiskit_aer.library.set_statevector.rst", "stubs/qiskit_aer.library.set_superop.rst", "stubs/qiskit_aer.library.set_unitary.rst", "stubs/qiskit_aer.noise.LocalNoisePass.rst", "stubs/qiskit_aer.noise.NoiseModel.rst", "stubs/qiskit_aer.noise.PauliLindbladError.rst", "stubs/qiskit_aer.noise.QuantumError.rst", "stubs/qiskit_aer.noise.ReadoutError.rst", "stubs/qiskit_aer.noise.RelaxationNoisePass.rst", "stubs/qiskit_aer.noise.amplitude_damping_error.rst", "stubs/qiskit_aer.noise.coherent_unitary_error.rst", "stubs/qiskit_aer.noise.depolarizing_error.rst", "stubs/qiskit_aer.noise.device.basic_device_gate_errors.rst", "stubs/qiskit_aer.noise.device.basic_device_readout_errors.rst", "stubs/qiskit_aer.noise.device.gate_error_values.rst", "stubs/qiskit_aer.noise.device.gate_length_values.rst", "stubs/qiskit_aer.noise.device.gate_param_values.rst", "stubs/qiskit_aer.noise.device.readout_error_values.rst", "stubs/qiskit_aer.noise.device.thermal_relaxation_values.rst", "stubs/qiskit_aer.noise.kraus_error.rst", "stubs/qiskit_aer.noise.mixed_unitary_error.rst", "stubs/qiskit_aer.noise.pauli_error.rst", "stubs/qiskit_aer.noise.phase_amplitude_damping_error.rst", "stubs/qiskit_aer.noise.phase_damping_error.rst", "stubs/qiskit_aer.noise.reset_error.rst", "stubs/qiskit_aer.noise.thermal_relaxation_error.rst", "stubs/qiskit_aer.primitives.Estimator.rst", "stubs/qiskit_aer.primitives.EstimatorV2.rst", "stubs/qiskit_aer.primitives.Sampler.rst", "stubs/qiskit_aer.primitives.SamplerV2.rst", "stubs/qiskit_aer.quantum_info.AerDensityMatrix.rst", "stubs/qiskit_aer.quantum_info.AerStatevector.rst", "stubs/qiskit_aer.utils.approximate_noise_model.rst", "stubs/qiskit_aer.utils.approximate_quantum_error.rst", "stubs/qiskit_aer.utils.insert_noise.rst", "stubs/qiskit_aer.utils.transform_noise_model.rst", "stubs/qiskit_aer.utils.transpile_noise_model.rst", "stubs/qiskit_aer.utils.transpile_quantum_error.rst", "tutorials/1_aersimulator.ipynb", "tutorials/2_device_noise_simulation.ipynb", "tutorials/3_building_noise_models.ipynb", "tutorials/4_custom_gate_noise.ipynb", "tutorials/5_noise_transformation.ipynb", "tutorials/6_extended_stabilizer_tutorial.ipynb", "tutorials/7_matrix_product_state_method.ipynb", "tutorials/index.rst"], "titles": ["Qiskit Aer API Reference", "Aer Jobs (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_aer.jobs</span></code>)", "Instruction Library (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_aer.library</span></code>)", "Noise Models (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_aer.noise</span></code>)", "Primitives (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_aer.primitives</span></code>)", "Aer Provider (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_aer</span></code>)", "Aer Quantum Info (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_aer.quantum_info</span></code>)", "Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_aer.utils</span></code>)", "Additional circuit methods", "Getting started", "Qiskit Aer How-To Guides", "Running with Threadpool", "Running with multiple-GPUs and/or multiple nodes", "Qiskit Aer documentation", "Release Notes", "AerError", "AerProvider", "AerSimulator", "QasmSimulator", "StatevectorSimulator", "UnitarySimulator", "AerJob", "SaveAmplitudes", "SaveAmplitudesSquared", "SaveClifford", "SaveDensityMatrix", "SaveExpectationValue", "SaveExpectationValueVariance", "SaveMatrixProductState", "SaveProbabilities", "SaveProbabilitiesDict", "SaveStabilizer", "SaveState", "SaveStatevector", "SaveStatevectorDict", "SaveSuperOp", "SaveUnitary", "SetDensityMatrix", "SetMatrixProductState", "SetStabilizer", "SetStatevector", "SetSuperOp", "SetUnitary", "save_amplitudes", "save_amplitudes_squared", "save_clifford", "save_density_matrix", "save_expectation_value", "save_expectation_value_variance", "save_matrix_product_state", "save_probabilities", "save_probabilities_dict", "save_stabilizer", "save_state", "save_statevector", "save_statevector_dict", "save_superop", "save_unitary", "set_density_matrix", "set_matrix_product_state", "set_stabilizer", "set_statevector", "set_superop", "set_unitary", "LocalNoisePass", "NoiseModel", "PauliLindbladError", "QuantumError", "ReadoutError", "RelaxationNoisePass", "amplitude_damping_error", "coherent_unitary_error", "depolarizing_error", "basic_device_gate_errors", "basic_device_readout_errors", "gate_error_values", "gate_length_values", "gate_param_values", "readout_error_values", "thermal_relaxation_values", "kraus_error", "mixed_unitary_error", "pauli_error", "phase_amplitude_damping_error", "phase_damping_error", "reset_error", "thermal_relaxation_error", "Estimator", "EstimatorV2", "Sampler", "SamplerV2", "AerDensityMatrix", "AerStatevector", "approximate_noise_model", "approximate_quantum_error", "insert_noise", "transform_noise_model", "transpile_noise_model", "transpile_quantum_error", "Simulators", "Device backend noise model simulations", "Building Noise Models", "Applying noise to custom unitary gates", "Noise Transformation", "The Extended Stabilizer Simulator", "Matrix product state simulation method", "High-Performance Simulator Tutorials"], "terms": {"provid": [0, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 68, 73, 79, 88, 99, 103, 105], "qiskit_a": [0, 8, 9, 11, 14, 65, 87, 99, 100, 101, 102, 103, 104, 105], "job": [0, 9, 11, 12, 14, 17, 18, 19, 20, 21, 87, 88, 89, 90], "instruct": [0, 3, 8, 9, 10, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 91, 92, 95, 101, 102, 105], "librari": [0, 9, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "nois": [0, 7, 13, 14, 17, 18, 20, 64, 65, 67, 68, 69, 70, 72, 83, 84, 85, 86, 87, 93, 95, 96, 97, 99], "model": [0, 7, 13, 14, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 66, 67, 68, 70, 83, 84, 86, 93, 95, 96, 97, 99], "primit": [0, 9, 14, 87, 88, 90], "util": [0, 3, 12, 14, 17, 18, 19, 20, 103], "quantum": [0, 4, 8, 12, 13, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 52, 53, 54, 55, 62, 65, 66, 67, 70, 71, 72, 73, 80, 81, 82, 83, 84, 85, 86, 88, 91, 92, 94, 95, 96, 98, 100, 102, 103, 104, 105], "info": [0, 101], "quantum_info": [0, 14, 91, 92, 99, 101, 102, 103], "addit": [0, 2, 3, 9, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 76, 79, 86, 91, 92, 95, 99, 100, 101, 102, 103, 105], "circuit": [0, 2, 3, 9, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 88, 89, 90, 91, 92, 95, 98, 101, 103, 104, 105], "method": [0, 3, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 64, 65, 66, 67, 68, 69, 87, 88, 89, 90, 91, 92, 104], "thi": [1, 2, 3, 4, 7, 8, 9, 10, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 52, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 72, 73, 87, 89, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105], "modul": [1, 3, 4, 7, 14, 17, 18, 19, 20, 65, 67, 100], "contain": [1, 2, 3, 7, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 66, 73, 88, 91, 92, 95, 96, 97, 98, 99, 100, 101, 105], "function": [1, 9, 11, 12, 14, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 67, 69, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103], "manag": [1, 12, 14, 64, 69], "The": [1, 2, 3, 8, 9, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105], "follow": [1, 2, 3, 8, 9, 12, 14, 17, 18, 19, 20, 21, 65, 70, 83, 84, 87, 89, 91, 92, 99, 100, 102, 103, 104, 105], "ar": [1, 2, 3, 8, 9, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 66, 67, 68, 69, 72, 73, 76, 79, 80, 81, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105], "us": [1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 66, 67, 73, 79, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 100, 101, 103], "submiss": 1, "qiskit": [2, 3, 4, 11, 12, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 69, 87, 91, 92, 97, 98, 99, 100, 102, 103, 104, 105], "subclass": [2, 14, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "can": [2, 3, 8, 9, 11, 12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 66, 67, 69, 73, 86, 90, 91, 92, 95, 99, 100, 101, 102, 103, 104, 105], "aer": [2, 3, 4, 8, 11, 12, 14, 16, 17, 18, 19, 20, 21, 65, 67, 68, 87, 88, 89, 90, 100, 102, 103, 104, 105], "backend": [2, 3, 11, 12, 14, 16, 17, 18, 19, 20, 21, 65, 69, 73, 74, 75, 76, 77, 78, 79, 88, 89, 90, 99, 101, 102, 104], "specif": [2, 8, 9, 10, 14, 17, 18, 99, 100], "note": [2, 9, 12, 17, 18, 19, 20, 21, 65, 66, 67, 68, 87, 91, 92, 99, 100, 102, 103, 104], "onli": [2, 9, 14, 17, 18, 19, 20, 65, 66, 67, 73, 91, 92, 93, 94, 99, 100, 101, 103, 104, 105], "valid": [2, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 69, 81, 82, 86, 91, 92, 99], "when": [2, 8, 11, 12, 14, 17, 18, 19, 20, 66, 67, 73, 87, 88, 91, 92, 99, 100, 101, 102, 103, 105], "appli": [2, 3, 8, 12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 50, 51, 64, 65, 66, 67, 73, 91, 92, 96, 99, 100, 101, 103, 104, 105], "all": [2, 8, 11, 12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 64, 65, 66, 67, 69, 72, 73, 81, 82, 91, 92, 93, 95, 96, 97, 98, 99, 102, 103, 104, 105], "qubit": [2, 3, 8, 9, 12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 93, 94, 96, 99, 100, 102, 103, 104, 105], "subset": [2, 14], "rais": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 96, 97, 98, 99], "an": [2, 3, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 66, 67, 68, 69, 73, 87, 88, 90, 91, 92, 94, 99, 100, 101, 102, 103, 104, 105], "except": [2, 8, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 99], "dure": [2, 14, 17, 18, 19, 20, 21, 24, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 73, 90, 105], "execut": [2, 12, 14, 17, 18, 19, 20, 21, 64, 69, 87, 89, 91, 92, 95, 100, 105], "also": [2, 8, 9, 12, 14, 17, 18, 19, 20, 66, 67, 87, 91, 92, 99, 101, 104, 105], "ad": [2, 3, 8, 14, 64, 65, 69, 73, 91, 92, 99, 102, 103], "which": [2, 3, 8, 9, 12, 14, 17, 18, 19, 20, 37, 38, 39, 40, 41, 42, 64, 66, 67, 69, 90, 91, 92, 99, 100, 101, 103], "patch": [2, 8], "import": [2, 3, 8, 9, 11, 12, 14, 65, 91, 92, 99, 100, 101, 102, 103, 104, 105], "return": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 104, 105], "result": [2, 3, 8, 9, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 69, 73, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "object": [2, 3, 7, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 66, 67, 68, 70, 71, 72, 73, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 101, 103], "savest": 2, "automat": [2, 3, 12, 14, 17, 18, 19, 20, 65, 100, 101], "select": [2, 14, 17, 66, 91, 92, 99, 105], "format": [2, 14, 17, 32, 67, 87, 91, 92, 99, 102, 103, 104, 105], "base": [2, 3, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 66, 67, 68, 69, 87, 88, 89, 90, 91, 92, 99, 100, 101, 105], "eg": [2, 14], "savestatevector": [2, 14], "statevector": [2, 8, 9, 12, 14, 17, 18, 19, 22, 23, 24, 31, 33, 34, 36, 40, 43, 44, 53, 54, 55, 61, 91, 92, 104, 105], "savedensitymatrix": 2, "densiti": [2, 8, 9, 14, 17, 18, 25, 37, 46, 58, 91, 92, 103, 105], "matrix": [2, 8, 9, 14, 17, 18, 19, 20, 25, 28, 35, 37, 38, 42, 46, 49, 58, 59, 61, 63, 66, 67, 68, 71, 80, 81, 91, 92, 94, 101], "etc": [2, 14, 37, 38, 39, 40, 41, 42, 99], "reduc": [2, 8, 14, 17, 18, 19, 20, 25, 46, 66, 99, 104], "densit": 2, "support": [2, 9, 13, 14, 17, 18, 19, 20, 64, 91, 92, 93, 94, 100, 101, 102], "howev": [2, 8, 11, 14, 17, 104, 105], "other": [2, 9, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 67, 68, 91, 92, 99, 102, 104, 105], "must": [2, 8, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 81, 82, 86, 92, 93, 94, 99, 100, 101, 102, 104, 105], "run": [2, 3, 9, 10, 13, 14, 17, 18, 19, 20, 21, 64, 69, 87, 88, 89, 90, 99, 101, 102, 104, 105], "statevectorsimul": [2, 14], "unitarysimul": [2, 14], "append": [2, 8, 14, 17, 26, 27, 47, 48, 64, 65, 99, 102], "everi": [2, 17, 18, 64, 104, 105], "saveunitari": 2, "default": [2, 8, 9, 11, 12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 70, 73, 80, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 102, 104, 105], "label": [2, 8, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 73, 82, 99, 102, 105], "henc": [2, 66, 67, 103], "ani": [2, 9, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 66, 67, 73, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105], "type": [2, 3, 8, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 94, 95, 101], "requir": [2, 9, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 67, 69, 91, 92, 99, 103, 104, 105], "specifi": [2, 8, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 43, 44, 64, 65, 66, 67, 88, 90, 91, 92, 93, 94, 99, 101, 102], "those": [2, 14, 92, 99], "directli": [2, 14, 17, 18, 26, 27, 91, 92, 99, 101, 102, 103], "from": [2, 3, 8, 9, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 69, 73, 74, 75, 76, 77, 78, 79, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 102, 103, 104, 105], "One": [2, 65, 89, 99, 104], "some": [2, 9, 11, 14, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 91, 92, 101, 103, 104], "certain": [2, 17, 18, 19, 20, 99], "For": [2, 9, 12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 67, 68, 86, 90, 91, 92, 99, 100, 101, 102, 104, 105], "conveni": [2, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "access": [2, 8, 9, 14, 66, 104], "pershot": [2, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "true": [2, 8, 9, 12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 70, 73, 83, 84, 87, 89, 91, 92, 99, 100, 101, 102, 104], "kwarg": [2, 14, 16, 17, 18, 19, 20, 64, 65, 66, 67, 69, 91, 92, 97, 98, 99], "abov": [2, 14, 67, 99, 103, 104], "list": [2, 8, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 90, 91, 92, 93, 94, 95, 99, 101, 102, 103], "mai": [2, 9, 14, 17, 18, 19, 20, 37, 38, 39, 40, 41, 42, 66, 67, 73, 99, 101, 102, 104, 105], "singl": [2, 8, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 64, 65, 66, 67, 70, 83, 84, 85, 86, 99, 100, 101, 102, 103, 105], "valu": [2, 8, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 65, 66, 68, 73, 74, 75, 76, 77, 78, 79, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 103], "rather": [2, 8, 14, 17, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 43, 44, 46, 47, 48, 50, 51, 99, 101], "than": [2, 8, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 43, 44, 46, 47, 48, 50, 51, 67, 82, 87, 91, 92, 99, 101, 104, 105], "number": [2, 8, 9, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 66, 67, 68, 72, 87, 89, 90, 91, 92, 94, 96, 99, 104, 105], "shot": [2, 8, 9, 12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 87, 89, 90, 91, 92, 104], "happen": 2, "measur": [2, 3, 8, 11, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 65, 68, 73, 91, 92, 100, 101, 102, 103, 104, 105], "sampl": [2, 14, 17, 18, 65, 69, 87, 88, 89, 90, 91, 92, 99, 101, 104], "becaus": [2, 14, 17, 65, 66, 104, 105], "i": [2, 3, 4, 8, 9, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 105], "either": [2, 14, 17, 18, 19, 20, 65, 67, 73, 74, 91, 92, 99, 103], "ideal": [2, 9, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 66, 67, 68, 99, 100], "end": [2, 17, 18, 91, 99, 102, 103], "2": [2, 3, 9, 11, 12, 13, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 66, 68, 72, 86, 91, 92, 93, 94, 99, 100, 102, 103, 104, 105], "A": [2, 3, 8, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 73, 74, 75, 76, 77, 78, 79, 88, 99, 101, 103, 105], "noisi": [2, 14, 17, 18, 19, 20, 65, 68, 73, 95, 99, 100], "In": [2, 9, 12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 99, 100, 101, 105], "both": [2, 9, 11, 14, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 91, 92, 99, 100, 102], "case": [2, 14, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 67, 101, 102, 105], "actual": [2, 12, 14, 91, 92, 100, 103, 105], "calcul": [2, 14, 17, 18, 87, 89], "final": [2, 14, 17, 21, 67, 91, 92, 102, 104], "each": [2, 8, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 69, 79, 88, 90, 100, 101, 105], "ha": [2, 8, 9, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 66, 67, 68, 91, 92, 99, 103, 104, 105], "duplic": [2, 8, 14, 66], "being": [2, 8, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "If": [2, 8, 9, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 50, 51, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 102, 104], "you": [2, 8, 9, 11, 12, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 66, 99, 100, 101, 102, 104, 105], "more": [2, 8, 9, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 87, 89, 100, 101, 103, 104, 105], "1": [2, 3, 8, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 66, 67, 68, 70, 72, 81, 82, 83, 84, 85, 86, 91, 92, 93, 94, 99, 100, 102, 103, 104, 105], "instanc": [2, 3, 8, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 99, 101], "tabl": [2, 91, 92], "summar": 2, "mp": [2, 8, 14, 17, 18, 28, 49, 99, 105], "stabil": [2, 8, 14, 17, 18, 24, 31, 39, 45, 52, 60, 105], "ext": 2, "unitari": [2, 8, 9, 14, 17, 20, 36, 42, 57, 63, 71, 81, 86, 101], "superop": [2, 8, 14, 17, 35, 41, 56, 62, 66, 67, 91, 99, 101], "saveamplitud": 2, "saveamplitudessquar": 2, "saveclifford": [2, 14], "saveexpectationvalu": [2, 8, 47], "saveexpectationvaluevari": [2, 8, 48], "savematrixproductst": 2, "saveprob": [2, 17, 18], "saveprobabilitiesdict": 2, "savestabil": [2, 14], "savestatevectordict": 2, "savesuperop": 2, "setdensitymatrix": 2, "setstabil": 2, "setstatevector": 2, "setunitari": 2, "simul": [3, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 88, 91, 92, 103], "presenc": 3, "noisemodel": [3, 7, 14, 17, 18, 93, 95, 96, 97, 101, 102], "repres": [3, 14, 65, 66, 67, 102, 105], "qasmsimul": [3, 14, 65, 95], "It": [3, 13, 14, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 87, 91, 92, 99, 101, 103, 104], "construct": [3, 9, 14, 17, 18, 21, 64, 65, 66, 73, 91, 92, 99, 100, 101, 102, 103, 105], "gener": [3, 4, 9, 11, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 66, 67, 69, 70, 73, 84, 86, 90, 91, 92, 99, 101, 102, 103, 105], "basic": [3, 9, 14, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 99, 100, 104], "ibmq": [3, 14, 65, 100, 101], "fake": [3, 14], "simplifi": [3, 12, 66, 100], "approxim": [3, 14, 17, 18, 65, 87, 93, 94, 99, 100, 104], "properti": [3, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 69, 73, 74, 75, 76, 77, 78, 79, 87, 100], "real": [3, 65, 99, 100, 105], "fake_provid": [3, 100], "from_backend": [3, 14, 17, 18, 65, 88, 90, 100], "see": [3, 4, 9, 14, 17, 18, 19, 20, 65, 67, 91, 92, 94, 99, 101, 102, 103, 105], "document": [3, 10, 14, 65, 91, 92, 99, 104], "detail": [3, 9, 12, 14, 17, 18, 19, 20, 65, 94, 99, 100, 101, 103, 104, 105], "exampl": [3, 9, 12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 67, 68, 90, 91, 92, 102, 104, 105], "quantumcircuit": [3, 7, 8, 9, 11, 14, 17, 18, 19, 20, 21, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 69, 87, 89, 91, 92, 95, 99, 100, 101, 102, 104, 105], "aersimul": [3, 11, 12, 14, 66, 87, 88, 89, 90, 92, 100, 101, 102, 104, 105], "visual": [3, 91, 92, 99, 100, 101, 102, 104], "plot_histogram": [3, 99, 100, 101, 102, 104], "make": [3, 12, 14, 65, 66, 67, 68, 88, 90, 91, 92, 104], "circ": [3, 9, 11, 12, 87, 99, 100, 101, 104, 105], "3": [3, 9, 14, 17, 18, 21, 68, 87, 91, 92, 100, 101, 102, 103, 104, 105], "h": [3, 9, 11, 14, 26, 27, 99, 100, 101, 102, 104, 105], "0": [3, 9, 11, 12, 13, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 66, 67, 68, 69, 70, 72, 73, 82, 83, 84, 85, 86, 87, 88, 91, 92, 99, 100, 101, 102, 103, 104, 105], "cx": [3, 9, 11, 14, 65, 99, 100, 101, 102, 104, 105], "get": [3, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 87, 99, 100, 101, 105], "ibmq_lima": 3, "load_account": [3, 65], "get_provid": 3, "hub": 3, "ibm": [3, 4, 14, 17, 18, 66, 99, 100, 101, 102, 104, 105], "q": [3, 14, 101, 102, 103, 104, 105], "group": [3, 14, 17, 18, 19, 20, 87, 105], "open": [3, 14], "project": 3, "main": [3, 9], "backend_lima": 3, "get_backend": [3, 16, 65], "noise_model": [3, 17, 18, 65, 95, 96, 97, 101, 102], "coupl": [3, 14, 17, 18, 65, 100, 104], "map": [3, 14, 17, 18, 19, 20, 65, 67, 85, 100, 103], "coupling_map": [3, 17, 18, 19, 20, 65], "configur": [3, 9, 12, 14, 17, 18, 19, 20, 65, 91, 92, 99, 100, 101, 102], "basi": [3, 8, 14, 17, 18, 43, 44, 65, 91, 92, 94, 95, 100, 101, 102], "gate": [3, 12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 73, 75, 76, 77, 86, 95, 99, 100, 101, 103, 104, 105], "basis_g": [3, 14, 65, 102], "perform": [3, 9, 13, 14, 17, 18, 19, 20, 24, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 91, 92, 99, 103, 104], "transpiled_circuit": 3, "count": [3, 9, 14, 17, 91, 92, 99, 100, 101, 104, 105], "get_count": [3, 9, 14, 99, 100, 101, 102, 104, 105], "fakevigo": [3, 100], "quantumerror": [3, 14, 65, 66, 70, 71, 72, 73, 80, 81, 82, 83, 84, 85, 86, 94, 96, 97, 98, 101, 103], "reset": [3, 14, 17, 18, 19, 20, 65, 85, 86, 91, 92, 93, 94, 99, 101], "readouterror": [3, 65, 73, 74, 101], "includ": [3, 14, 37, 38, 39, 40, 41, 42, 65, 67, 73, 101, 102, 103, 105], "sever": [3, 8, 14, 64, 73, 87, 99, 103, 104, 105], "helper": [3, 14, 101], "canon": [3, 9, 70, 80, 83, 84, 99], "inform": [3, 9, 14, 17, 18, 19, 20, 65, 75, 76, 77, 78, 79, 86, 91, 92, 95, 100, 101, 105], "theori": [3, 101], "depolar": [3, 65, 72, 73, 82, 100, 101], "probabl": [3, 8, 9, 14, 17, 18, 23, 29, 30, 44, 50, 51, 65, 66, 67, 68, 81, 82, 85, 89, 91, 92, 94, 99, 100, 101, 102, 103, 104], "prob_1": [3, 65], "001": [3, 65], "prob_2": [3, 65], "01": [3, 65, 68, 92, 101, 102, 104], "error_1": [3, 65], "depolarizing_error": [3, 14, 65, 101], "error_2": [3, 65], "add": [3, 8, 9, 12, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 66, 69, 95, 101, 102, 103, 104], "add_all_qubit_quantum_error": [3, 65, 101, 102], "u1": [3, 101, 104], "u2": [3, 101], "u3": [3, 14, 101, 102], "term": [3, 14, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 66, 67, 73, 82, 99, 102, 104], "mani": [3, 14, 17, 18, 66, 70, 83, 84, 90, 101, 104, 105], "common": [3, 9, 101], "inclus": 3, "These": [3, 8, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 99, 101], "via": [3, 9, 14, 66], "extract": 3, "backendproperti": [3, 14, 17, 18, 19, 20, 65, 73, 74, 75, 76, 77, 78, 79, 100], "implement": [4, 12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 67, 89, 90, 91, 92, 101, 102, 104], "doc": [4, 14, 21], "http": [4, 9, 12, 13, 14, 21, 100, 101, 102, 104, 105], "com": [4, 9, 13, 14], "api": [4, 14, 17, 99], "descript": [4, 14, 17, 18, 19, 20, 99], "modifi": [7, 14, 37, 38, 39, 40, 41, 42, 64, 69, 91, 92, 100, 101, 102, 104, 105], "On": [8, 14], "avail": [8, 9, 14, 17, 18, 19, 20, 75, 76, 77, 78, 99, 104], "until": [8, 21, 66], "set_density_matrix": [8, 99], "paramet": [8, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103], "densitymatrix": [8, 14, 37, 58, 91, 99], "attach": [8, 14, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "valueerror": [8, 17, 18, 19, 20, 22, 23, 26, 27, 37, 40, 41, 42, 43, 44, 47, 48, 58, 59, 60, 61, 62, 63, 87, 89, 91, 92], "incorrect": [8, 14, 58, 59, 60, 61, 62, 63], "size": [8, 12, 14, 17, 18, 19, 20, 58, 60, 61, 62, 63, 66, 67, 105], "current": [8, 9, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 91, 92, 99, 103, 105], "set_stabil": [8, 99], "clifford": [8, 14, 17, 18, 24, 39, 45, 60, 66, 67, 93, 94, 99, 103, 104], "oper": [8, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 60, 63, 64, 66, 67, 69, 91, 92, 93, 94, 99, 103, 105], "set_unitari": [8, 99], "input": [8, 12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 62, 63, 64, 65, 66, 67, 69, 70, 80, 81, 82, 83, 84, 91, 92, 93, 94, 95, 99, 100], "set_superop": [8, 99], "quantumchannel": [8, 41, 62, 66, 67, 91, 94], "cptp": [8, 41, 62, 66, 67, 101, 103], "channel": [8, 14, 17, 18, 19, 20, 41, 62, 66, 67, 68, 70, 71, 72, 80, 81, 82, 83, 84, 85, 86, 93, 94, 101, 102, 103], "set_matrix_product_st": 8, "product": [8, 14, 17, 18, 28, 38, 49, 59, 66, 67, 68, 91, 92, 99, 101, 102], "tupl": [8, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 59, 64, 65, 66, 67, 69, 73, 75, 76, 77, 79, 88, 90, 91, 92], "np": [8, 12, 14, 38, 59, 67, 91, 92, 99, 101, 103, 105], "arrai": [8, 14, 38, 59, 66, 67, 90, 91, 92, 101, 102, 103, 105], "complex_t": [8, 38, 59], "float": [8, 14, 17, 18, 19, 20, 21, 38, 59, 65, 66, 68, 87, 88, 89, 91, 92, 99], "matrix_product_st": [8, 14, 17, 18, 28, 38, 49, 59, 92, 99, 105], "structur": [8, 14, 17, 18, 59, 105], "save_amplitud": 8, "param": [8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 64, 65, 69, 72, 91, 92], "amplitud": [8, 18, 22, 23, 43, 44, 70, 83, 92, 101, 102, 104, 105], "fals": [8, 12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 80, 87, 89, 95, 104], "condit": [8, 14, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 101], "complex": [8, 12, 14, 17, 18, 19, 20, 22, 38, 43, 91, 92, 105], "int": [8, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 64, 65, 66, 67, 68, 72, 87, 89, 90, 91, 92, 104], "str": [8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 69, 73, 87, 91, 92], "kei": [8, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 91, 92, 93, 94, 101], "retriev": [8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 99], "bool": [8, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 70, 73, 80, 83, 84, 87, 89, 92], "vector": [8, 14, 17, 18, 19, 20, 22, 23, 29, 38, 43, 44, 50, 51, 68, 91, 92, 101, 104, 105], "classic": [8, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 99, 100, 101, 104, 105], "regist": [8, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 99], "invalid": [8, 14, 22, 23, 26, 27, 43, 44, 47, 48, 64, 65, 67, 68, 72, 73, 80, 81, 83, 85, 86, 87, 89, 91, 92, 93, 94], "save_amplitudes_squar": 8, "amplitudes_squar": [8, 23, 44], "unnorm": [8, 23, 25, 26, 27, 29, 30, 44, 46, 47, 48, 50, 51], "squar": [8, 17, 18, 23, 44], "accumul": [8, 17, 18, 19, 20, 23, 25, 26, 27, 29, 30, 44, 46, 47, 48, 50, 51], "over": [8, 14, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 50, 51, 105], "save_clifford": 8, "alwai": [8, 14, 24, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 52, 54, 55, 56, 57, 73, 103], "defin": [8, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 52, 54, 55, 56, 57, 64, 65, 66, 67, 72, 73, 96, 103, 105], "across": [8, 14, 17, 45, 52, 54, 55, 56, 57], "save_density_matrix": [8, 14, 99], "none": [8, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 50, 51, 53, 64, 65, 66, 67, 69, 73, 74, 75, 76, 77, 78, 87, 88, 89, 90, 91, 92, 93, 94], "density_matrix": [8, 9, 14, 17, 18, 25, 46, 99], "full": [8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 105], "matric": [8, 14, 20, 25, 35, 38, 46, 56, 70, 80, 81, 83, 84, 101, 103], "averag": [8, 14, 25, 26, 27, 29, 30, 46, 47, 48, 50, 51, 100, 102], "save_expectation_valu": [8, 14, 26, 27], "expectation_valu": [8, 26, 47, 91, 92], "expect": [8, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 87, 88, 91, 92, 100, 102, 103, 104], "hermitian": [8, 26, 27, 47, 48], "pauli": [8, 14, 17, 26, 27, 47, 48, 66, 72, 82, 87, 91, 92, 93, 94, 101], "sparsepauliop": [8, 14, 26, 27, 47, 48, 66], "typeerror": [8, 17, 18, 19, 20, 26, 27, 47, 48, 87], "save_expectation_value_vari": 8, "expectation_value_vari": [8, 27, 48], "varianc": [8, 14, 27, 48, 99], "save_matrix_product_st": [8, 99, 105], "save_prob": 8, "outcom": [8, 17, 18, 29, 30, 50, 51, 68, 91, 92, 100, 102, 104], "snapshot": [8, 14, 17, 18, 22, 23, 29, 30, 50, 51, 105], "save_probabilities_dict": [8, 14], "save_stabil": [8, 14, 99], "stabilizerst": [8, 14, 31, 39, 52, 99], "save_st": [8, 17, 99], "option": [8, 9, 11, 12, 14, 17, 18, 19, 20, 32, 53, 64, 65, 66, 67, 69, 73, 87, 88, 89, 90, 91, 92, 102], "save_statevector": [8, 14, 99, 105], "save_statevector_dict": 8, "dict": [8, 12, 14, 16, 17, 18, 19, 20, 21, 30, 34, 55, 64, 65, 66, 69, 87, 88, 89, 90, 91, 92, 93, 94], "save_superop": [8, 14, 99], "save_unitari": [8, 14, 99], "depend": [9, 14, 17, 18, 32, 64, 69, 99], "packag": [9, 14, 99, 105], "its": [9, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 88, 90, 92, 93, 94, 99], "own": [9, 14, 37, 38, 39, 40, 41, 42, 88, 90, 101], "guid": [9, 99, 103], "environ": [9, 14, 101], "platform": [9, 14, 99], "should": [9, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 67, 73, 81, 82, 87, 95, 96, 99, 101, 102, 104], "refer": [9, 12, 14, 64, 65, 99], "Then": 9, "here": [9, 12, 14, 99, 103, 104], "focus": 9, "local": [9, 14, 105], "simplest": 9, "wai": [9, 14, 65, 104], "virtual": [9, 101], "where": [9, 14, 17, 18, 65, 66, 67, 68, 70, 72, 73, 81, 82, 83, 84, 85, 91, 92, 94, 96, 102, 103], "e": [9, 12, 14, 17, 18, 37, 38, 39, 40, 41, 42, 65, 66, 67, 72, 73, 85, 87, 89, 92, 93, 94, 99, 101, 103, 104], "g": [9, 14, 37, 38, 39, 40, 41, 42, 67, 92, 93, 94, 99, 101, 104], "pip": [9, 14, 99], "gpu": [9, 10, 13, 14, 17, 18, 19, 20], "order": [9, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 67, 68, 91, 92, 99, 101], "linux": [9, 14, 99], "need": [9, 11, 14, 17, 18, 19, 20, 99, 100, 101, 102, 103, 104, 105], "cuda": [9, 11, 14, 17, 99], "10": [9, 12, 17, 18, 19, 20, 68, 91, 92, 99, 100, 101, 102, 104], "newer": [9, 14, 99], "previous": [9, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 99], "itself": [9, 17, 64, 66, 67, 68, 69, 99, 105], "would": [9, 14, 99], "set": [9, 11, 12, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 87, 88, 89, 91, 92, 93, 94, 100, 101, 103, 104, 105], "driver": [9, 99], "pleas": [9, 12, 65, 99], "procedur": [9, 99], "nvidia": [9, 14, 17, 99], "web": [9, 99], "want": [9, 14, 65, 99, 104], "our": [9, 99, 101, 102, 103], "have": [9, 12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 66, 87, 91, 92, 96, 99, 100, 101, 102, 104, 105], "overwrit": [9, 99], "give": [9, 17, 18, 99, 101, 104], "same": [9, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 66, 67, 87, 91, 92, 96, 99, 101, 103, 104], "found": [9, 14, 16, 79, 99, 104], "plu": [9, 99, 102], "abil": [9, 14, 99], "x86_64": [9, 99], "build": [9, 14, 93, 94, 99, 100, 102], "sourc": [9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105], "allow": [9, 12, 14, 64, 69, 87, 91, 92, 99, 102, 105], "most": [9, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 100], "recent": [9, 14], "updat": [9, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 69, 87, 89, 99], "version": [9, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 87, 95, 100, 101, 102, 104, 105], "under": [9, 13, 91, 92, 100, 101, 102, 104, 105], "develop": [9, 14], "instead": [9, 14, 19, 20, 66, 67, 68, 73, 101, 103], "python": [9, 11, 12, 14, 21, 100, 101], "index": [9, 14, 92], "pypi": [9, 14], "repositori": [9, 14], "inspect": 9, "extend": [9, 14, 17, 18, 19, 20, 65, 99], "latest": [9, 14, 104], "code": [9, 11, 12, 13, 14, 92, 100, 101, 102, 103, 104, 105], "effici": [9, 14, 17, 18, 66, 99, 103, 104, 105], "sinc": [9, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 73, 87, 99, 102], "chang": [9, 14, 64, 66, 67, 69, 91, 92, 99], "new": [9, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 67, 88, 90, 95, 96, 97, 98, 101, 103, 104], "featur": 9, "": [9, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 66, 67, 73, 87, 88, 90, 91, 92, 94, 101, 102, 104], "clone": [9, 14], "repo": [9, 14], "git": 9, "github": [9, 13, 14], "dev": [9, 14], "txt": [9, 14, 100, 101, 102, 104, 105], "file": [9, 14, 100, 101, 102, 104, 105], "cd": [9, 14], "r": [9, 14, 91, 92, 103], "As": [9, 14, 103], "we": [9, 12, 14, 17, 18, 87, 91, 92, 99, 100, 101, 102, 103, 104, 105], "just": [9, 14, 101, 104], "suitabl": [9, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 103], "user": [9, 11, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "There": [9, 14, 101, 104, 105], "anoth": [9, 14, 66, 67, 91, 92, 100], "approach": 9, "softwar": 9, "wheel": [9, 14], "distribut": [9, 11, 12, 14, 17, 18, 66, 87, 88, 89, 101], "m": [9, 17, 18, 65, 68, 73, 101, 102], "exploit": [9, 17], "horsepow": 9, "acceler": [9, 14, 17], "special": [9, 12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 104], "larger": [9, 14, 17, 18, 91, 92], "ones": [9, 93, 104], "chipset": 9, "so": [9, 11, 12, 14, 17, 65, 91, 92, 99, 100, 102], "preinstal": 9, "moment": [9, 104], "onc": [9, 17, 18, 90, 100, 104], "properli": [9, 14], "flag": [9, 12, 14, 65, 73], "system": [9, 12, 14, 17, 18, 19, 20, 91, 92, 99, 101], "know": [9, 14, 102, 104], "what": [9, 101, 102, 104], "do": [9, 10, 12, 14, 17, 18, 99, 100, 102, 103, 104, 105], "aer_thrust_backend": 9, "setup": [9, 14], "py": [9, 12, 14], "bdist_wheel": [9, 14], "daer_thrust_backend": [9, 14], "mpi": [9, 12, 13, 14, 17], "parallel": [9, 11, 12, 14, 17, 18, 19, 20], "cluster": [9, 12, 14], "memori": [9, 12, 14, 17, 18, 19, 20, 99, 104, 105], "space": [9, 12, 14], "comput": [9, 13, 14, 17, 18, 91, 92, 95, 101, 102, 103, 104, 105], "To": [9, 11, 12, 14, 17, 18, 99, 103, 104, 105], "openmpi": 9, "without": [9, 12, 13, 14, 17, 99, 102, 104], "enabl": [9, 14, 17, 18, 19, 20, 67, 99, 104], "cmake": [9, 14], "aer_mpi": 9, "daer_mpi": [9, 14], "now": [9, 14, 100, 101, 102], "samplerv2": [9, 14], "ghz": [9, 79, 100, 101], "state": [9, 12, 14, 17, 18, 19, 20, 21, 24, 26, 27, 28, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 83, 84, 86, 87, 100, 101, 102, 103, 104], "measure_al": [9, 12, 14, 99, 101], "sampler": [9, 14, 17, 18, 88, 90], "128": 9, "result_id": [9, 101], "counts_id": 9, "data": [9, 12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 91, 92, 99, 100, 105], "mea": [9, 101], "print": [9, 14, 65, 91, 92, 99, 101, 102, 103, 104, 105], "dive": 9, "tutori": [9, 14, 99, 100, 104, 105], "find": [9, 12, 14, 66, 103], "out": [9, 14, 105], "about": [9, 14], "section": 10, "concret": [10, 37, 38, 39, 40, 41, 42, 87], "step": [10, 14, 99, 104], "action": 10, "threadpool": 10, "multipl": [10, 11, 13, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 67, 104], "node": 10, "worker": 11, "multiprocess": [11, 14], "handl": [11, 14, 17, 18, 19, 20, 37, 38, 39, 40, 41, 42, 101, 104, 105], "low": [11, 17, 18, 19, 20, 104, 105], "level": [11, 14], "openmp": [11, 14, 17, 18, 19, 20], "custom": [11, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 73, 101], "control": [11, 14, 17, 18, 19, 20, 88, 102, 104, 105], "split": [11, 14, 17, 18, 19, 20], "max_job_s": [11, 14, 17, 18, 19, 20], "set_opt": [11, 14, 17, 18, 19, 20, 87, 89, 99], "chunk": [11, 12, 14, 17], "submit": [11, 12, 17, 18, 19, 20, 21], "them": [11, 12, 14, 99, 102], "one": [11, 14, 16, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 73, 87, 92, 99, 101, 103], "60": [11, 104], "30": [11, 12, 101], "concurr": [11, 14, 21], "futur": [11, 14, 17, 18, 19, 20, 21, 67], "threadpoolexecutor": [11, 14, 21], "math": [11, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "pi": [11, 14, 99], "15": [11, 17, 100, 101, 105], "p": [11, 66, 67, 68, 81, 82, 101, 103], "circ2": 11, "circ_list": 11, "qbackend": 11, "exc": 11, "max_work": 11, "decreas": [12, 14, 17, 18], "transfer": 12, "between": [12, 14, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 91, 92, 94, 99, 101], "sub": [12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "smaller": [12, 14, 17, 18, 104], "20": [12, 14, 91, 92, 99, 100, 105], "exchang": [12, 14], "cach": [12, 14], "block": [12, 14, 93, 94], "techniqu": [12, 14, 17], "independ": [12, 14, 17], "serial": [12, 14, 21, 65], "reus": 12, "befor": [12, 14, 17, 18, 21, 64, 99, 100, 101, 103, 104], "transpil": [12, 14, 64, 87, 89, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105], "remap": [12, 14], "equival": [12, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 67, 68, 91, 92, 101], "lower": 12, "And": [12, 14, 102], "noiseless": 12, "swap": [12, 14, 17, 91, 92, 105], "insert": [12, 14, 17, 64, 91, 92, 95, 101, 102], "paper": [12, 104, 105], "arxiv": [12, 94, 104, 105], "org": [12, 14, 21, 100, 101, 102, 104, 105], "ab": [12, 105], "2102": 12, "02957": 12, "algorithm": [12, 14, 17, 18, 66, 105], "enough": 12, "recommend": [12, 14], "explicitli": [12, 14, 91, 92, 103], "blocking_en": [12, 17], "blocking_qubit": [12, 14, 17], "smallest": [12, 17, 18], "satisfi": [12, 86], "sizeof": 12, "4": [12, 14, 17, 72, 99, 101, 102, 103, 104, 105], "byte": [12, 14, 17, 18, 19, 20], "how": [12, 14, 17, 18, 19, 20, 37, 38, 39, 40, 41, 42, 99, 100, 101, 102, 103], "sim": [12, 14], "devic": [12, 14, 17, 18, 19, 20, 65, 73, 74, 75, 76, 77, 78, 79, 99], "quantumvolum": 12, "seed": [12, 14, 87, 89, 90, 91, 92, 99], "100": [12, 17, 18, 99, 101, 104], "23": [12, 99, 103], "script": 12, "mpirun": 12, "show": [12, 99, 100, 102, 103, 105], "process": [12, 14, 17, 94, 105], "mpi_init": 12, "call": [12, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 66, 90, 100, 104], "insid": [12, 14], "metadata": [12, 14, 17, 18, 19, 20, 91, 92], "num_mpi_process": 12, "mpi_rank": 12, "zero": [12, 14, 17, 18, 19, 20, 65, 66, 73, 74, 91, 92, 104], "rank": [12, 14, 17, 18, 92, 99, 104], "id": [12, 14, 17, 21, 65, 66, 67, 101, 102], "my": 12, "to_dict": [12, 14, 65, 66, 67, 68, 91, 92], "meta": 12, "myrank": 12, "batched_shots_gpu": [12, 14, 17], "sure": [12, 14, 65], "random": [12, 14, 17, 18, 90, 91, 92, 99, 101, 104], "consist": [12, 14, 38, 65, 91, 92, 95, 100, 102], "pass": [12, 14, 17, 18, 19, 20, 21, 64, 65, 69, 87, 88, 89, 90, 91, 92, 97, 98, 101, 103], "algorithm_glob": 12, "random_se": 12, "consistent_seed_to_all_process": 12, "high": [13, 104], "realist": [13, 101], "interfac": [13, 14, 17, 18, 19, 20, 67], "differ": [13, 14, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 92, 99, 101, 102, 104], "leverag": [13, 14], "improv": [13, 14, 17, 99], "licens": [13, 100, 101, 102, 104, 105], "apach": [13, 100, 101, 102, 104, 105], "host": [13, 14], "8": [14, 17, 18, 19, 20, 66, 68, 100, 101, 102, 104, 105], "longer": [14, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 104], "revert": 14, "from_dict": [14, 65, 66, 67], "temporari": 14, "period": 14, "runtim": [14, 17, 18, 66, 87, 88, 89, 90, 92, 104], "remov": [14, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 66, 87], "again": [14, 104], "compil": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 100, 102], "x": [14, 65, 91, 92, 93, 94, 101, 103], "limit": [14, 17, 18, 100, 103], "cuquantum": [14, 17], "solv": [14, 103], "link": 14, "glibc": 14, "unlimit": 14, "empti": [14, 65, 101], "bodi": 14, "caus": 14, "mix": [14, 81, 82, 86, 101, 104], "lead": 14, "sometim": [14, 17], "infinit": [14, 70, 83, 84], "ensur": [14, 100, 102, 103], "preserv": [14, 66, 67, 103], "prevent": 14, "estim": [14, 17, 18, 88, 89], "too": [14, 17, 18, 19, 20, 103], "larg": [14, 17, 18, 91, 92, 104], "even": [14, 65, 73, 105], "max_memory_mb": [14, 17, 18, 19, 20], "sigsegv": 14, "unsupport": 14, "std": 14, "avoid": [14, 104], "small": [14, 17, 18, 19, 20, 65, 102, 105], "expval": [14, 88, 91, 92], "truncat": [14, 17, 18, 19, 20, 65, 99, 101], "mechan": 14, "activ": [14, 17, 21, 100], "correctli": 14, "failur": 14, "unus": 14, "test": [14, 66, 101], "0rc1": 14, "0b1": 14, "protect": 14, "rule": 14, "local_noise_pass": 14, "convers": [14, 101, 105], "save_expv": 14, "estimatorv2": 14, "made": [14, 93, 94, 104], "exist": [14, 65, 101], "By": [14, 17, 100, 102], "ancilla": 14, "fill": 14, "error": [14, 15, 17, 18, 19, 20, 21, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104], "extended_stabil": [14, 17, 18, 99, 104, 105], "tensor_network": [14, 17, 99], "ecr": 14, "check": [14, 17, 18, 19, 20, 64, 66, 67, 68, 69, 91, 92, 101], "rz": [14, 65, 101], "n": [14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 66, 67, 68, 72, 73, 76, 79, 88, 91, 92, 99, 101, 105], "well": [14, 105], "crx": 14, "cry": 14, "crz": 14, "tensor_netowork": 14, "paulierror": [14, 66], "class": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 66, 67, 68, 69, 87, 88, 89, 90, 91, 92, 101, 102, 104], "interchang": 14, "paulilist": [14, 66], "compos": [14, 66, 67, 68, 101], "tensor": [14, 17, 18, 66, 67, 68, 91, 92, 99, 101, 102, 105], "paulilindbladerror": 14, "lindblad": [14, 66], "dissip": [14, 66], "represent": [14, 17, 18, 68, 70, 80, 83, 84, 87, 91, 92, 99, 103, 104, 105], "spars": [14, 17, 18, 66], "v2": 14, "been": [14, 19, 20, 21, 37, 38, 39, 40, 41, 42, 100, 101, 102, 104, 105], "match": [14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 91, 92], "circuit_metadata": 14, "doe": [14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 88, 90, 91, 92, 93, 94, 99, 101, 102, 103], "samplerpubresult": [14, 90], "wa": [14, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 68, 105], "introduc": [14, 101], "precis": [14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 88, 104], "primitivejob": [14, 88, 90], "primitiveresult": [14, 88, 90], "pubresult": [14, 88], "won": 14, "t": [14, 17, 18, 19, 20, 37, 38, 39, 40, 41, 42, 87, 89, 94, 99, 101, 104, 105], "accept": 14, "later": 14, "standalon": 14, "qobj": [14, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 67], "move": 14, "delai": [14, 65], "configul": 14, "resolv": 14, "report": [14, 17, 100], "2152": 14, "simulator_metadata": 14, "similar": [14, 105], "flow": 14, "store": [14, 17, 18, 19, 20, 66, 92, 100, 101], "newli": 14, "fail": [14, 17, 18, 93, 94, 96, 97, 98, 104], "pr": 14, "aerbackend": [14, 17, 18, 19, 20, 21], "set_max_qubit": [14, 17, 18, 19, 20], "did": 14, "n_qubit": [14, 19, 20, 101], "overwritten": [14, 93, 94], "initi": [14, 17, 18, 19, 20, 21, 64, 65, 66, 69, 91, 92, 102, 104, 105], "_set_configuration_opt": 14, "custatevec_en": [14, 17], "alloc": 14, "2197": 14, "v1": 14, "target": [14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 73, 74, 88, 94, 102, 104], "qubit_properti": [14, 17, 18, 19, 20], "rust": 14, "qobjexperimenthead": 14, "aercompil": 14, "2187": 14, "replac": [14, 64, 93], "genericbackendv2": 14, "unitaryg": 14, "diagonalg": 14, "mayb": [14, 105], "12953": 14, "outsid": [14, 101], "inlin": 14, "clbit": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "broken": 14, "cf510a2": 14, "correct": [14, 100, 102], "cope": 14, "circuitinstruct": 14, "2171": 14, "2084": 14, "dynam": [14, 17, 18, 19, 20], "wrong": 14, "were": [14, 103], "decompos": [14, 18, 66, 102, 104, 105], "jump": 14, "mark": 14, "op": [14, 67, 69, 81, 82], "intern": [14, 17, 65, 91, 92, 105], "init": [14, 65, 67], "determinist": 14, "loop": 14, "samplingvector": 14, "63": [14, 104], "mac": 14, "hook": 14, "omp": [14, 17], "necessari": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "work": [14, 100, 101, 102, 105], "servic": 14, "aerstatevector": [14, 91], "aerdensitymatrix": 14, "aerprovid": 14, "warn": [14, 17, 65, 73, 87], "bind": [14, 17, 18, 19, 20], "popul": [14, 69, 70, 83, 86, 101], "buffer": [14, 17], "bound": [14, 17, 21, 65, 87, 89, 103], "copi": [14, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 67, 68, 91, 92, 100, 101, 102, 104, 105], "maco": [14, 17], "arm64": 14, "disabl": [14, 17, 18, 19, 20, 73], "2106": 14, "restor": 14, "backendv2": [14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65], "summari": 14, "optim": [14, 17, 18, 19, 20, 64, 69, 103, 104], "bla": 14, "lapack": [14, 17], "next": [14, 105], "bit_not": 14, "uint": 14, "languag": 14, "hardwar": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 100], "logical_not": 14, "implicit": 14, "take": [14, 17, 100, 102, 104, 105], "long": [14, 17, 18], "time": [14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 66, 67, 68, 69, 73, 77, 86, 100, 101, 104, 105], "svd": [14, 17, 18], "openbla": [14, 17], "zgesvd": 14, "zgesdd": 14, "better": [14, 17, 18, 103, 104], "wherea": 14, "variabl": 14, "qiskit_lapack_svd": 14, "dc": 14, "bitvector": 14, "bit": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 67, 68, 100], "reg_t": 14, "save": [14, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 105], "usag": 14, "bandwidth": 14, "basesamplerv2": [14, 90], "statevectorsampl": 14, "nativ": [14, 99], "ccz": 14, "tensornet": 14, "mcz": 14, "use_bundled_blas_win": 14, "search": 14, "against": [14, 21], "bundl": 14, "ignor": [14, 17, 37, 38, 39, 40, 41, 42, 65, 74, 87, 89], "sample_measure_al": 14, "un": [14, 65], "speed": [14, 17], "up": [14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 67, 92, 104], "psutil": 14, "determin": [14, 17, 101, 103, 105], "amount": 14, "physic": [14, 65, 66], "resourc": 14, "effect": [14, 65, 73, 100, 103, 105], "alreadi": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65], "instal": [14, 17, 93, 94], "But": [14, 104], "direct": [14, 17], "observ": [14, 87, 88], "argument": [14, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 67, 68, 73, 87, 89, 91, 92, 93, 94, 99, 102], "paulisumop": 14, "44": 14, "altern": [14, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "name": [14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 69, 73, 75, 76, 77, 93, 94, 99, 101, 102, 103], "enumer": 14, "upgad": 14, "45": 14, "1987": 14, "given": [14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 68, 85, 87, 89, 90, 91, 92, 93, 94, 100, 101, 103], "1988": 14, "1982": 14, "maneg": 14, "rebuild": 14, "unnecessari": [14, 17, 18], "rotat": [14, 92], "faster": 14, "first": [14, 17, 18, 38, 102, 104], "side": 14, "1938": 14, "switch_cas": 14, "batch": [14, 17], "share": [14, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "rngengin": 14, "amongst": 14, "extendedstabil": 14, "apply_ops_parallel": 14, "thread": [14, 17], "safeti": 14, "terra": [14, 100, 101], "test_aer_statevector": 14, "testaerstatevector": 14, "test_number_to_latex_term": 14, "sort": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "output": [14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 66, 67, 69, 91, 92, 93, 94, 100, 101, 103, 104], "test_device_model": 14, "test_basic_device_gate_errors_from_target_and_properti": 14, "compar": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 100], "global": [14, 66, 67, 92], "phase": [14, 66, 67, 83, 84, 92, 101], "multipli": [14, 66, 67], "wrongli": 14, "increas": [14, 99, 105], "rxx": 14, "ryi": 14, "rzx": 14, "theta": 14, "read": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 69, 104], "executor": [14, 17, 18, 19, 20, 21], "revers": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 67, 68, 91, 92, 101, 105], "fit": 14, "older": 14, "verison": 14, "bacth": 14, "queri": [14, 17, 18, 19, 20, 21], "simpl": [14, 99, 101], "c": [14, 99, 102, 103], "binari": [14, 66, 67, 92], "built": [14, 17], "cpu": [14, 17, 18, 19, 20, 99], "target_gpu": [14, 17], "ry": 14, "pi3": 14, "invert": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "due": [14, 100], "diagon": [14, 91, 92], "aer_compil": 14, "optimizaiton": 14, "optimization_level": 14, "highlight": [14, 104], "branch": [14, 17], "shot_branching_en": [14, 17], "multi": [14, 17, 18, 19, 20, 65], "start": [14, 17, 104], "express": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 86, 105], "parameter": [14, 64, 101], "With": [14, 104], "runtime_parameter_bind_en": [14, 17], "path": 14, "amd": 14, "rocm": 14, "qiskit_add_cuda_requir": 14, "No": [14, 17], "off": 14, "ye": [14, 17], "assum": [14, 65, 87, 91, 92, 102], "thrust": 14, "instinct": 14, "line": [14, 17, 18, 19, 20, 91, 92], "cdna": 14, "architectur": 14, "suffici": 14, "folder": 14, "ninja": 14, "dcmake_install_prefix": 14, "dskbuild": 14, "ON": 14, "whether": [14, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 87], "daer_rocm_arch": 14, "white": 14, "separ": [14, 73, 99], "gfx90a": 14, "gfx908": 14, "dcmake_build_typ": 14, "dbuild_test": 14, "possibli": 14, "prefer": 14, "creat": [14, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 67, 68, 99, 100, 101, 104, 105], "part": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 100, 101, 102, 104, 105], "your": [14, 99, 101, 104], "environemnt": 14, "qiskit_aer_package_nam": 14, "python3": 14, "forc": 14, "reinstal": 14, "dist": 14, "qiskit_aer_gpu_rocm": 14, "whl": 14, "rocm_path": 14, "point": [14, 17, 18, 19, 20], "opt": [14, 104], "might": [14, 21, 64, 69], "restructur": 14, "statechunk": 14, "circuitexecutor": 14, "applic": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 70, 83, 84], "shot_branching_sampling_en": [14, 17], "done": [14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 91, 92, 94, 99, 102], "aer_stabilizer_simul": 14, "1883": 14, "dictionari": [14, 17, 18, 19, 20, 34, 65, 66, 67, 68, 91, 92, 93, 94, 99, 103], "style": 14, "mismatch": [14, 17, 18, 19, 20], "noiseerror": [14, 65, 67, 68, 72, 73, 74, 80, 81, 82, 83, 85, 86, 93, 94, 96, 97, 98], "els": 14, "pars": 14, "noise_op": [14, 67, 80, 81, 82], "paramt": 14, "sed": 14, "Not": [14, 103], "footprint": 14, "facilit": 14, "purpos": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "like": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 67, 71, 88, 90, 91, 92, 101, 104], "qiskit_aer_cuda_major": 14, "cuda_major": 14, "c_if": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "thrown": [14, 17, 18, 19, 20], "expr": 14, "aererror": [14, 17, 18, 19, 20, 91, 92, 99], "convert": [14, 65, 66, 67, 68, 69, 70, 80, 83, 84, 91, 92, 103], "correspond": [14, 37, 38, 39, 40, 41, 42, 66, 89, 91, 92], "cexpr": 14, "evalu": [14, 88, 89, 91, 92], "regcomparison": 14, "bfunc": 14, "controlflow": 14, "switchcaseop": 14, "24": [14, 101], "aermark": 14, "aerjump": 14, "aer_apply_u3": 14, "aer_runtime_api": 14, "1681": 14, "backendv1": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "string": [14, 17, 18, 65, 66, 67, 68, 73, 82, 87, 91, 92, 93, 94, 102, 103], "attribut": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 66, 67, 68, 69, 87, 88, 89, 90, 91, 92], "abelian_group": [14, 87], "though": [14, 66, 104], "switch": 14, "commit": 14, "incorrectli": 14, "higher": 14, "minimum": [14, 17, 18], "upstream": 14, "ecosystem": 14, "cu11": [14, 99], "re": [14, 21, 104], "uninstal": 14, "u": [14, 65, 73, 81, 99, 101, 102], "go": [14, 91, 92], "compat": [14, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 67], "normal": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 68, 87, 88, 101, 105], "rx": [14, 99], "Of": 14, "drop": 14, "pulsesimul": 14, "puls": [14, 17, 18, 19, 20, 101], "extens": 14, "io": 14, "meth": 14, "contrib": 14, "expos": 14, "sx": [14, 65, 101], "aerstat": 14, "apply_mcsx": 14, "aer_apply_sx": 14, "behavior": [14, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "behav": 14, "1925": 14, "regress": 14, "introduct": 14, "config": [14, 91, 92], "field": [14, 17, 18, 19, 20, 87, 89], "frequent": 14, "circuitoptim": 14, "origin": [14, 66, 67, 79, 95, 96, 100, 101, 102, 104, 105], "json_t": 14, "former": 14, "entri": [14, 22, 23], "overhead": 14, "problem": [14, 103], "crash": 14, "messag": [14, 15, 104], "catch": 14, "rethrow": 14, "shorter": 14, "segmentaion": 14, "fault": 14, "lenght": 14, "expcet": 14, "1612": 14, "temporarili": [14, 17, 18, 19, 20], "constant": [14, 66, 67, 86, 100, 101], "assign": [14, 68, 101, 102], "therefor": [14, 105], "parameter_bind": [14, 17, 18, 19, 20, 21], "constnat": 14, "libaer": 14, "opposit": 14, "indic": [14, 17, 66, 103], "affect": [14, 17, 18, 103], "maintain": 14, "unexpect": [14, 21], "view": 14, "applicatiln": 14, "simiul": 14, "internali": 14, "estimatorresult": [14, 87], "align": 14, "64": [14, 101], "qv": 14, "qubitvector": 14, "storag": 14, "ownership": 14, "least": 14, "32": [14, 17, 18, 102, 104], "avx2": 14, "load": [14, 65], "enforc": 14, "doesn": [14, 17, 18, 19, 20], "segment": 14, "window": 14, "vc": 14, "unrol": [14, 99, 102], "1918": 14, "break": 14, "cuquautum": 14, "aer_enable_cuquantum": 14, "non": [14, 17, 18, 65, 66, 73, 74, 86, 91, 92, 99, 103, 104], "temperatur": [14, 65, 73], "produc": [14, 90, 101], "relax": [14, 65, 69, 73, 86, 100], "excit": [14, 65, 69, 73, 101], "1937": 14, "t1": [14, 65, 69, 73, 79, 86], "t2": [14, 65, 69, 73, 79, 86], "basic_device_gate_error": 14, "thei": [14, 17, 18, 19, 20, 37, 38, 39, 40, 41, 42, 65, 66, 100, 101, 102, 104, 105], "ident": [14, 20, 65, 66, 67, 68, 72, 73, 103], "thermal": [14, 65, 69, 73, 86, 100], "act": [14, 65, 101, 104], "1779": 14, "1815": 14, "while": [14, 66, 67, 73, 105], "oversight": 14, "previou": [14, 102], "1818": 14, "1896": 14, "accord": [14, 101, 103], "1769": 14, "aer_state_initi": 14, "aer_stat": 14, "handler": 14, "rouboust": 14, "cmakelist": 14, "sdk": 14, "findcuda": 14, "cutensor": 14, "static": [14, 65, 66, 67, 91, 92], "cuquantum_stat": 14, "miss": [14, 17, 18, 19, 20, 101], "ld_library_path": 14, "matplotlib": [14, 91, 92], "seaborn": 14, "nest": 14, "less": [14, 17, 82], "omp_nest": 14, "experi": [14, 17, 18, 19, 20, 104], "veri": [14, 17], "slow": 14, "fusion": [14, 17, 18, 19, 20], "region": 14, "aercircuit": 14, "iter": [14, 17, 18, 19, 20, 67, 88, 90, 91, 92], "skip": [14, 87, 89, 100], "barrier": [14, 37, 38, 39, 40, 41, 42, 102], "posit": [14, 21, 66, 67, 68, 91, 92, 103], "keep": 14, "parametr": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "lack": 14, "consider": 14, "inject": 14, "bfun": 14, "1814": 14, "pull": 14, "templat": 14, "still": [14, 17, 18], "run_opt": [14, 17, 18, 19, 20, 21, 87, 88, 89, 90], "aerconfig": 14, "strict": 14, "cast": 14, "adress": 14, "two": [14, 17, 18, 65, 73, 91, 92, 100, 101, 102, 103, 104, 105], "char": 14, "const": 14, "conan": 14, "cacheblock": [14, 17], "insert_sim_op": 14, "1905": 14, "1906": 14, "serializ": [14, 65], "openqasm3": 14, "text": [14, 72, 85, 91, 92, 103], "1821": 14, "global_phas": 14, "relat": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 100], "1795": 14, "1781": 14, "1798": 14, "omp_set_max_active_level": 14, "omp_set_nest": 14, "set_config": 14, "required_memory_mb": 14, "max": 14, "bond": [14, 17, 18, 99], "dimens": [14, 17, 18, 66, 67, 68, 91, 92, 99], "requried_memory_mb": 14, "overflow": 14, "integ": [14, 17, 18, 19, 20, 66, 67, 68, 91, 92], "size_max": 14, "statvector": 14, "network": [14, 17, 18, 99], "cutensornet": [14, 17], "greatli": [14, 17], "legaci": 14, "qasmqobj": [14, 21], "notic": [14, 100, 101, 102, 104, 105], "keyword": [14, 97, 98, 99], "from_backend_properti": [14, 65], "present": 14, "constructor": [14, 91, 92], "alon": 14, "back": [14, 101, 105], "wise": 14, "commut": [14, 87], "initialize_density_matrix": 14, "ndarrai": [14, 91, 92], "boolean": [14, 95], "collect": [14, 90], "classess": 14, "accomplish": 14, "circut": 14, "simual": 14, "dask": 14, "aerjob": [14, 17, 18, 19, 20], "krau": [14, 67, 70, 80, 83, 84, 86, 95, 101, 103], "randomli": [14, 17, 18, 99], "translat": 14, "tensor_net_sim": 14, "slice": 14, "complic": 14, "bla_vendor": 14, "stop": 14, "seri": [14, 105], "manual": [14, 65, 99, 102], "1730": 14, "desir": [14, 102], "context": [14, 21], "22": [14, 91, 92, 99, 100, 101, 105], "octob": 14, "2022": [14, 100], "otherwis": [14, 17, 24, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 66, 67, 79, 87, 89, 91, 92, 99], "unsimulat": 14, "whose": [14, 93, 94], "partial": [14, 91], "complet": [14, 21, 64, 66, 69, 72, 103, 104], "status": 14, "try": [14, 21, 99, 104, 105], "unabl": 14, "mode": 14, "json": [14, 21, 65, 66], "retain": [14, 17, 18, 100, 101, 102, 104, 105], "add_nonlocal_quantum_error": 14, "write": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 69, 101], "standard_g": 14, "broadli": 14, "below": [14, 102, 105], "kraus_error": [14, 101], "mixed_unitary_error": [14, 101], "pauli_error": [14, 101, 103], "standard_error": 14, "__init__": 14, "mean": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 69, 101, 104], "agnost": 14, "stypl": 14, "igat": [14, 67], "xgate": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 67, 93, 94], "number_of_qubit": [14, 68], "atol": [14, 66, 67, 68, 91, 92], "much": [14, 17, 18, 105], "care": 14, "errorutil": 14, "entir": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "meant": 14, "privat": 14, "noise_remapp": 14, "pauli_oper": 14, "reset_oper": 14, "noisetransform": 14, "noise_transform": 14, "fact": [14, 100], "approximate_quantum_error": [14, 103], "public": 14, "schedul": [14, 17, 18, 19, 20, 69], "respect": [14, 91, 92, 102, 105], "attempt": [14, 21], "setup_requir": 14, "setuptool": 14, "pep": 14, "517": 14, "builder": 14, "modern": 14, "guidelin": 14, "7": [14, 17, 20, 99, 100, 101, 102, 103, 104], "flexibl": 14, "robust": 14, "framework": 14, "anywai": 14, "d": [14, 17, 18, 91, 92, 103], "favor": 14, "filter": [14, 16], "standard": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 99, 101, 102, 103], "numpi": [14, 79, 91, 92, 99, 101, 103, 105], "had": 14, "contigu": 14, "potenti": 14, "layout": 14, "1679": 14, "free": [14, 95, 99], "prior": 14, "occur": [14, 21, 100], "afterward": 14, "post": [14, 91, 92, 99], "accur": [14, 17, 18], "entangl": [14, 105], "1694": 14, "break_loop": 14, "continue_loop": 14, "migrat": 14, "self": [14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 91, 92], "namespac": 14, "gracefulli": 14, "basesampl": 14, "baseestim": [14, 87], "extern": [14, 88, 90], "program": 14, "experiment": 14, "m1": 14, "precompil": 14, "publish": [14, 104], "experiement": 14, "beta": 14, "custatevec": [14, 17], "custatevec_root": 14, "custatevector": 14, "custatevec_threshold": 14, "equal": [14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 67, 100, 104], "greater": [14, 17, 18, 19, 20, 67, 82, 91, 92], "ppc64le": 14, "s390x": 14, "pre": [14, 93, 94], "unlik": [14, 65, 99], "yet": 14, "addition": 14, "constraint": [14, 103], "guarante": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "around": [14, 17, 18], "don": [14, 105], "rl": 14, "qc": 14, "big": 14, "endian": 14, "endia": 14, "1506": 14, "commun": [14, 17], "scalabl": 14, "fusion_max_qubit": [14, 17, 18, 19, 20], "fusion_threshold": [14, 17, 18, 19, 20], "5": [14, 17, 18, 19, 20, 21, 66, 91, 92, 99, 100, 101, 102, 103, 104], "41": [14, 102], "turn": 14, "6": [14, 91, 99, 100, 101, 102, 103, 104, 105], "problemat": 14, "reason": 14, "awai": 14, "continu": 14, "redirect": 14, "emit": 14, "deprecationwarn": 14, "snapshotstatevector": 14, "becom": 14, "serv": [14, 103], "bump": 14, "1st": 14, "receiv": 14, "multiplex": [14, 17, 18, 19, 20], "relaxationnoisepass": 14, "durat": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 69], "dt": [14, 17, 18, 19, 20, 65, 69], "unit": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 69, 73, 76, 79], "regardless": [14, 101, 105], "isntruct": 14, "1453": 14, "succe": 14, "for_loop": 14, "rang": [14, 91, 92, 99, 101, 104, 105], "suppli": [14, 64, 65, 69, 73, 74, 96], "after": [14, 21, 64, 69, 70, 83, 84, 87, 95, 100, 101], "1391": 14, "silent": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "1464": 14, "unintend": 14, "1407": 14, "1557": 14, "seed_simul": [14, 87, 89], "assembl": [14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "1415": 14, "reproduc": 14, "1511": 14, "1473": 14, "40": [14, 101, 104], "hpc": 14, "qasm": 14, "19": [14, 99, 101], "forloopop": 14, "whileloopop": 14, "continueloopop": 14, "breakloopop": 14, "ifelseop": 14, "intermedi": [14, 17], "benefici": 14, "medium": 14, "maximum": [14, 17, 18, 19, 20, 67], "batch_shots_gpu_max_qubit": 14, "max_shot_s": [14, 17, 18, 19, 20], "custom_executor": 14, "individu": [14, 65, 99, 100], "finish": 14, "combin": [14, 66, 67, 83, 87, 88, 100, 104], "mps_swap_direct": [14, 17], "possibl": [14, 17, 18, 93, 94, 99, 103], "mps_swap_right": [14, 17], "mps_swap_left": [14, 17], "mps_sample_measure_algorithm": [14, 17, 18], "mps_probabl": [14, 17, 18], "essenti": 14, "localnoisepass": [14, 69, 101], "form": [14, 17, 18, 19, 20, 34, 91, 92, 105], "def": [14, 64], "fn": [14, 21], "inst": [14, 64], "instructionlik": [14, 64], "arguement": 14, "predefin": 14, "thermal_relaxation_error": [14, 65, 100, 101], "ibmq_backend": 14, "scheduled_circuit": 14, "scheduling_method": 14, "asap": 14, "obtain": [14, 17, 65, 66, 67, 69, 99, 100], "sqrt": [14, 67, 70, 83, 84, 92, 99, 103], "dtype": 14, "associ": [14, 64, 69], "short": 14, "hand": 14, "deperec": 14, "transform_noise_model": 14, "transpile_quantum_error": [14, 97], "transpile_noise_model": 14, "error_h": 14, "95": [14, 101], "05": [14, 17, 18, 66, 67, 91, 92, 101, 102, 104], "error_cx": 14, "ii": 14, "xx": 14, "raw": [14, 79, 91, 92], "probdistribut": 14, "runtimeerror": 14, "backward": [14, 67], "treat": 14, "forward": 14, "incompat": [14, 66, 67, 68], "transform": [14, 64, 69, 93, 94, 96, 97, 98], "mixtur": [14, 67, 93, 94], "approximate_noise_model": [14, 103], "approximate_": 14, "remap_noise_model": 14, "exeuct": 14, "along": [14, 100], "sxdggate": 14, "cugat": 14, "generalized_g": 14, "paulig": 14, "clustor": 14, "exect": 14, "aerjobset": 14, "processpoolexecutor": 14, "__": 14, "client": 14, "old": 14, "backend_opt": [14, 17, 18, 19, 20, 87, 88, 89, 90], "methnod": 14, "system_model": 14, "arg": [14, 64, 69], "inconsist": 14, "throw": 14, "insuffici": [14, 104], "k": [14, 101], "1024": [14, 90], "max_parallel_experi": [14, 17, 18, 19, 20], "qelai": 14, "typo": 14, "extended_stabilizer_norm_estimation_repetit": [14, 17, 18], "with_traceback": 15, "tb": 15, "__traceback__": 15, "callabl": [16, 21, 64, 69, 96], "criteria": 16, "qiskitbackendnotfounderror": 16, "could": 16, "appropri": [17, 18, 19, 20, 100], "overrid": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 73, 99, 101], "mimic": [17, 18], "available_method": [17, 18, 19, 20, 99], "dens": [17, 18, 66, 99], "decomposit": [17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 99, 104], "grow": [17, 18, 99, 105], "behaviour": [17, 99], "evolut": [17, 91, 99], "superoper": [17, 99, 101], "available_devic": [17, 18, 19, 20, 99], "gpu_parallel_shots_": 17, "batched_shots_optimization_parallel_gpu": 17, "chunk_parallel_gpu": 17, "availab": [17, 18], "doubl": [17, 18, 19, 20, 38, 65, 68, 70, 72, 73, 81, 82, 83, 84, 85, 86, 99], "asynchron": [17, 18, 19, 20, 21], "exce": [17, 18, 19, 20], "enable_trunc": [17, 18], "zero_threshold": [17, 18, 19, 20], "threshold": [17, 18, 19, 20, 68], "1e": [17, 18, 19, 20, 66, 67, 68, 91, 92], "validation_threshold": [17, 18, 19, 20], "max_parallel_thread": [17, 18, 19, 20], "core": [17, 18, 19, 20], "max_parallel_shot": [17, 18], "cannot": [17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 65, 66, 67, 69, 79, 95, 99, 103], "unless": 17, "16": [17, 18, 19, 20, 99, 101, 105], "highli": [17, 105], "kernel": 17, "chunk_swap_buffer_qubit": 17, "intend": 17, "statevecor": 17, "exectuion": 17, "batched_shots_gpu_max_qubit": 17, "num_threads_per_devic": 17, "per": [17, 18, 64, 69], "circuti": 17, "total": [17, 90, 91, 92], "shot_branch": 17, "unstabl": 17, "becuas": 17, "accept_distributed_result": 17, "statevector_parallel_threshold": [17, 18, 19, 20], "unalloc": [17, 18, 19, 20], "14": [17, 18, 19, 20, 100, 101, 104], "statevector_sample_measure_opt": [17, 18], "stabilizer_max_snapshot_prob": [17, 18], "extended_stabilizer_sampling_method": [17, 18], "choos": [17, 18, 37, 38, 39, 40, 41, 42, 103, 105], "significantli": [17, 18], "choic": [17, 18, 91, 92], "let": [17, 18, 101, 102, 104], "resampled_metropoli": [17, 18], "metropoli": [17, 18], "mont": [17, 18], "carlo": [17, 18], "inaccur": [17, 18], "overal": [17, 18, 105], "scale": [17, 18, 104], "variant": [17, 18], "reinitialis": [17, 18], "sn": [17, 18], "norm_estim": [17, 18], "inner": [17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 92], "probabilit": [17, 18], "twice": [17, 18], "extended_stabilizer_metropolis_mixing_tim": [17, 18], "strongli": [17, 18], "peak": [17, 18, 102], "alongsid": [17, 18], "extended_stabilizer_disable_measurement_opt": [17, 18], "5000": [17, 18], "extended_stabilizer_approximation_error": [17, 18, 104], "extended_stabilizer_norm_estimation_sampl": [17, 18], "norm": [17, 18, 92], "4m": [17, 18], "whichev": [17, 18], "repeat": [17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66], "median": [17, 18], "reptit": [17, 18], "extended_stabilizer_parallel_threshold": [17, 18], "extended_stabilizer_probabilities_snapshot_sampl": [17, 18], "3000": [17, 18], "matrix_product_state_max_bond_dimens": [17, 18], "schmidt": [17, 18, 94, 103], "coeffici": [17, 18, 66], "beyond": [17, 18], "discard": [17, 18], "matrix_product_state_truncation_threshold": [17, 18], "sum": [17, 18, 81, 82], "sample_measur": [17, 18], "mps_apply_measur": [17, 18], "o": [17, 18, 66], "mps_log_data": [17, 18], "log": [17, 18], "chop_threshold": 17, "mps_parallel_threshold": 17, "mps_omp_thread": 17, "mps_lapack": 17, "tensor_network_num_sampling_qubit": 17, "contract": [17, 105], "use_cutensornet_autotun": 17, "auto": 17, "tune": [17, 65], "plan": 17, "fusion_en": [17, 18, 19, 20], "fusion_verbos": [17, 18, 19, 20], "compon": [17, 18, 19, 20, 66], "aerbackendconfigur": [17, 18, 19, 20], "aerbackendproperti": [17, 18, 19, 20], "respons": [17, 18, 19, 20], "couplingmap": [17, 18, 19, 20], "resolut": [17, 18, 19, 20, 65, 69], "signal": [17, 18, 19, 20], "timestep": [17, 18, 19, 20], "second": [17, 18, 19, 20, 21, 38, 65, 69, 104], "dtm": [17, 18, 19, 20], "notimplementederror": [17, 18, 19, 20], "instruction_dur": [17, 18, 19, 20], "instructiondur": [17, 18, 19, 20], "instruction_schedule_map": [17, 18, 19, 20], "instructionschedulemap": [17, 18, 19, 20], "max_circuit": [17, 18, 19, 20], "meas_map": [17, 18, 19, 20], "num_qubit": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 67, 68, 72, 91, 92, 99, 105], "operation_nam": [17, 18, 19, 20], "human": [17, 18, 19, 20], "readabl": [17, 18, 19, 20], "online_d": [17, 18, 19, 20], "date": [17, 18, 19, 20, 87], "came": [17, 18, 19, 20], "onlin": [17, 18, 19, 20], "backend_vers": [17, 18, 19, 20], "abstract": [17, 18, 19, 20], "acquire_channel": [17, 18, 19, 20], "acquisit": [17, 18, 19, 20], "acquirechannel": [17, 18, 19, 20], "clear_opt": [17, 18, 19, 20], "backendconfigur": [17, 18, 19, 20], "control_channel": [17, 18, 19, 20], "secondari": [17, 18, 19, 20], "drive": [17, 18, 19, 20], "typic": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "multiqubit": [17, 18, 19, 20], "interact": [17, 18, 19, 20], "deriv": [17, 18, 19, 20, 65, 73, 100, 101, 102, 104, 105], "control_qubit": [17, 18, 19, 20], "target_qubit": [17, 18, 19, 20], "controlchannel": [17, 18, 19, 20], "drive_channel": [17, 18, 19, 20], "drivechannel": [17, 18, 19, 20], "classmethod": [17, 18, 65, 68, 88, 90, 91, 92], "measure_channel": [17, 18, 19, 20], "stimulu": [17, 18, 19, 20], "measurechannel": [17, 18, 19, 20], "qubitproperti": [17, 18, 19, 20], "length": [17, 18, 19, 20, 65, 73, 76, 87, 91, 92], "param_a": [17, 18, 19, 20], "val_1": [17, 18, 19, 20], "val_2": [17, 18, 19, 20], "param_b": [17, 18, 19, 20], "val_3": [17, 18, 19, 20], "max_qubit": [17, 18, 19, 20], "maximun": [17, 18, 19, 20], "val": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "isn": [17, 18, 19, 20], "statu": [17, 18, 19, 20, 21, 64, 69, 104], "backendstatu": [17, 18, 19, 20], "statevector_cpu": 18, "alia": 18, "statevector_gpu": [18, 19], "half": 18, "density_matrix_gpu": 18, "chosen": 18, "deprec": [19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 73, 87], "unitary_gpu": 20, "noth": [20, 103], "initial_unitari": 20, "matrix_lik": 20, "job_id": 21, "jobv1": 21, "uniqu": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 67, 99, 104], "usual": [21, 99, 105], "_run": 21, "signatur": [21, 64], "joberror": 21, "cancel": 21, "successfulli": 21, "in_final_st": 21, "identifi": [21, 65, 102], "timeout": 21, "underli": 21, "html": 21, "wait": [21, 105], "timeouterror": 21, "cancellederror": 21, "jobstatu": 21, "qobjvalidationerror": 21, "schema": 21, "wait_for_final_st": 21, "callback": [21, 64, 69], "poll": 21, "progress": 21, "indefinit": 21, "invok": [21, 105], "job_statu": 21, "last": 21, "basejob": 21, "jobtimeouterror": 21, "reach": 21, "savesingledata": [22, 24, 28, 31, 32, 33, 34, 35, 36], "vale": [22, 23], "base_class": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "inherit": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 91, 92], "tree": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 100, 101, 102, 104, 105], "lowest": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "consid": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 65, 73, 91, 92, 101, 102], "_all_": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "pure": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 91, 105], "offer": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 105], "programm": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "perspect": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "particular": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "strategi": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "distinguish": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 91, 92], "often": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "exactli": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 89, 104], "obj": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "singleton": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "isinst": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "reli": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "within": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "discrimin": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "situat": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "condition_bit": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "sessionequivalencelibrari": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "definit": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "mutabl": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "num_clbit": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "angl": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "add_decomposit": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "qasmqobjinstruct": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "releas": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 67, 87, 104], "workflow": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 64, 69], "broadcast_argu": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "qarg": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 67, 91, 92], "carg": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "yield": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "circuiterror": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "cbit": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "setter": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "stack": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "stai": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "invers": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66], "annot": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "is_parameter": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "uncondit": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "compound": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "reverse_op": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "composit": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 67, 68, 101], "recurs": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "soft_compar": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "soft": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "comparison": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 68, 92], "Their": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "parameterexpress": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "taken": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 105], "account": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 100], "to_mut": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "mutat": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "deepcopi": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "validate_paramet": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "saveaveragedata": [23, 25, 26, 27, 29, 30], "width": [24, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "rho": [26, 27, 91, 99, 101, 103], "langl": [26, 27, 85, 91, 92, 99], "rangl": [26, 27, 70, 83, 85, 86, 91, 92, 99, 100, 101, 103, 105], "mbox": [26, 27, 102], "tr": [26, 27, 72, 85, 94, 99], "sigma": 27, "probabilities_dict": [30, 91, 92], "simualtor": 32, "statevector_dict": 34, "ket": [34, 91, 92], "fresh": [37, 38, 39, 40, 41, 42], "annotatedoper": [37, 38, 39, 40, 41, 42], "tdg": [37, 38, 39, 40, 41, 42, 104], "pair": [38, 66, 67, 74, 81, 82, 91, 92], "transformationpass": [64, 69, 101], "func": [64, 96], "prepend": 64, "op_typ": [64, 69], "transpilererror": [64, 69], "is_analysis_pass": [64, 69], "analysi": [64, 69], "analysispass": [64, 69], "analyz": [64, 69], "dag": [64, 69], "modif": [64, 69, 100, 101, 102, 104, 105], "kind": [64, 69], "is_transformation_pass": [64, 69], "manipul": [64, 69], "__call__": [64, 66, 67, 69, 89], "property_set": [64, 69], "propertyset": [64, 69], "place": [64, 69, 91, 92], "passmanager_ir": [64, 69], "passmanagerir": [64, 69], "passmanagerst": [64, 69], "task": [64, 69], "ir": [64, 69], "caller": [64, 69], "dagcircuit": [64, 69], "update_statu": [64, 69], "run_stat": [64, 69], "runstat": [64, 69], "ibmq_vigo": [65, 100], "add_basis_g": [65, 102], "noise_instruct": 65, "noise_qubit": 65, "displai": [65, 73, 91, 92], "add_all_qubit_readout_error": 65, "readout": [65, 68, 74, 78, 87, 100], "add_quantum_error": [65, 101], "sequenc": [65, 66, 87, 89], "add_readout_error": 65, "gate_error": [65, 73, 100], "readout_error": [65, 100], "thermal_relax": [65, 73], "gate_length": [65, 73, 77, 100], "gate_length_unit": [65, 73], "t_1": [65, 79, 86, 100, 101], "t_2": [65, 79, 86, 100, 101], "frequenc": [65, 73, 79], "theoret": 65, "particip": 65, "best": [65, 66, 67, 103, 105], "practic": 65, "nanosecond": [65, 73, 76, 79, 101], "milli": [65, 73], "kelvin": [65, 73], "mk": [65, 73], "backend_properti": 65, "describ": [65, 70, 83, 84, 101, 103, 105], "noise_dict": 65, "is_id": 65, "stdlib": 65, "rate": [66, 100, 101], "basequantumerror": [66, 67], "tolerancesmixin": [66, 67], "\u03c1": [66, 72, 84, 85], "sum_j": [66, 72], "r_j": 66, "d_": 66, "p_j": [66, 72], "d_p": 66, "to_pauli_error": 66, "exponenti": [66, 105], "few": [66, 104, 105], "prod_j": 66, "left": [66, 67, 85, 99, 102, 103], "s_i": [66, 94], "s_": 66, "right": [66, 67, 85, 99, 102, 103], "frac12": 66, "neg": 66, "is_cptp": 66, "08": [66, 67, 68, 91, 92, 100], "dim": [66, 67, 91, 92, 99], "input_shap": [66, 67], "output_shap": [66, 67], "rtol": [66, 67, 68, 91, 92], "runtimeencod": 66, "encod": 66, "shallow": [66, 67], "front": [66, 67, 68], "subsystem": [66, 67, 91, 92], "qiskiterror": [66, 67, 91, 92], "dot": [66, 67, 68, 103], "That": [66, 67, 101], "b": [66, 67, 83, 84, 101, 102], "expand": [66, 67, 68, 91, 92, 101], "otim": [66, 67, 91, 92, 101, 102, 105], "effort": [66, 67], "input_dim": [66, 67, 99, 101, 102], "is_cp": 66, "choi": 66, "cp": 66, "trace": [66, 91, 92, 103], "is_tp": 66, "tp": 66, "output_dim": [66, 67, 99, 101, 102], "power": [66, 67, 68, 91, 92], "reshap": [66, 67], "baseoper": [66, 67, 87, 92], "absolut": [66, 68, 91, 92], "toler": [66, 68, 91, 92], "rel": [66, 68, 91, 92, 105], "subsystem_error": 66, "greedi": 66, "largest": 66, "cover": 66, "remain": [66, 105], "num_term": 66, "num_cov": 66, "worst": [66, 105], "to_instruct": [66, 67, 68], "quasi": 66, "to_quantum_error": 66, "to_quantumchannel": [66, 67], "event": 67, "probabilist": 67, "flip": [67, 100], "9": [67, 91, 92, 99, 100, 101, 102, 104, 105], "explicit": [67, 103], "omit": 67, "error_term": 67, "enter": 68, "record": [68, 100, 101], "00": [68, 91, 92, 99, 101, 102, 104, 105], "11": [68, 99, 101, 102, 104, 105], "__mul__": [68, 91, 92], "set_atol": 68, "set_rtol": 68, "excited_state_popul": [69, 70, 83, 86], "equilibrium": [69, 70, 83, 84, 86], "param_amp": [70, 83], "canonical_krau": [70, 80, 83, 84], "damp": [70, 83, 84, 101, 102], "a0": [70, 83, 84], "p1": [70, 83], "a1": [70, 83], "b0": [70, 83], "b1": [70, 83], "rho_eq": [70, 83, 84], "coher": [71, 101], "\u03bb": 72, "frac": [72, 91, 99, 100, 103], "le": [72, 86, 101, 103], "uniform": 72, "exception": 73, "neither": 74, "nor": 74, "freq": 79, "inf": 79, "gigahertz": 79, "unknown": 79, "j": [81, 82, 99, 101, 102, 105], "param_phas": [83, 84], "a2": [83, 84], "b2": 83, "rho_init": 84, "prob0": 85, "prob1": 85, "p_0": [85, 101], "p_1": [85, 94, 101, 103], "transpile_opt": [87, 89], "skip_transpil": [87, 89], "implment": 87, "exact": [87, 99], "fix": [87, 89, 91, 92, 99], "preced": [87, 89, 93, 94, 99], "w": 87, "appproxim": 87, "13": [87, 99, 101], "earlier": 87, "month": 87, "parameter_valu": [87, 88, 89, 90], "th": [87, 89], "element": [87, 91, 92], "ob": 87, "prepar": [87, 99, 100, 102], "importantli": 87, "baseestimatorv2": 88, "fast": [88, 105], "precison": 88, "default_precis": 88, "pub": [88, 90], "estimatorpublik": 88, "unifi": [88, 90], "bloc": [88, 90], "basesamplerv1": 89, "multinomi": 89, "bitstr": 89, "default_shot": 90, "rng": [90, 91, 92], "samplerpublik": 90, "vari": 90, "_aer_stat": 91, "conjug": [91, 92], "draw": [91, 92], "drawer_arg": [91, 92], "repr": [91, 92], "ascii": [91, 92], "textmatrix": [91, 92], "__repr__": [91, 92], "consol": [91, 92], "latex": [91, 92], "ipython": [91, 92], "jupyt": [91, 92], "notebook": [91, 92, 99, 100, 101, 102, 103, 104], "latex_sourc": [91, 92], "uncompil": [91, 92], "qsphere": [91, 92], "figur": [91, 92], "render": [91, 92], "plot_state_qspher": [91, 92], "hinton": [91, 92], "plot_state_hinton": [91, 92], "bloch": [91, 92], "plot_bloch_multivector": [91, 92], "state_draw": [91, 92], "conf": [91, 92], "relev": [91, 92, 105], "array_to_latex": [91, 92], "evolv": [91, 92], "quantumst": [91, 92], "from_instruct": [91, 92], "ldot": [91, 92, 105], "from_int": [91, 92], "dimension": [91, 92], "from_label": [91, 92], "y": [91, 92, 93, 94], "z": [91, 92, 101], "eigenst": [91, 92], "begin": [91, 102, 103], "pmatrix": 91, "l": [91, 92], "charact": [91, 92], "is_valid": [91, 92], "semidefinit": 91, "collaps": [91, 92, 99], "lastli": [91, 92], "partial_transpos": 91, "transpos": 91, "decim": [91, 92], "round": [91, 92, 99], "rho_1": 91, "rho_0": 91, "langle0": 91, "prob": [91, 92], "probs_qubit_0": [91, 92], "probs_qubit_1": [91, 92], "permut": [91, 92], "probs_swap": [91, 92], "notat": [91, 92], "qudit": [91, 92], "comma": [91, 92], "delimit": [91, 92], "puriti": [91, 92], "ground": [91, 92], "reverse_qarg": [91, 92], "rho_": 91, "sample_count": [91, 92], "stat": [91, 92], "sample_memori": [91, 92], "4999999999999999": 91, "0j": [91, 92], "qutrit": [91, 92], "mat": 91, "25": [91, 102, 104, 105], "91": [91, 92], "to_oper": [91, 92], "to_statevector": 91, "eigenvector": 91, "eigenvalu": 91, "__getitem__": 92, "complex128": 92, "item": 92, "__len__": 92, "citi": 92, "plot_state_c": [92, 99], "paulivec": 92, "plot_state_paulivec": 92, "plot": [92, 101], "bell": [92, 99, 102], "sv": 92, "png": 92, "hire": 92, "pdf": 92, "equiv": 92, "psi": [92, 99, 105], "float64": 92, "psi_": [92, 99], "psi_0": [92, 99], "7071067811865475": 92, "vec": 92, "projector": 92, "operator_str": [93, 94, 103], "operator_dict": [93, 94], "operator_list": [93, 94, 103], "ygate": [93, 94], "missingoptionallibraryerror": [93, 94], "cvxpy": [93, 94], "minim": [94, 103], "hilbert": [94, 103], "distanc": [94, 103], "sum_i": 94, "p_i": [94, 103], "dagger": [94, 99], "p_2": [94, 103], "p_n": 94, "denot": 94, "s_1": 94, "s_2": 94, "s_n": 94, "1207": 94, "0046": 94, "referenc": 95, "ran": 95, "applyign": 96, "singatur": 96, "transpile_kwarg": [97, 98], "agrument": [97, 98], "containin": 98, "qi": [99, 102], "titl": [99, 100, 102], "get_memori": 99, "39": [99, 101, 102, 103, 105], "varieti": 99, "preconfigur": 99, "variat": 99, "10000": 99, "sim_statevector": 99, "job_statevector": 99, "counts_statevector": 99, "sim_stabil": 99, "job_stabil": 99, "counts_stabil": 99, "sim_extstabil": 99, "job_extstabil": 99, "counts_extstabil": 99, "sim_dens": 99, "job_dens": 99, "counts_dens": 99, "sim_mp": 99, "job_mp": 99, "counts_mp": 99, "legend": [99, 104], "sim_automat": 99, "job_automat": 99, "counts_automat": 99, "aersimmul": 99, "cloud": 99, "simulator_gpu": 99, "reg": 99, "12": [99, 100, 101, 102, 104, 105], "contribut": 99, "set_precis": 99, "505": 99, "519": 99, "halv": 99, "get_statevector": 99, "17": [99, 101, 102, 104, 105], "get_unitari": 99, "asarrai": 99, "70711": 99, "locat": [99, 102], "18": 99, "f": [99, 102, 103], "psi_5": 99, "00000000e": [99, 101], "00j": 99, "55111512e": 99, "17j": 99, "psi_4": 99, "30901699": 99, "95105652j": 99, "psi_3": 99, "58778525": 99, "80901699j": 99, "psi_2": 99, "95105652": 99, "30901699j": 99, "psi_1": 99, "set_statevector": 99, "unaffect": 99, "random_statevector": 99, "49859823": 99, "41410205j": 99, "12480824": 99, "46132192j": 99, "33634191": 99, "30214216j": 99, "234309": 99, "3036574j": 99, "initil": 99, "ge": [99, 103], "21": 99, "random_density_matrix": 99, "2075308": 99, "13161422": 99, "01760848j": 99, "0442826": 99, "07742704j": 99, "04852053": 99, "01303171j": 99, "20106116": 99, "02568549": 99, "03689812j": 99, "0482903": 99, "04367912j": 99, "39731492": 99, "01114025": 99, "13426423j": 99, "19409312": 99, "stab": 99, "random_clifford": 99, "zz": 99, "iz": 99, "mathbb": [99, 103], "random_unitari": 99, "44885724": 99, "26721573j": 99, "10468034": 99, "00288681j": 99, "4631425": 99, "15474915j": 99, "11151309": 99, "68210936j": 99, "37279054": 99, "38484834j": 99, "3820592": 99, "49653433j": 99, "14132327": 99, "17428515j": 99, "19643043": 99, "48111423j": 99, "2889092": 99, "58750499j": 99, "39509694": 99, "22036424j": 99, "49498355": 99, "2388685j": 99, "25404989": 99, "00995706j": 99, "01830684": 99, "10524311j": 99, "62584001": 99, "01343146j": 99, "52174025": 99, "37003296j": 99, "12232823": 99, "41548904j": 99, "37": 99, "__version__": [99, 100, 101, 102, 103, 104, 105], "studi": 100, "area": 100, "research": [100, 101, 105], "discuss": 100, "tool": 100, "calibr": 100, "qiskit_ibm_runtim": 100, "device_backend": 100, "sqrt2": 100, "sim_id": [100, 101, 102], "sim_vigo": 100, "vigo_simul": 100, "therebi": 100, "close": [100, 103], "mimick": 100, "gate_tim": 100, "infidel": 100, "critic": 100, "tcirc": [100, 104, 105], "result_nois": 100, "counts_nois": 100, "informationqiskit": [100, 101, 102, 104, 105], "softwareversionqiskit0": [100, 101, 102, 104, 105], "dev0": [100, 101], "397a639qiskit": 100, "aer0": [100, 101], "4system": 100, "informationpython": [100, 101], "version3": [100, 101], "4python": 100, "compilerclang": [100, 101], "buildmain": 100, "mar": 100, "31": [100, 105], "03": [100, 101, 104], "38": 100, "35osdarwincpus2memori": 100, "gb": [100, 101, 102, 104, 105], "0thu": 100, "jul": [100, 101], "copyright": [100, 101, 102, 104, 105], "2017": [100, 101, 102, 104, 105], "mayobtain": [100, 101, 102, 104, 105], "root": [100, 101, 102, 104, 105], "directori": [100, 101, 102, 104, 105], "www": [100, 101, 102, 104, 105], "thiscopyright": [100, 101, 102, 104, 105], "carri": [100, 101, 102, 104, 105], "indicatingthat": [100, 101, 102, 104, 105], "alter": [100, 101, 102, 104, 105], "three": 101, "deal": 101, "k_0": 101, "u_0": 101, "coherent_unitary_error": 101, "reset_error": [101, 103], "phase_amplitude_damping_error": 101, "lambda": [101, 105], "gamma": [101, 103, 105], "amplitude_damping_error": [101, 102, 103], "phase_damping_error": 101, "expans": 101, "cal": 101, "e_2": 101, "e_1": 101, "error1": 101, "error2": 101, "p_error": 101, "bit_flip": 101, "phase_flip": 101, "bitphase_flip": 101, "0025000000000000005": 101, "0475": 101, "9025": 101, "q_0": [101, 102], "q_1": [101, 102], "forth": 101, "bit_flip_krau": 101, "74679434e": 101, "20234617e": 101, "62045272e": 101, "23606798e": 101, "84112242e": 101, "phase_flip_sop": 101, "p0given1": 101, "p1given0": 101, "occurr": 101, "matter": [101, 105], "suggest": [101, 103], "command": 101, "demonstr": [101, 102, 103], "q_2": 101, "q_3": 101, "toi": 101, "p_gate1": 101, "p_reset": 101, "p_mea": 101, "error_reset": 101, "error_mea": 101, "error_gate1": 101, "error_gate2": 101, "noise_bit_flip": 101, "sim_nois": [101, 102], "circ_tnois": 101, "result_bit_flip": 101, "counts_bit_flip": 101, "dephas": 101, "50e3": 101, "10e3": 101, "50": [101, 104, 105], "microsec": 101, "70e3": 101, "min": 101, "time_u1": 101, "time_u2": 101, "x90": 101, "time_u3": 101, "time_cx": 101, "300": 101, "time_reset": 101, "1000": [101, 105], "microsecond": 101, "time_measur": 101, "errors_reset": 101, "zip": 101, "errors_measur": 101, "errors_u1": 101, "errors_u2": 101, "errors_u3": 101, "errors_cx": 101, "t1a": 101, "t2a": 101, "t1b": 101, "t2b": 101, "noise_therm": 101, "sim_therm": 101, "circ_ttherm": 101, "result_therm": 101, "counts_therm": 101, "dba2effqiskit": 101, "2qiskit": 101, "provider0": [101, 102, 104, 105], "2qiskit0": 101, "0system": 101, "11python": 101, "clang": [101, 102, 104], "1205": 101, "builddefault": 101, "27": [101, 105], "2021": [101, 102, 104, 105], "46": 101, "38osdarwincpus8memori": 101, "0tue": 101, "feb": [101, 105], "07": 101, "2023": 101, "jst": 101, "arbitrari": 102, "cnot": [102, 104], "iswap": 102, "quad": 102, "cx_op": 102, "iswap_op": 102, "1j": 102, "u_": 102, "cx_circ": 102, "sdg": 102, "confirm": 102, "fidel": [102, 103], "f_ave": 102, "average_gate_fidel": 102, "000000": 102, "param_q0": 102, "param_q1": 102, "qerror_q0": 102, "qerror_q1": 102, "iswap_error": 102, "suppos": 102, "hadamard": [102, 104], "bell_circ": 102, "lt": [102, 104], "gt": [102, 103, 104], "tbell_circ": 102, "ideal_result": 102, "ideal_count": 102, "tbell_circ_nois": 102, "noise_result": 102, "noise_count": 102, "0terra0": [102, 104, 105], "0aer0": [102, 104, 105], "0ignis0": [102, 104, 105], "0aqua0": [102, 104, 105], "0ibm": [102, 104, 105], "2system": [102, 104, 105], "informationpython3": [102, 104, 105], "2020": [102, 104], "04": [102, 104], "59": [102, 104], "tag": [102, 104], "release_401": [102, 104], "osdarwincpus6memori": [102, 104], "0fri": [102, 104], "apr": [102, 104, 105], "02": [102, 104], "edt": [102, 104], "univers": 103, "aim": 103, "closest": 103, "metric": 103, "mathcal": 103, "times2": 103, "imag": 103, "_": 103, "p_r": 103, "_i": 103, "goal": 103, "honest": 103, "sens": 103, "upper": 103, "honesti": 103, "cc": 103, "thought": 103, "difficult": 103, "analyt": 103, "8237482193044617": 103, "17625178069553835": 103, "158685879252966e": 103, "8237482193696062": 103, "17625178063039387": 103, "got": 103, "predict": 103, "k0": 103, "k1": 103, "8237482193044623": 103, "1762517806955376": 103, "463899246563026e": 103, "hard": 103, "implicitli": 103, "reset_to_0": 103, "reset_to_1": 103, "reset_krau": 103, "idea": 104, "bravyi": 104, "brown": 104, "calpin": 104, "campbel": 104, "gosset": 104, "howard": 104, "2018": 104, "1808": 104, "00128": 104, "capabl": 104, "layer": 104, "qubit_indic": 104, "instructionset": 104, "0x7fbd18a23310": 104, "ve": 104, "sai": 104, "hope": 104, "terabyt": 104, "ram": 104, "statevector_simul": 104, "statevector_result": 104, "succeed": 104, "success": 104, "why": 104, "34": 104, "contrast": 104, "fine": 104, "minut": [104, 105], "extended_stabilizer_simul": 104, "extended_stabilizer_result": 104, "interest": 104, "explan": 104, "understand": 104, "At": 104, "qr": 104, "ccx": 104, "control_1": 104, "control_2": 104, "rotation_angl": 104, "abl": 104, "thing": 104, "aren": 104, "small_circ": 104, "expected_result": 104, "tsmall_circ": 104, "time_taken": [104, 105], "4958779811859131": 104, "reduced_error": 104, "reduced_error_count": 104, "404871940612793": 104, "tweak": 104, "help": 104, "markov": 104, "chain": 104, "concentr": 104, "extended_stabilizer_mixing_tim": 104, "dial": 104, "down": 104, "4710919857025146": 104, "similarli": 104, "expens": 104, "extended_stabilizer_measure_sampl": 104, "look": 104, "quickli": 104, "multishot": 104, "took": 104, "29": 104, "634929895401": 104, "measure_sampl": 104, "lot": 104, "28": 104, "advantag": 105, "disadvantag": 105, "investig": 105, "focu": 105, "concept": 105, "propos": 105, "slightli": 105, "vidal": 105, "quant": 105, "ph": 105, "0301063": 105, "renorm": 105, "ag": 105, "schollwoeck": 105, "1008": 105, "3477": 105, "sum_": 105, "i_1": 105, "i_n": 105, "c_": 105, "i_i": 105, "impli": 105, "consecut": 105, "involv": 105, "bring": 105, "character": 105, "subject": 105, "515": 105, "509": 105, "my_sv": 105, "my_mp": 105, "0x0": 105, "494": 105, "0x3": 105, "530": 105, "70710678": 105, "cours": 105, "benefit": 105, "200": 105, "epr": 105, "although": 105, "500": 105, "Or": 105, "cup": 105, "coffe": 105, "sec": 105, "31022214889526367": 105, "11111111111111111111111111111111111111111111111111": 105, "548": 105, "00000000000000000000000000000000000000000000000000": 105, "476": 105, "conda": 105, "forg": 105, "gcc": 105, "oslinuxcpus8memori": 105, "38858413696289tue": 105, "58": 105, "utc": 105}, "objects": {"qiskit.circuit.QuantumCircuit": [[8, 0, 1, "", "save_amplitudes"], [8, 0, 1, "", "save_amplitudes_squared"], [8, 0, 1, "", "save_clifford"], [8, 0, 1, "", "save_density_matrix"], [8, 0, 1, "", "save_expectation_value"], [8, 0, 1, "", "save_expectation_value_variance"], [8, 0, 1, "", "save_matrix_product_state"], [8, 0, 1, "", "save_probabilities"], [8, 0, 1, "", "save_probabilities_dict"], [8, 0, 1, "", "save_stabilizer"], [8, 0, 1, "", "save_state"], [8, 0, 1, "", "save_statevector"], [8, 0, 1, "", "save_statevector_dict"], [8, 0, 1, "", "save_superop"], [8, 0, 1, "", "save_unitary"], [8, 0, 1, "", "set_density_matrix"], [8, 0, 1, "", "set_matrix_product_state"], [8, 0, 1, "", "set_stabilizer"], [8, 0, 1, "", "set_superop"], [8, 0, 1, "", "set_unitary"]], "": [[5, 1, 0, "-", "qiskit_aer"]], "qiskit_aer": [[15, 2, 1, "", "AerError"], [16, 3, 1, "", "AerProvider"], [17, 3, 1, "", "AerSimulator"], [18, 3, 1, "", "QasmSimulator"], [19, 3, 1, "", "StatevectorSimulator"], [20, 3, 1, "", "UnitarySimulator"], [1, 1, 0, "-", "jobs"], [2, 1, 0, "-", "library"], [3, 1, 0, "-", "noise"], [4, 1, 0, "-", "primitives"], [6, 1, 0, "-", "quantum_info"], [7, 1, 0, "-", "utils"]], "qiskit_aer.AerError": [[15, 0, 1, "", "with_traceback"]], "qiskit_aer.AerProvider": [[16, 0, 1, "", "backends"], [16, 0, 1, "", "get_backend"], [16, 4, 1, "", "version"]], "qiskit_aer.AerSimulator": [[17, 0, 1, "", "acquire_channel"], [17, 0, 1, "", "available_devices"], [17, 0, 1, "", "available_methods"], [17, 4, 1, "", "backend_version"], [17, 0, 1, "", "clear_options"], [17, 0, 1, "", "configuration"], [17, 0, 1, "", "control_channel"], [17, 4, 1, "", "coupling_map"], [17, 4, 1, "", "description"], [17, 0, 1, "", "drive_channel"], [17, 4, 1, "", "dt"], [17, 4, 1, "", "dtm"], [17, 0, 1, "", "from_backend"], [17, 4, 1, "", "instruction_durations"], [17, 4, 1, "", "instruction_schedule_map"], [17, 4, 1, "", "instructions"], [17, 4, 1, "", "max_circuits"], [17, 4, 1, "", "meas_map"], [17, 0, 1, "", "measure_channel"], [17, 4, 1, "", "name"], [17, 4, 1, "", "num_qubits"], [17, 4, 1, "", "online_date"], [17, 4, 1, "", "operation_names"], [17, 4, 1, "", "operations"], [17, 4, 1, "", "options"], [17, 0, 1, "", "properties"], [17, 4, 1, "", "provider"], [17, 0, 1, "", "qubit_properties"], [17, 0, 1, "", "run"], [17, 0, 1, "", "set_max_qubits"], [17, 0, 1, "", "set_option"], [17, 0, 1, "", "set_options"], [17, 0, 1, "", "status"], [17, 4, 1, "", "target"], [17, 4, 1, "", "version"]], "qiskit_aer.QasmSimulator": [[18, 0, 1, "", "acquire_channel"], [18, 0, 1, "", "available_devices"], [18, 0, 1, "", "available_methods"], [18, 4, 1, "", "backend_version"], [18, 0, 1, "", "clear_options"], [18, 0, 1, "", "configuration"], [18, 0, 1, "", "control_channel"], [18, 4, 1, "", "coupling_map"], [18, 4, 1, "", "description"], [18, 0, 1, "", "drive_channel"], [18, 4, 1, "", "dt"], [18, 4, 1, "", "dtm"], [18, 0, 1, "", "from_backend"], [18, 4, 1, "", "instruction_durations"], [18, 4, 1, "", "instruction_schedule_map"], [18, 4, 1, "", "instructions"], [18, 4, 1, "", "max_circuits"], [18, 4, 1, "", "meas_map"], [18, 0, 1, "", "measure_channel"], [18, 4, 1, "", "name"], [18, 4, 1, "", "num_qubits"], [18, 4, 1, "", "online_date"], [18, 4, 1, "", "operation_names"], [18, 4, 1, "", "operations"], [18, 4, 1, "", "options"], [18, 0, 1, "", "properties"], [18, 4, 1, "", "provider"], [18, 0, 1, "", "qubit_properties"], [18, 0, 1, "", "run"], [18, 0, 1, "", "set_max_qubits"], [18, 0, 1, "", "set_option"], [18, 0, 1, "", "set_options"], [18, 0, 1, "", "status"], [18, 4, 1, "", "target"], [18, 4, 1, "", "version"]], "qiskit_aer.StatevectorSimulator": [[19, 0, 1, "", "acquire_channel"], [19, 0, 1, "", "available_devices"], [19, 0, 1, "", "available_methods"], [19, 4, 1, "", "backend_version"], [19, 0, 1, "", "clear_options"], [19, 0, 1, "", "configuration"], [19, 0, 1, "", "control_channel"], [19, 4, 1, "", "coupling_map"], [19, 4, 1, "", "description"], [19, 0, 1, "", "drive_channel"], [19, 4, 1, "", "dt"], [19, 4, 1, "", "dtm"], [19, 4, 1, "", "instruction_durations"], [19, 4, 1, "", "instruction_schedule_map"], [19, 4, 1, "", "instructions"], [19, 4, 1, "", "max_circuits"], [19, 4, 1, "", "meas_map"], [19, 0, 1, "", "measure_channel"], [19, 4, 1, "", "name"], [19, 4, 1, "", "num_qubits"], [19, 4, 1, "", "online_date"], [19, 4, 1, "", "operation_names"], [19, 4, 1, "", "operations"], [19, 4, 1, "", "options"], [19, 0, 1, "", "properties"], [19, 4, 1, "", "provider"], [19, 0, 1, "", "qubit_properties"], [19, 0, 1, "", "run"], [19, 0, 1, "", "set_max_qubits"], [19, 0, 1, "", "set_option"], [19, 0, 1, "", "set_options"], [19, 0, 1, "", "status"], [19, 4, 1, "", "target"], [19, 4, 1, "", "version"]], "qiskit_aer.UnitarySimulator": [[20, 0, 1, "", "acquire_channel"], [20, 0, 1, "", "available_devices"], [20, 0, 1, "", "available_methods"], [20, 4, 1, "", "backend_version"], [20, 0, 1, "", "clear_options"], [20, 0, 1, "", "configuration"], [20, 0, 1, "", "control_channel"], [20, 4, 1, "", "coupling_map"], [20, 4, 1, "", "description"], [20, 0, 1, "", "drive_channel"], [20, 4, 1, "", "dt"], [20, 4, 1, "", "dtm"], [20, 4, 1, "", "instruction_durations"], [20, 4, 1, "", "instruction_schedule_map"], [20, 4, 1, "", "instructions"], [20, 4, 1, "", "max_circuits"], [20, 4, 1, "", "meas_map"], [20, 0, 1, "", "measure_channel"], [20, 4, 1, "", "name"], [20, 4, 1, "", "num_qubits"], [20, 4, 1, "", "online_date"], [20, 4, 1, "", "operation_names"], [20, 4, 1, "", "operations"], [20, 4, 1, "", "options"], [20, 0, 1, "", "properties"], [20, 4, 1, "", "provider"], [20, 0, 1, "", "qubit_properties"], [20, 0, 1, "", "run"], [20, 0, 1, "", "set_max_qubits"], [20, 0, 1, "", "set_option"], [20, 0, 1, "", "set_options"], [20, 0, 1, "", "status"], [20, 4, 1, "", "target"], [20, 4, 1, "", "version"]], "qiskit_aer.jobs": [[21, 3, 1, "", "AerJob"]], "qiskit_aer.jobs.AerJob": [[21, 0, 1, "", "backend"], [21, 0, 1, "", "cancel"], [21, 0, 1, "", "cancelled"], [21, 0, 1, "", "circuits"], [21, 0, 1, "", "done"], [21, 0, 1, "", "executor"], [21, 0, 1, "", "in_final_state"], [21, 0, 1, "", "job_id"], [21, 0, 1, "", "result"], [21, 0, 1, "", "running"], [21, 0, 1, "", "status"], [21, 0, 1, "", "submit"], [21, 4, 1, "", "version"], [21, 0, 1, "", "wait_for_final_state"]], "qiskit_aer.library": [[22, 3, 1, "", "SaveAmplitudes"], [23, 3, 1, "", "SaveAmplitudesSquared"], [24, 3, 1, "", "SaveClifford"], [25, 3, 1, "", "SaveDensityMatrix"], [26, 3, 1, "", "SaveExpectationValue"], [27, 3, 1, "", "SaveExpectationValueVariance"], [28, 3, 1, "", "SaveMatrixProductState"], [29, 3, 1, "", "SaveProbabilities"], [30, 3, 1, "", "SaveProbabilitiesDict"], [31, 3, 1, "", "SaveStabilizer"], [32, 3, 1, "", "SaveState"], [33, 3, 1, "", "SaveStatevector"], [34, 3, 1, "", "SaveStatevectorDict"], [35, 3, 1, "", "SaveSuperOp"], [36, 3, 1, "", "SaveUnitary"], [37, 3, 1, "", "SetDensityMatrix"], [38, 3, 1, "", "SetMatrixProductState"], [39, 3, 1, "", "SetStabilizer"], [40, 3, 1, "", "SetStatevector"], [41, 3, 1, "", "SetSuperOp"], [42, 3, 1, "", "SetUnitary"], [43, 5, 1, "", "save_amplitudes"], [44, 5, 1, "", "save_amplitudes_squared"], [45, 5, 1, "", "save_clifford"], [46, 5, 1, "", "save_density_matrix"], [47, 5, 1, "", "save_expectation_value"], [48, 5, 1, "", "save_expectation_value_variance"], [49, 5, 1, "", "save_matrix_product_state"], [50, 5, 1, "", "save_probabilities"], [51, 5, 1, "", "save_probabilities_dict"], [52, 5, 1, "", "save_stabilizer"], [53, 5, 1, "", "save_state"], [54, 5, 1, "", "save_statevector"], [55, 5, 1, "", "save_statevector_dict"], [56, 5, 1, "", "save_superop"], [57, 5, 1, "", "save_unitary"], [58, 5, 1, "", "set_density_matrix"], [59, 5, 1, "", "set_matrix_product_state"], [60, 5, 1, "", "set_stabilizer"], [61, 5, 1, "", "set_statevector"], [62, 5, 1, "", "set_superop"], [63, 5, 1, "", "set_unitary"]], "qiskit_aer.library.SaveAmplitudes": [[22, 0, 1, "", "add_decomposition"], [22, 0, 1, "", "assemble"], [22, 4, 1, "", "base_class"], [22, 0, 1, "", "broadcast_arguments"], [22, 0, 1, "", "c_if"], [22, 4, 1, "", "condition"], [22, 4, 1, "", "condition_bits"], [22, 0, 1, "", "copy"], [22, 4, 1, "", "decompositions"], [22, 4, 1, "", "definition"], [22, 4, 1, "", "duration"], [22, 0, 1, "", "inverse"], [22, 0, 1, "", "is_parameterized"], [22, 4, 1, "", "label"], [22, 4, 1, "", "mutable"], [22, 4, 1, "", "name"], [22, 4, 1, "", "num_clbits"], [22, 4, 1, "", "num_qubits"], [22, 4, 1, "", "params"], [22, 0, 1, "", "repeat"], [22, 0, 1, "", "reverse_ops"], [22, 0, 1, "", "soft_compare"], [22, 0, 1, "", "to_mutable"], [22, 4, 1, "", "unit"], [22, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SaveAmplitudesSquared": [[23, 0, 1, "", "add_decomposition"], [23, 0, 1, "", "assemble"], [23, 4, 1, "", "base_class"], [23, 0, 1, "", "broadcast_arguments"], [23, 0, 1, "", "c_if"], [23, 4, 1, "", "condition"], [23, 4, 1, "", "condition_bits"], [23, 0, 1, "", "copy"], [23, 4, 1, "", "decompositions"], [23, 4, 1, "", "definition"], [23, 4, 1, "", "duration"], [23, 0, 1, "", "inverse"], [23, 0, 1, "", "is_parameterized"], [23, 4, 1, "", "label"], [23, 4, 1, "", "mutable"], [23, 4, 1, "", "name"], [23, 4, 1, "", "num_clbits"], [23, 4, 1, "", "num_qubits"], [23, 4, 1, "", "params"], [23, 0, 1, "", "repeat"], [23, 0, 1, "", "reverse_ops"], [23, 0, 1, "", "soft_compare"], [23, 0, 1, "", "to_mutable"], [23, 4, 1, "", "unit"], [23, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SaveClifford": [[24, 0, 1, "", "add_decomposition"], [24, 0, 1, "", "assemble"], [24, 4, 1, "", "base_class"], [24, 0, 1, "", "broadcast_arguments"], [24, 0, 1, "", "c_if"], [24, 4, 1, "", "condition"], [24, 4, 1, "", "condition_bits"], [24, 0, 1, "", "copy"], [24, 4, 1, "", "decompositions"], [24, 4, 1, "", "definition"], [24, 4, 1, "", "duration"], [24, 0, 1, "", "inverse"], [24, 0, 1, "", "is_parameterized"], [24, 4, 1, "", "label"], [24, 4, 1, "", "mutable"], [24, 4, 1, "", "name"], [24, 4, 1, "", "num_clbits"], [24, 4, 1, "", "num_qubits"], [24, 4, 1, "", "params"], [24, 0, 1, "", "repeat"], [24, 0, 1, "", "reverse_ops"], [24, 0, 1, "", "soft_compare"], [24, 0, 1, "", "to_mutable"], [24, 4, 1, "", "unit"], [24, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SaveDensityMatrix": [[25, 0, 1, "", "add_decomposition"], [25, 0, 1, "", "assemble"], [25, 4, 1, "", "base_class"], [25, 0, 1, "", "broadcast_arguments"], [25, 0, 1, "", "c_if"], [25, 4, 1, "", "condition"], [25, 4, 1, "", "condition_bits"], [25, 0, 1, "", "copy"], [25, 4, 1, "", "decompositions"], [25, 4, 1, "", "definition"], [25, 4, 1, "", "duration"], [25, 0, 1, "", "inverse"], [25, 0, 1, "", "is_parameterized"], [25, 4, 1, "", "label"], [25, 4, 1, "", "mutable"], [25, 4, 1, "", "name"], [25, 4, 1, "", "num_clbits"], [25, 4, 1, "", "num_qubits"], [25, 4, 1, "", "params"], [25, 0, 1, "", "repeat"], [25, 0, 1, "", "reverse_ops"], [25, 0, 1, "", "soft_compare"], [25, 0, 1, "", "to_mutable"], [25, 4, 1, "", "unit"], [25, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SaveExpectationValue": [[26, 0, 1, "", "add_decomposition"], [26, 0, 1, "", "assemble"], [26, 4, 1, "", "base_class"], [26, 0, 1, "", "broadcast_arguments"], [26, 0, 1, "", "c_if"], [26, 4, 1, "", "condition"], [26, 4, 1, "", "condition_bits"], [26, 0, 1, "", "copy"], [26, 4, 1, "", "decompositions"], [26, 4, 1, "", "definition"], [26, 4, 1, "", "duration"], [26, 0, 1, "", "inverse"], [26, 0, 1, "", "is_parameterized"], [26, 4, 1, "", "label"], [26, 4, 1, "", "mutable"], [26, 4, 1, "", "name"], [26, 4, 1, "", "num_clbits"], [26, 4, 1, "", "num_qubits"], [26, 4, 1, "", "params"], [26, 0, 1, "", "repeat"], [26, 0, 1, "", "reverse_ops"], [26, 0, 1, "", "soft_compare"], [26, 0, 1, "", "to_mutable"], [26, 4, 1, "", "unit"], [26, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SaveExpectationValueVariance": [[27, 0, 1, "", "add_decomposition"], [27, 0, 1, "", "assemble"], [27, 4, 1, "", "base_class"], [27, 0, 1, "", "broadcast_arguments"], [27, 0, 1, "", "c_if"], [27, 4, 1, "", "condition"], [27, 4, 1, "", "condition_bits"], [27, 0, 1, "", "copy"], [27, 4, 1, "", "decompositions"], [27, 4, 1, "", "definition"], [27, 4, 1, "", "duration"], [27, 0, 1, "", "inverse"], [27, 0, 1, "", "is_parameterized"], [27, 4, 1, "", "label"], [27, 4, 1, "", "mutable"], [27, 4, 1, "", "name"], [27, 4, 1, "", "num_clbits"], [27, 4, 1, "", "num_qubits"], [27, 4, 1, "", "params"], [27, 0, 1, "", "repeat"], [27, 0, 1, "", "reverse_ops"], [27, 0, 1, "", "soft_compare"], [27, 0, 1, "", "to_mutable"], [27, 4, 1, "", "unit"], [27, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SaveMatrixProductState": [[28, 0, 1, "", "add_decomposition"], [28, 0, 1, "", "assemble"], [28, 4, 1, "", "base_class"], [28, 0, 1, "", "broadcast_arguments"], [28, 0, 1, "", "c_if"], [28, 4, 1, "", "condition"], [28, 4, 1, "", "condition_bits"], [28, 0, 1, "", "copy"], [28, 4, 1, "", "decompositions"], [28, 4, 1, "", "definition"], [28, 4, 1, "", "duration"], [28, 0, 1, "", "inverse"], [28, 0, 1, "", "is_parameterized"], [28, 4, 1, "", "label"], [28, 4, 1, "", "mutable"], [28, 4, 1, "", "name"], [28, 4, 1, "", "num_clbits"], [28, 4, 1, "", "num_qubits"], [28, 4, 1, "", "params"], [28, 0, 1, "", "repeat"], [28, 0, 1, "", "reverse_ops"], [28, 0, 1, "", "soft_compare"], [28, 0, 1, "", "to_mutable"], [28, 4, 1, "", "unit"], [28, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SaveProbabilities": [[29, 0, 1, "", "add_decomposition"], [29, 0, 1, "", "assemble"], [29, 4, 1, "", "base_class"], [29, 0, 1, "", "broadcast_arguments"], [29, 0, 1, "", "c_if"], [29, 4, 1, "", "condition"], [29, 4, 1, "", "condition_bits"], [29, 0, 1, "", "copy"], [29, 4, 1, "", "decompositions"], [29, 4, 1, "", "definition"], [29, 4, 1, "", "duration"], [29, 0, 1, "", "inverse"], [29, 0, 1, "", "is_parameterized"], [29, 4, 1, "", "label"], [29, 4, 1, "", "mutable"], [29, 4, 1, "", "name"], [29, 4, 1, "", "num_clbits"], [29, 4, 1, "", "num_qubits"], [29, 4, 1, "", "params"], [29, 0, 1, "", "repeat"], [29, 0, 1, "", "reverse_ops"], [29, 0, 1, "", "soft_compare"], [29, 0, 1, "", "to_mutable"], [29, 4, 1, "", "unit"], [29, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SaveProbabilitiesDict": [[30, 0, 1, "", "add_decomposition"], [30, 0, 1, "", "assemble"], [30, 4, 1, "", "base_class"], [30, 0, 1, "", "broadcast_arguments"], [30, 0, 1, "", "c_if"], [30, 4, 1, "", "condition"], [30, 4, 1, "", "condition_bits"], [30, 0, 1, "", "copy"], [30, 4, 1, "", "decompositions"], [30, 4, 1, "", "definition"], [30, 4, 1, "", "duration"], [30, 0, 1, "", "inverse"], [30, 0, 1, "", "is_parameterized"], [30, 4, 1, "", "label"], [30, 4, 1, "", "mutable"], [30, 4, 1, "", "name"], [30, 4, 1, "", "num_clbits"], [30, 4, 1, "", "num_qubits"], [30, 4, 1, "", "params"], [30, 0, 1, "", "repeat"], [30, 0, 1, "", "reverse_ops"], [30, 0, 1, "", "soft_compare"], [30, 0, 1, "", "to_mutable"], [30, 4, 1, "", "unit"], [30, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SaveStabilizer": [[31, 0, 1, "", "add_decomposition"], [31, 0, 1, "", "assemble"], [31, 4, 1, "", "base_class"], [31, 0, 1, "", "broadcast_arguments"], [31, 0, 1, "", "c_if"], [31, 4, 1, "", "condition"], [31, 4, 1, "", "condition_bits"], [31, 0, 1, "", "copy"], [31, 4, 1, "", "decompositions"], [31, 4, 1, "", "definition"], [31, 4, 1, "", "duration"], [31, 0, 1, "", "inverse"], [31, 0, 1, "", "is_parameterized"], [31, 4, 1, "", "label"], [31, 4, 1, "", "mutable"], [31, 4, 1, "", "name"], [31, 4, 1, "", "num_clbits"], [31, 4, 1, "", "num_qubits"], [31, 4, 1, "", "params"], [31, 0, 1, "", "repeat"], [31, 0, 1, "", "reverse_ops"], [31, 0, 1, "", "soft_compare"], [31, 0, 1, "", "to_mutable"], [31, 4, 1, "", "unit"], [31, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SaveState": [[32, 0, 1, "", "add_decomposition"], [32, 0, 1, "", "assemble"], [32, 4, 1, "", "base_class"], [32, 0, 1, "", "broadcast_arguments"], [32, 0, 1, "", "c_if"], [32, 4, 1, "", "condition"], [32, 4, 1, "", "condition_bits"], [32, 0, 1, "", "copy"], [32, 4, 1, "", "decompositions"], [32, 4, 1, "", "definition"], [32, 4, 1, "", "duration"], [32, 0, 1, "", "inverse"], [32, 0, 1, "", "is_parameterized"], [32, 4, 1, "", "label"], [32, 4, 1, "", "mutable"], [32, 4, 1, "", "name"], [32, 4, 1, "", "num_clbits"], [32, 4, 1, "", "num_qubits"], [32, 4, 1, "", "params"], [32, 0, 1, "", "repeat"], [32, 0, 1, "", "reverse_ops"], [32, 0, 1, "", "soft_compare"], [32, 0, 1, "", "to_mutable"], [32, 4, 1, "", "unit"], [32, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SaveStatevector": [[33, 0, 1, "", "add_decomposition"], [33, 0, 1, "", "assemble"], [33, 4, 1, "", "base_class"], [33, 0, 1, "", "broadcast_arguments"], [33, 0, 1, "", "c_if"], [33, 4, 1, "", "condition"], [33, 4, 1, "", "condition_bits"], [33, 0, 1, "", "copy"], [33, 4, 1, "", "decompositions"], [33, 4, 1, "", "definition"], [33, 4, 1, "", "duration"], [33, 0, 1, "", "inverse"], [33, 0, 1, "", "is_parameterized"], [33, 4, 1, "", "label"], [33, 4, 1, "", "mutable"], [33, 4, 1, "", "name"], [33, 4, 1, "", "num_clbits"], [33, 4, 1, "", "num_qubits"], [33, 4, 1, "", "params"], [33, 0, 1, "", "repeat"], [33, 0, 1, "", "reverse_ops"], [33, 0, 1, "", "soft_compare"], [33, 0, 1, "", "to_mutable"], [33, 4, 1, "", "unit"], [33, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SaveStatevectorDict": [[34, 0, 1, "", "add_decomposition"], [34, 0, 1, "", "assemble"], [34, 4, 1, "", "base_class"], [34, 0, 1, "", "broadcast_arguments"], [34, 0, 1, "", "c_if"], [34, 4, 1, "", "condition"], [34, 4, 1, "", "condition_bits"], [34, 0, 1, "", "copy"], [34, 4, 1, "", "decompositions"], [34, 4, 1, "", "definition"], [34, 4, 1, "", "duration"], [34, 0, 1, "", "inverse"], [34, 0, 1, "", "is_parameterized"], [34, 4, 1, "", "label"], [34, 4, 1, "", "mutable"], [34, 4, 1, "", "name"], [34, 4, 1, "", "num_clbits"], [34, 4, 1, "", "num_qubits"], [34, 4, 1, "", "params"], [34, 0, 1, "", "repeat"], [34, 0, 1, "", "reverse_ops"], [34, 0, 1, "", "soft_compare"], [34, 0, 1, "", "to_mutable"], [34, 4, 1, "", "unit"], [34, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SaveSuperOp": [[35, 0, 1, "", "add_decomposition"], [35, 0, 1, "", "assemble"], [35, 4, 1, "", "base_class"], [35, 0, 1, "", "broadcast_arguments"], [35, 0, 1, "", "c_if"], [35, 4, 1, "", "condition"], [35, 4, 1, "", "condition_bits"], [35, 0, 1, "", "copy"], [35, 4, 1, "", "decompositions"], [35, 4, 1, "", "definition"], [35, 4, 1, "", "duration"], [35, 0, 1, "", "inverse"], [35, 0, 1, "", "is_parameterized"], [35, 4, 1, "", "label"], [35, 4, 1, "", "mutable"], [35, 4, 1, "", "name"], [35, 4, 1, "", "num_clbits"], [35, 4, 1, "", "num_qubits"], [35, 4, 1, "", "params"], [35, 0, 1, "", "repeat"], [35, 0, 1, "", "reverse_ops"], [35, 0, 1, "", "soft_compare"], [35, 0, 1, "", "to_mutable"], [35, 4, 1, "", "unit"], [35, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SaveUnitary": [[36, 0, 1, "", "add_decomposition"], [36, 0, 1, "", "assemble"], [36, 4, 1, "", "base_class"], [36, 0, 1, "", "broadcast_arguments"], [36, 0, 1, "", "c_if"], [36, 4, 1, "", "condition"], [36, 4, 1, "", "condition_bits"], [36, 0, 1, "", "copy"], [36, 4, 1, "", "decompositions"], [36, 4, 1, "", "definition"], [36, 4, 1, "", "duration"], [36, 0, 1, "", "inverse"], [36, 0, 1, "", "is_parameterized"], [36, 4, 1, "", "label"], [36, 4, 1, "", "mutable"], [36, 4, 1, "", "name"], [36, 4, 1, "", "num_clbits"], [36, 4, 1, "", "num_qubits"], [36, 4, 1, "", "params"], [36, 0, 1, "", "repeat"], [36, 0, 1, "", "reverse_ops"], [36, 0, 1, "", "soft_compare"], [36, 0, 1, "", "to_mutable"], [36, 4, 1, "", "unit"], [36, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SetDensityMatrix": [[37, 0, 1, "", "add_decomposition"], [37, 0, 1, "", "assemble"], [37, 4, 1, "", "base_class"], [37, 0, 1, "", "broadcast_arguments"], [37, 0, 1, "", "c_if"], [37, 4, 1, "", "condition"], [37, 4, 1, "", "condition_bits"], [37, 0, 1, "", "copy"], [37, 4, 1, "", "decompositions"], [37, 4, 1, "", "definition"], [37, 4, 1, "", "duration"], [37, 0, 1, "", "inverse"], [37, 0, 1, "", "is_parameterized"], [37, 4, 1, "", "label"], [37, 4, 1, "", "mutable"], [37, 4, 1, "", "name"], [37, 4, 1, "", "num_clbits"], [37, 4, 1, "", "num_qubits"], [37, 4, 1, "", "params"], [37, 0, 1, "", "repeat"], [37, 0, 1, "", "reverse_ops"], [37, 0, 1, "", "soft_compare"], [37, 0, 1, "", "to_mutable"], [37, 4, 1, "", "unit"], [37, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SetMatrixProductState": [[38, 0, 1, "", "add_decomposition"], [38, 0, 1, "", "assemble"], [38, 4, 1, "", "base_class"], [38, 0, 1, "", "broadcast_arguments"], [38, 0, 1, "", "c_if"], [38, 4, 1, "", "condition"], [38, 4, 1, "", "condition_bits"], [38, 0, 1, "", "copy"], [38, 4, 1, "", "decompositions"], [38, 4, 1, "", "definition"], [38, 4, 1, "", "duration"], [38, 0, 1, "", "inverse"], [38, 0, 1, "", "is_parameterized"], [38, 4, 1, "", "label"], [38, 4, 1, "", "mutable"], [38, 4, 1, "", "name"], [38, 4, 1, "", "num_clbits"], [38, 4, 1, "", "num_qubits"], [38, 4, 1, "", "params"], [38, 0, 1, "", "repeat"], [38, 0, 1, "", "reverse_ops"], [38, 0, 1, "", "soft_compare"], [38, 0, 1, "", "to_mutable"], [38, 4, 1, "", "unit"], [38, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SetStabilizer": [[39, 0, 1, "", "add_decomposition"], [39, 0, 1, "", "assemble"], [39, 4, 1, "", "base_class"], [39, 0, 1, "", "broadcast_arguments"], [39, 0, 1, "", "c_if"], [39, 4, 1, "", "condition"], [39, 4, 1, "", "condition_bits"], [39, 0, 1, "", "copy"], [39, 4, 1, "", "decompositions"], [39, 4, 1, "", "definition"], [39, 4, 1, "", "duration"], [39, 0, 1, "", "inverse"], [39, 0, 1, "", "is_parameterized"], [39, 4, 1, "", "label"], [39, 4, 1, "", "mutable"], [39, 4, 1, "", "name"], [39, 4, 1, "", "num_clbits"], [39, 4, 1, "", "num_qubits"], [39, 4, 1, "", "params"], [39, 0, 1, "", "repeat"], [39, 0, 1, "", "reverse_ops"], [39, 0, 1, "", "soft_compare"], [39, 0, 1, "", "to_mutable"], [39, 4, 1, "", "unit"], [39, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SetStatevector": [[40, 0, 1, "", "add_decomposition"], [40, 0, 1, "", "assemble"], [40, 4, 1, "", "base_class"], [40, 0, 1, "", "broadcast_arguments"], [40, 0, 1, "", "c_if"], [40, 4, 1, "", "condition"], [40, 4, 1, "", "condition_bits"], [40, 0, 1, "", "copy"], [40, 4, 1, "", "decompositions"], [40, 4, 1, "", "definition"], [40, 4, 1, "", "duration"], [40, 0, 1, "", "inverse"], [40, 0, 1, "", "is_parameterized"], [40, 4, 1, "", "label"], [40, 4, 1, "", "mutable"], [40, 4, 1, "", "name"], [40, 4, 1, "", "num_clbits"], [40, 4, 1, "", "num_qubits"], [40, 4, 1, "", "params"], [40, 0, 1, "", "repeat"], [40, 0, 1, "", "reverse_ops"], [40, 0, 1, "", "soft_compare"], [40, 0, 1, "", "to_mutable"], [40, 4, 1, "", "unit"], [40, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SetSuperOp": [[41, 0, 1, "", "add_decomposition"], [41, 0, 1, "", "assemble"], [41, 4, 1, "", "base_class"], [41, 0, 1, "", "broadcast_arguments"], [41, 0, 1, "", "c_if"], [41, 4, 1, "", "condition"], [41, 4, 1, "", "condition_bits"], [41, 0, 1, "", "copy"], [41, 4, 1, "", "decompositions"], [41, 4, 1, "", "definition"], [41, 4, 1, "", "duration"], [41, 0, 1, "", "inverse"], [41, 0, 1, "", "is_parameterized"], [41, 4, 1, "", "label"], [41, 4, 1, "", "mutable"], [41, 4, 1, "", "name"], [41, 4, 1, "", "num_clbits"], [41, 4, 1, "", "num_qubits"], [41, 4, 1, "", "params"], [41, 0, 1, "", "repeat"], [41, 0, 1, "", "reverse_ops"], [41, 0, 1, "", "soft_compare"], [41, 0, 1, "", "to_mutable"], [41, 4, 1, "", "unit"], [41, 0, 1, "", "validate_parameter"]], "qiskit_aer.library.SetUnitary": [[42, 0, 1, "", "add_decomposition"], [42, 0, 1, "", "assemble"], [42, 4, 1, "", "base_class"], [42, 0, 1, "", "broadcast_arguments"], [42, 0, 1, "", "c_if"], [42, 4, 1, "", "condition"], [42, 4, 1, "", "condition_bits"], [42, 0, 1, "", "copy"], [42, 4, 1, "", "decompositions"], [42, 4, 1, "", "definition"], [42, 4, 1, "", "duration"], [42, 0, 1, "", "inverse"], [42, 0, 1, "", "is_parameterized"], [42, 4, 1, "", "label"], [42, 4, 1, "", "mutable"], [42, 4, 1, "", "name"], [42, 4, 1, "", "num_clbits"], [42, 4, 1, "", "num_qubits"], [42, 4, 1, "", "params"], [42, 0, 1, "", "repeat"], [42, 0, 1, "", "reverse_ops"], [42, 0, 1, "", "soft_compare"], [42, 0, 1, "", "to_mutable"], [42, 4, 1, "", "unit"], [42, 0, 1, "", "validate_parameter"]], "qiskit_aer.noise": [[64, 3, 1, "", "LocalNoisePass"], [65, 3, 1, "", "NoiseModel"], [66, 3, 1, "", "PauliLindbladError"], [67, 3, 1, "", "QuantumError"], [68, 3, 1, "", "ReadoutError"], [69, 3, 1, "", "RelaxationNoisePass"], [70, 5, 1, "", "amplitude_damping_error"], [71, 5, 1, "", "coherent_unitary_error"], [72, 5, 1, "", "depolarizing_error"], [80, 5, 1, "", "kraus_error"], [81, 5, 1, "", "mixed_unitary_error"], [82, 5, 1, "", "pauli_error"], [83, 5, 1, "", "phase_amplitude_damping_error"], [84, 5, 1, "", "phase_damping_error"], [85, 5, 1, "", "reset_error"], [86, 5, 1, "", "thermal_relaxation_error"]], "qiskit_aer.noise.LocalNoisePass": [[64, 0, 1, "", "__call__"], [64, 0, 1, "", "execute"], [64, 4, 1, "", "is_analysis_pass"], [64, 4, 1, "", "is_transformation_pass"], [64, 0, 1, "", "name"], [64, 0, 1, "", "run"], [64, 0, 1, "", "update_status"]], "qiskit_aer.noise.NoiseModel": [[65, 0, 1, "", "add_all_qubit_quantum_error"], [65, 0, 1, "", "add_all_qubit_readout_error"], [65, 0, 1, "", "add_basis_gates"], [65, 0, 1, "", "add_quantum_error"], [65, 0, 1, "", "add_readout_error"], [65, 4, 1, "", "basis_gates"], [65, 0, 1, "", "from_backend"], [65, 0, 1, "", "from_backend_properties"], [65, 0, 1, "", "from_dict"], [65, 0, 1, "", "is_ideal"], [65, 4, 1, "", "noise_instructions"], [65, 4, 1, "", "noise_qubits"], [65, 0, 1, "", "reset"], [65, 0, 1, "", "to_dict"]], "qiskit_aer.noise.PauliLindbladError": [[66, 0, 1, "", "__call__"], [66, 4, 1, "", "atol"], [66, 0, 1, "", "compose"], [66, 0, 1, "", "copy"], [66, 4, 1, "", "dim"], [66, 0, 1, "", "dot"], [66, 0, 1, "", "expand"], [66, 0, 1, "", "from_dict"], [66, 4, 1, "", "generators"], [66, 4, 1, "", "id"], [66, 0, 1, "", "ideal"], [66, 0, 1, "", "input_dims"], [66, 0, 1, "", "inverse"], [66, 0, 1, "", "is_cp"], [66, 0, 1, "", "is_cptp"], [66, 0, 1, "", "is_tp"], [66, 4, 1, "", "num_qubits"], [66, 0, 1, "", "output_dims"], [66, 0, 1, "", "power"], [66, 4, 1, "", "qargs"], [66, 4, 1, "", "rates"], [66, 0, 1, "", "reshape"], [66, 4, 1, "", "rtol"], [66, 4, 1, "", "settings"], [66, 0, 1, "", "simplify"], [66, 4, 1, "", "size"], [66, 0, 1, "", "subsystem_errors"], [66, 0, 1, "", "tensor"], [66, 0, 1, "", "to_dict"], [66, 0, 1, "", "to_instruction"], [66, 0, 1, "", "to_pauli_error"], [66, 0, 1, "", "to_quantum_error"], [66, 0, 1, "", "to_quantumchannel"]], "qiskit_aer.noise.QuantumError": [[67, 0, 1, "", "__call__"], [67, 4, 1, "", "atol"], [67, 4, 1, "", "circuits"], [67, 0, 1, "", "compose"], [67, 0, 1, "", "copy"], [67, 4, 1, "", "dim"], [67, 0, 1, "", "dot"], [67, 0, 1, "", "error_term"], [67, 0, 1, "", "expand"], [67, 0, 1, "", "from_dict"], [67, 4, 1, "", "id"], [67, 0, 1, "", "ideal"], [67, 0, 1, "", "input_dims"], [67, 4, 1, "", "num_qubits"], [67, 0, 1, "", "output_dims"], [67, 0, 1, "", "power"], [67, 4, 1, "", "probabilities"], [67, 4, 1, "", "qargs"], [67, 0, 1, "", "reshape"], [67, 4, 1, "", "rtol"], [67, 4, 1, "", "size"], [67, 0, 1, "", "tensor"], [67, 0, 1, "", "to_dict"], [67, 0, 1, "", "to_instruction"], [67, 0, 1, "", "to_quantumchannel"]], "qiskit_aer.noise.ReadoutError": [[68, 0, 1, "", "__mul__"], [68, 4, 1, "", "atol"], [68, 0, 1, "", "compose"], [68, 0, 1, "", "copy"], [68, 0, 1, "", "dot"], [68, 0, 1, "", "expand"], [68, 0, 1, "", "ideal"], [68, 4, 1, "", "num_qubits"], [68, 4, 1, "", "number_of_qubits"], [68, 0, 1, "", "power"], [68, 4, 1, "", "probabilities"], [68, 4, 1, "", "rtol"], [68, 0, 1, "", "set_atol"], [68, 0, 1, "", "set_rtol"], [68, 0, 1, "", "tensor"], [68, 0, 1, "", "to_dict"], [68, 0, 1, "", "to_instruction"]], "qiskit_aer.noise.RelaxationNoisePass": [[69, 0, 1, "", "__call__"], [69, 0, 1, "", "execute"], [69, 4, 1, "", "is_analysis_pass"], [69, 4, 1, "", "is_transformation_pass"], [69, 0, 1, "", "name"], [69, 0, 1, "", "run"], [69, 0, 1, "", "update_status"]], "qiskit_aer.noise.device": [[73, 5, 1, "", "basic_device_gate_errors"], [74, 5, 1, "", "basic_device_readout_errors"], [75, 5, 1, "", "gate_error_values"], [76, 5, 1, "", "gate_length_values"], [77, 5, 1, "", "gate_param_values"], [78, 5, 1, "", "readout_error_values"], [79, 5, 1, "", "thermal_relaxation_values"]], "qiskit_aer.primitives": [[87, 3, 1, "", "Estimator"], [88, 3, 1, "", "EstimatorV2"], [89, 3, 1, "", "Sampler"], [90, 3, 1, "", "SamplerV2"]], "qiskit_aer.primitives.Estimator": [[87, 4, 1, "", "approximation"], [87, 4, 1, "", "options"], [87, 0, 1, "", "run"], [87, 0, 1, "", "set_options"]], "qiskit_aer.primitives.EstimatorV2": [[88, 0, 1, "", "from_backend"], [88, 4, 1, "", "options"], [88, 0, 1, "", "run"]], "qiskit_aer.primitives.Sampler": [[89, 4, 1, "", "options"], [89, 0, 1, "", "run"], [89, 0, 1, "", "set_options"]], "qiskit_aer.primitives.SamplerV2": [[90, 4, 1, "", "default_shots"], [90, 0, 1, "", "from_backend"], [90, 4, 1, "", "options"], [90, 0, 1, "", "run"], [90, 4, 1, "", "seed"]], "qiskit_aer.quantum_info": [[91, 3, 1, "", "AerDensityMatrix"], [92, 3, 1, "", "AerStatevector"]], "qiskit_aer.quantum_info.AerDensityMatrix": [[91, 0, 1, "", "__mul__"], [91, 4, 1, "", "atol"], [91, 0, 1, "", "conjugate"], [91, 0, 1, "", "copy"], [91, 4, 1, "", "data"], [91, 4, 1, "", "dim"], [91, 0, 1, "", "dims"], [91, 0, 1, "", "draw"], [91, 0, 1, "", "evolve"], [91, 0, 1, "", "expand"], [91, 0, 1, "", "expectation_value"], [91, 0, 1, "", "from_instruction"], [91, 0, 1, "", "from_int"], [91, 0, 1, "", "from_label"], [91, 0, 1, "", "is_valid"], [91, 0, 1, "", "measure"], [91, 0, 1, "", "metadata"], [91, 4, 1, "", "num_qubits"], [91, 0, 1, "", "partial_transpose"], [91, 0, 1, "", "probabilities"], [91, 0, 1, "", "probabilities_dict"], [91, 0, 1, "", "purity"], [91, 0, 1, "", "reset"], [91, 0, 1, "", "reverse_qargs"], [91, 4, 1, "", "rtol"], [91, 0, 1, "", "sample_counts"], [91, 0, 1, "", "sample_memory"], [91, 0, 1, "", "seed"], [91, 4, 1, "", "settings"], [91, 0, 1, "", "tensor"], [91, 0, 1, "", "to_dict"], [91, 0, 1, "", "to_operator"], [91, 0, 1, "", "to_statevector"], [91, 0, 1, "", "trace"]], "qiskit_aer.quantum_info.AerStatevector": [[92, 0, 1, "", "__getitem__"], [92, 0, 1, "", "__len__"], [92, 0, 1, "", "__mul__"], [92, 4, 1, "", "atol"], [92, 0, 1, "", "conjugate"], [92, 0, 1, "", "copy"], [92, 4, 1, "", "data"], [92, 4, 1, "", "dim"], [92, 0, 1, "", "dims"], [92, 0, 1, "", "draw"], [92, 0, 1, "", "equiv"], [92, 0, 1, "", "evolve"], [92, 0, 1, "", "expand"], [92, 0, 1, "", "expectation_value"], [92, 0, 1, "", "from_instruction"], [92, 0, 1, "", "from_int"], [92, 0, 1, "", "from_label"], [92, 0, 1, "", "inner"], [92, 0, 1, "", "is_valid"], [92, 0, 1, "", "measure"], [92, 0, 1, "", "metadata"], [92, 4, 1, "", "num_qubits"], [92, 0, 1, "", "probabilities"], [92, 0, 1, "", "probabilities_dict"], [92, 0, 1, "", "purity"], [92, 0, 1, "", "reset"], [92, 0, 1, "", "reverse_qargs"], [92, 4, 1, "", "rtol"], [92, 0, 1, "", "sample_counts"], [92, 0, 1, "", "sample_memory"], [92, 0, 1, "", "seed"], [92, 4, 1, "", "settings"], [92, 0, 1, "", "tensor"], [92, 0, 1, "", "to_dict"], [92, 0, 1, "", "to_operator"], [92, 0, 1, "", "trace"]], "qiskit_aer.utils": [[93, 5, 1, "", "approximate_noise_model"], [94, 5, 1, "", "approximate_quantum_error"], [95, 5, 1, "", "insert_noise"], [96, 5, 1, "", "transform_noise_model"], [97, 5, 1, "", "transpile_noise_model"], [98, 5, 1, "", "transpile_quantum_error"]]}, "objtypes": {"0": "py:method", "1": "py:module", "2": "py:exception", "3": "py:class", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "method", "Python method"], "1": ["py", "module", "Python module"], "2": ["py", "exception", "Python exception"], "3": ["py", "class", "Python class"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"qiskit": [0, 9, 10, 13, 101], "aer": [0, 1, 5, 6, 9, 10, 13, 99, 101], "api": 0, "refer": 0, "job": 1, "qiskit_a": [1, 2, 3, 4, 5, 6, 7], "class": [1, 2, 3, 4], "instruct": [2, 99], "librari": 2, "set": [2, 8, 99], "custom": [2, 3, 8, 99, 102], "simul": [2, 5, 8, 9, 99, 100, 101, 102, 104, 105, 106], "state": [2, 6, 8, 91, 92, 99, 105], "quantumcircuit": 2, "method": [2, 8, 99, 105], "save": [2, 8, 99], "data": [2, 8], "deriv": 2, "compat": 2, "nois": [3, 100, 101, 102, 103], "model": [3, 100, 101, 102], "build": [3, 101], "devic": [3, 100], "quantum": [3, 6, 9, 99, 101], "error": [3, 101], "function": [3, 7], "transpil": 3, "pass": 3, "paramet": 3, "primit": 4, "provid": [5, 100], "backend": [5, 100], "legaci": 5, "except": 5, "info": 6, "quantum_info": 6, "util": 7, "addit": 8, "circuit": [8, 99, 100, 102], "get": 9, "start": 9, "instal": [9, 99], "your": 9, "first": 9, "program": 9, "readi": 9, "go": 9, "how": [10, 104], "To": 10, "guid": 10, "run": [11, 12, 100], "threadpool": 11, "usag": 11, "executor": 11, "exampl": [11, 101, 103], "execut": [11, 101, 102], "multipl": [12, 99], "gpu": [12, 99], "node": 12, "document": 13, "releas": 14, "note": [14, 101], "0": 14, "16": 14, "1": [14, 101], "new": 14, "featur": 14, "deprec": 14, "bug": 14, "fix": 14, "15": 14, "upgrad": 14, "14": 14, "prelud": 14, "13": 14, "known": 14, "issu": 14, "12": 14, "11": 14, "10": 14, "other": 14, "9": 14, "aererror": 15, "aerprovid": 16, "aersimul": [17, 99], "qasmsimul": 18, "statevectorsimul": 19, "unitarysimul": 20, "aerjob": 21, "saveamplitud": 22, "saveamplitudessquar": 23, "saveclifford": 24, "savedensitymatrix": 25, "saveexpectationvalu": 26, "saveexpectationvaluevari": 27, "savematrixproductst": 28, "saveprob": 29, "saveprobabilitiesdict": 30, "savestabil": 31, "savest": 32, "savestatevector": 33, "savestatevectordict": 34, "savesuperop": 35, "saveunitari": 36, "setdensitymatrix": 37, "setmatrixproductst": 38, "setstabil": 39, "setstatevector": 40, "setsuperop": 41, "setunitari": 42, "save_amplitud": 43, "save_amplitudes_squar": 44, "save_clifford": 45, "save_density_matrix": 46, "save_expectation_valu": 47, "save_expectation_value_vari": 48, "save_matrix_product_st": 49, "save_prob": 50, "save_probabilities_dict": 51, "save_stabil": 52, "save_st": 53, "save_statevector": 54, "save_statevector_dict": 55, "save_superop": 56, "save_unitari": 57, "set_density_matrix": 58, "set_matrix_product_st": 59, "set_stabil": 60, "set_statevector": 61, "set_superop": 62, "set_unitari": 63, "localnoisepass": 64, "noisemodel": 65, "paulilindbladerror": 66, "quantumerror": 67, "readouterror": 68, "relaxationnoisepass": 69, "amplitude_damping_error": 70, "coherent_unitary_error": 71, "depolarizing_error": 72, "basic_device_gate_error": 73, "basic_device_readout_error": 74, "gate_error_valu": 75, "gate_length_valu": 76, "gate_param_valu": 77, "readout_error_valu": 78, "thermal_relaxation_valu": 79, "kraus_error": 80, "mixed_unitary_error": 81, "pauli_error": 82, "phase_amplitude_damping_error": 83, "phase_damping_error": 84, "reset_error": 85, "thermal_relaxation_error": 86, "estim": 87, "estimatorv2": 88, "sampler": 89, "samplerv2": 90, "aerdensitymatrix": 91, "singl": [91, 92], "qubit": [91, 92, 101], "label": [91, 92], "aerstatevector": 92, "approximate_noise_model": 93, "approximate_quantum_error": 94, "insert_nois": 95, "transform_noise_model": 96, "transpile_noise_model": 97, "transpile_quantum_error": 98, "introduct": [99, 100, 101, 102, 103, 104], "The": [99, 104], "return": 99, "measur": 99, "outcom": 99, "each": 99, "shot": 99, "option": [99, 104], "automat": 99, "support": 99, "precis": 99, "final": 99, "statevector": 99, "unitari": [99, 102], "us": [99, 102, 104, 105], "initi": 99, "densiti": 99, "matrix": [99, 102, 105], "stabil": [99, 104], "fake": 100, "test": 100, "comparison": 100, "gener": 100, "mimic": 100, "modul": 101, "combin": 101, "convert": 101, "from": 101, "quantumchannel": 101, "oper": [101, 102], "readout": 101, "ad": 101, "all": 101, "2": 101, "specif": 101, "non": 101, "local": 101, "noisi": [101, 102], "ideal": [101, 102], "basic": 101, "bit": 101, "flip": 101, "t1": 101, "t2": 101, "thermal": 101, "relax": 101, "appli": 102, "gate": 102, "creat": 102, "output": 102, "transform": 103, "overview": 103, "approxim": 103, "amplitud": 103, "damp": 103, "reset": 103, "differ": 103, "input": 103, "type": 103, "extend": 104, "doe": 104, "thi": 104, "work": 104, "when": 104, "shall": 104, "i": 104, "product": 105, "high": 106, "perform": 106, "tutori": 106}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"set_density_matrix": [[58, "set-density-matrix"]], "save_expectation_value_variance": [[48, "save-expectation-value-variance"]], "set_matrix_product_state": [[59, "set-matrix-product-state"]], "save_superop": [[56, "save-superop"]], "save_unitary": [[57, "save-unitary"]], "set_stabilizer": [[60, "set-stabilizer"]], "save_statevector": [[54, "save-statevector"]], "save_state": [[53, "save-state"]], "save_probabilities": [[50, "save-probabilities"]], "set_statevector": [[61, "set-statevector"]], "save_stabilizer": [[52, "save-stabilizer"]], "save_matrix_product_state": [[49, "save-matrix-product-state"]], "set_superop": [[62, "set-superop"]], "set_unitary": [[63, "set-unitary"]], "save_statevector_dict": [[55, "save-statevector-dict"]], "save_probabilities_dict": [[51, "save-probabilities-dict"]], "SetDensityMatrix": [[37, "setdensitymatrix"]], "SaveStatevectorDict": [[34, "savestatevectordict"]], "SetStatevector": [[40, "setstatevector"]], "SaveState": [[32, "savestate"]], "SaveSuperOp": [[35, "savesuperop"]], "SetMatrixProductState": [[38, "setmatrixproductstate"]], "save_amplitudes": [[43, "save-amplitudes"]], "save_expectation_value": [[47, "save-expectation-value"]], "save_amplitudes_squared": [[44, "save-amplitudes-squared"]], "SetSuperOp": [[41, "setsuperop"]], "save_clifford": [[45, "save-clifford"]], "save_density_matrix": [[46, "save-density-matrix"]], "SetUnitary": [[42, "setunitary"]], "SetStabilizer": [[39, "setstabilizer"]], "SaveUnitary": [[36, "saveunitary"]], "SaveStatevector": [[33, "savestatevector"]], "Noise Models (qiskit_aer.noise)": [[3, "noise-models-qiskit-aer-noise"]], "Building Noise Models": [[3, "building-noise-models"], [101, "Building-Noise-Models"]], "Device Noise Models": [[3, "device-noise-models"]], "Custom Noise Models": [[3, "custom-noise-models"]], "Classes": [[3, "classes"], [1, "classes"], [4, "classes"]], "Quantum Error Functions": [[3, "quantum-error-functions"]], "Noise Transpiler Passes": [[3, "noise-transpiler-passes"]], "Device Noise Parameters": [[3, "device-noise-parameters"]], "Release Notes": [[14, "release-notes"]], "0.16.1": [[14, "release-notes-0-16-1"]], "New Features": [[14, "new-features"], [14, "release-notes-0-15-new-features"], [14, "release-notes-0-14-new-features"], [14, "release-notes-0-13-0-new-features"], [14, "release-notes-0-12-0-new-features"], [14, "release-notes-0-11-0-new-features"], [14, "release-notes-0-10-0-new-features"], [14, "release-notes-0-9-0-new-features"]], "Deprecation Notes": [[14, "deprecation-notes"], [14, "release-notes-0-16-deprecation-notes"], [14, "release-notes-0-15-deprecation-notes"], [14, "release-notes-0-14-deprecation-notes"], [14, "release-notes-0-13-0-deprecation-notes"], [14, "release-notes-0-12-0-deprecation-notes"], [14, "release-notes-0-10-0-deprecation-notes"], [14, "release-notes-0-9-0-deprecation-notes"]], "0.16": [[14, "release-notes-0-16"]], "Bug Fixes": [[14, "bug-fixes"], [14, "release-notes-0-15-bug-fixes"], [14, "release-notes-0-14-bug-fixes"], [14, "release-notes-0-13-0-bug-fixes"], [14, "release-notes-0-12-0-bug-fixes"], [14, "release-notes-0-11-0-bug-fixes"], [14, "release-notes-0-9-0-bug-fixes"]], "0.15": [[14, "release-notes-0-15"]], "Upgrade Notes": [[14, "upgrade-notes"], [14, "release-notes-0-14-upgrade-notes"], [14, "release-notes-0-13-0-upgrade-notes"], [14, "release-notes-0-12-0-upgrade-notes"], [14, "release-notes-0-11-0-upgrade-notes"], [14, "release-notes-0-10-0-upgrade-notes"], [14, "release-notes-0-9-0-upgrade-notes"]], "0.14": [[14, "release-notes-0-14"]], "Prelude": [[14, "prelude"], [14, "release-notes-0-13-0-prelude"], [14, "release-notes-0-12-0-prelude"], [14, "release-notes-0-11-0-prelude"], [14, "release-notes-0-10-0-prelude"], [14, "release-notes-0-9-0-prelude"]], "0.13.0": [[14, "release-notes-0-13-0"]], "Known Issues": [[14, "known-issues"], [14, "release-notes-0-12-0-known-issues"], [14, "release-notes-0-11-0-known-issues"]], "0.12.0": [[14, "release-notes-0-12-0"]], "0.11.0": [[14, "release-notes-0-11-0"]], "0.10.0": [[14, "release-notes-0-10-0"]], "Other Notes": [[14, "other-notes"]], "0.9.0": [[14, "release-notes-0-9-0"]], "Additional circuit methods": [[8, "additional-circuit-methods"]], "Setting a custom simulator state": [[8, "setting-a-custom-simulator-state"]], "Saving Simulator Data": [[8, "saving-simulator-data"], [2, "saving-simulator-data"]], "Instruction Library (qiskit_aer.library)": [[2, "instruction-library-qiskit-aer-library"]], "Setting a Custom Simulator State": [[2, "setting-a-custom-simulator-state"]], "Instruction Classes": [[2, "instruction-classes"]], "QuantumCircuit Methods": [[2, "quantumcircuit-methods"], [2, "id1"]], "Simulator State Save Instruction Classes": [[2, "simulator-state-save-instruction-classes"]], "Simulator Derived Data Save Instruction Classes": [[2, "simulator-derived-data-save-instruction-classes"]], "Method Compatibility": [[2, "method-compatibility"]], "Running with multiple-GPUs and/or multiple nodes": [[12, "running-with-multiple-gpus-and-or-multiple-nodes"]], "Qiskit Aer documentation": [[13, "qiskit-aer-documentation"]], "Qiskit Aer How-To Guides": [[10, "qiskit-aer-how-to-guides"]], "How to...": [[10, null]], "AerError": [[15, "aererror"]], "Aer Quantum Info (qiskit_aer.quantum_info)": [[6, "aer-quantum-info-qiskit-aer-quantum-info"]], "States": [[6, "states"]], "Aer Jobs (qiskit_aer.jobs)": [[1, "aer-jobs-qiskit-aer-jobs"]], "Aer Provider (qiskit_aer)": [[5, "aer-provider-qiskit-aer"]], "Simulator Provider": [[5, "simulator-provider"]], "Simulator Backends": [[5, "simulator-backends"]], "Legacy Simulator Backends": [[5, "legacy-simulator-backends"]], "Exceptions": [[5, "exceptions"]], "Getting started": [[9, "getting-started"]], "Installation": [[9, "installation"]], "Simulating your first quantum program with Qiskit Aer": [[9, "simulating-your-first-quantum-program-with-qiskit-aer"]], "Ready to get going?\u2026": [[9, "ready-to-get-going"]], "Utilities (qiskit_aer.utils)": [[7, "utilities-qiskit-aer-utils"]], "Functions": [[7, "functions"]], "Running with Threadpool": [[11, "running-with-threadpool"]], "Usage of executor": [[11, "usage-of-executor"]], "Example: Threadpool execution": [[11, "example-threadpool-execution"]], "Primitives (qiskit_aer.primitives)": [[4, "primitives-qiskit-aer-primitives"]], "Qiskit Aer API Reference": [[0, "qiskit-aer-api-reference"]], "SaveAmplitudesSquared": [[23, "saveamplitudessquared"]], "AerProvider": [[16, "aerprovider"]], "SaveMatrixProductState": [[28, "savematrixproductstate"]], "SaveProbabilitiesDict": [[30, "saveprobabilitiesdict"]], "SaveExpectationValueVariance": [[27, "saveexpectationvaluevariance"]], "SaveClifford": [[24, "saveclifford"]], "SaveProbabilities": [[29, "saveprobabilities"]], "AerJob": [[21, "aerjob"]], "SaveDensityMatrix": [[25, "savedensitymatrix"]], "SaveExpectationValue": [[26, "saveexpectationvalue"]], "SaveStabilizer": [[31, "savestabilizer"]], "SaveAmplitudes": [[22, "saveamplitudes"]], "StatevectorSimulator": [[19, "statevectorsimulator"]], "QasmSimulator": [[18, "qasmsimulator"]], "AerSimulator": [[17, "aersimulator"]], "UnitarySimulator": [[20, "unitarysimulator"]], "approximate_noise_model": [[93, "approximate-noise-model"]], "approximate_quantum_error": [[94, "approximate-quantum-error"]], "pauli_error": [[82, "pauli-error"]], "thermal_relaxation_error": [[86, "thermal-relaxation-error"]], "Sampler": [[89, "sampler"]], "insert_noise": [[95, "insert-noise"]], "AerStatevector": [[92, "aerstatevector"]], "Single-qubit state labels": [[92, "id1"], [91, "id1"]], "EstimatorV2": [[88, "estimatorv2"]], "kraus_error": [[80, "kraus-error"]], "mixed_unitary_error": [[81, "mixed-unitary-error"]], "reset_error": [[85, "reset-error"]], "SamplerV2": [[90, "samplerv2"]], "AerDensityMatrix": [[91, "aerdensitymatrix"]], "phase_amplitude_damping_error": [[83, "phase-amplitude-damping-error"]], "phase_damping_error": [[84, "phase-damping-error"]], "Estimator": [[87, "estimator"]], "thermal_relaxation_values": [[79, "thermal-relaxation-values"]], "coherent_unitary_error": [[71, "coherent-unitary-error"]], "depolarizing_error": [[72, "depolarizing-error"]], "gate_length_values": [[76, "gate-length-values"]], "gate_param_values": [[77, "gate-param-values"]], "PauliLindbladError": [[66, "paulilindbladerror"]], "RelaxationNoisePass": [[69, "relaxationnoisepass"]], "basic_device_gate_errors": [[73, "basic-device-gate-errors"]], "basic_device_readout_errors": [[74, "basic-device-readout-errors"]], "gate_error_values": [[75, "gate-error-values"]], "ReadoutError": [[68, "readouterror"]], "amplitude_damping_error": [[70, "amplitude-damping-error"]], "readout_error_values": [[78, "readout-error-values"]], "NoiseModel": [[65, "noisemodel"]], "LocalNoisePass": [[64, "localnoisepass"]], "QuantumError": [[67, "quantumerror"]], "transpile_quantum_error": [[98, "transpile-quantum-error"]], "Introduction": [[101, "Introduction"], [104, "Introduction"], [99, "Introduction"], [100, "Introduction"], [103, "Introduction"], [102, "Introduction"]], "Qiskit Aer Noise Module": [[101, "Qiskit-Aer-Noise-Module"]], "Quantum Errors": [[101, "Quantum-Errors"]], "Combining quantum errors": [[101, "Combining-quantum-errors"]], "Example": [[101, "Example"]], "Converting to and from QuantumChannel operators": [[101, "Converting-to-and-from-QuantumChannel-operators"]], "Readout Error": [[101, "Readout-Error"]], "Adding errors to a Noise Model": [[101, "Adding-errors-to-a-Noise-Model"]], "1. All-qubit quantum error": [[101, "1.-All-qubit-quantum-error"]], "2. Specific qubit quantum error": [[101, "2.-Specific-qubit-quantum-error"]], "Note on non-local qubit quantum error": [[101, "Note-on-non-local-qubit-quantum-error"]], "Executing a noisy simulation with a noise model": [[101, "Executing-a-noisy-simulation-with-a-noise-model"]], "Noise Model Examples": [[101, "Noise-Model-Examples"]], "Ideal Simulation": [[101, "Ideal-Simulation"]], "Noise Example 1: Basic bit-flip error noise model": [[101, "Noise-Example-1:-Basic-bit-flip-error-noise-model"]], "Executing the noisy simulation": [[101, "Executing-the-noisy-simulation"], [101, "id1"]], "Example 2: T1/T2 thermal relaxation": [[101, "Example-2:-T1/T2-thermal-relaxation"]], "The Extended Stabilizer Simulator": [[104, "The-Extended-Stabilizer-Simulator"]], "How does this work?": [[104, "How-does-this-work?"]], "Simulator Options": [[104, "Simulator-Options"]], "When shall I use it?": [[104, "When-shall-I-use-it?"]], "Simulators": [[99, "Simulators"]], "The AerSimulator": [[99, "The-AerSimulator"]], "Simulating a Quantum Circuit": [[99, "Simulating-a-Quantum-Circuit"]], "Returning measurement outcomes for each shot": [[99, "Returning-measurement-outcomes-for-each-shot"]], "Aer Simulator Options": [[99, "Aer-Simulator-Options"]], "Simulation Method": [[99, "Simulation-Method"]], "Simulation Method Option": [[99, "Simulation-Method-Option"]], "Automatic Simulation Method": [[99, "Automatic-Simulation-Method"]], "GPU Simulation": [[99, "GPU-Simulation"]], "Installing GPU Support": [[99, "Installing-GPU-Support"]], "Simulation Precision": [[99, "Simulation-Precision"]], "Custom Simulator Instructions": [[99, "Custom-Simulator-Instructions"]], "Saving the simulator state": [[99, "Saving-the-simulator-state"]], "Saving the final statevector": [[99, "Saving-the-final-statevector"]], "Saving the circuit unitary": [[99, "Saving-the-circuit-unitary"]], "Saving multiple states": [[99, "Saving-multiple-states"]], "Setting the simulator to a custom state": [[99, "Setting-the-simulator-to-a-custom-state"]], "Setting a Custom Statevector": [[99, "Setting-a-Custom-Statevector"]], "Using the initialize instruction": [[99, "Using-the-initialize-instruction"]], "Setting a custom density matrix": [[99, "Setting-a-custom-density-matrix"]], "Setting a custom stabilizer state": [[99, "Setting-a-custom-stabilizer-state"]], "Setting a custom unitary": [[99, "Setting-a-custom-unitary"]], "Matrix product state simulation method": [[105, "Matrix-product-state-simulation-method"], [105, "id1"]], "Simulation methods": [[105, "Simulation-methods"]], "Using the matrix product state simulation method": [[105, "Using-the-matrix-product-state-simulation-method"]], "transpile_noise_model": [[97, "transpile-noise-model"]], "transform_noise_model": [[96, "transform-noise-model"]], "High-Performance Simulator Tutorials": [[106, "high-performance-simulator-tutorials"]], "Device backend noise model simulations": [[100, "Device-backend-noise-model-simulations"]], "Device Backend Noise Model": [[100, "Device-Backend-Noise-Model"]], "Fake Provider Backends": [[100, "Fake-Provider-Backends"]], "Test circuit for device and simulation comparison": [[100, "Test-circuit-for-device-and-simulation-comparison"]], "Generating a simulator that mimics a device": [[100, "Generating-a-simulator-that-mimics-a-device"]], "Running a noise simulation": [[100, "Running-a-noise-simulation"]], "Noise Transformation": [[103, "Noise-Transformation"]], "Overview": [[103, "Overview"]], "Example: Approximating amplitude damping noise with reset noise.": [[103, "Example:-Approximating-amplitude-damping-noise-with-reset-noise."]], "Different input types": [[103, "Different-input-types"]], "Applying noise to custom unitary gates": [[102, "Applying-noise-to-custom-unitary-gates"]], "Creating matrix operators": [[102, "Creating-matrix-operators"]], "Using operators in circuits": [[102, "Using-operators-in-circuits"]], "Creating a custom unitary in a noise model": [[102, "Creating-a-custom-unitary-in-a-noise-model"]], "Simulating a custom unitary noise model": [[102, "Simulating-a-custom-unitary-noise-model"]], "Ideal output": [[102, "Ideal-output"]], "Noisy circuit execution": [[102, "Noisy-circuit-execution"]]}, "indexentries": {"module": [[1, "module-qiskit_aer.jobs"], [2, "module-qiskit_aer.library"], [3, "module-qiskit_aer.noise"], [4, "module-qiskit_aer.primitives"], [5, "module-qiskit_aer"], [6, "module-qiskit_aer.quantum_info"], [7, "module-qiskit_aer.utils"]], "qiskit_aer.jobs": [[1, "module-qiskit_aer.jobs"]], "qiskit_aer.library": [[2, "module-qiskit_aer.library"]], "qiskit_aer.noise": [[3, "module-qiskit_aer.noise"]], "qiskit_aer.primitives": [[4, "module-qiskit_aer.primitives"]], "qiskit_aer": [[5, "module-qiskit_aer"]], "qiskit_aer.quantum_info": [[6, "module-qiskit_aer.quantum_info"]], "qiskit_aer.utils": [[7, "module-qiskit_aer.utils"]], "save_amplitudes() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.save_amplitudes"]], "save_amplitudes_squared() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.save_amplitudes_squared"]], "save_clifford() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.save_clifford"]], "save_density_matrix() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.save_density_matrix"]], "save_expectation_value() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.save_expectation_value"]], "save_expectation_value_variance() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.save_expectation_value_variance"]], "save_matrix_product_state() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.save_matrix_product_state"]], "save_probabilities() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.save_probabilities"]], "save_probabilities_dict() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.save_probabilities_dict"]], "save_stabilizer() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.save_stabilizer"]], "save_state() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.save_state"]], "save_statevector() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.save_statevector"]], "save_statevector_dict() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.save_statevector_dict"]], "save_superop() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.save_superop"]], "save_unitary() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.save_unitary"]], "set_density_matrix() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.set_density_matrix"]], "set_matrix_product_state() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.set_matrix_product_state"]], "set_stabilizer() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.set_stabilizer"]], "set_superop() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.set_superop"]], "set_unitary() (quantumcircuit method)": [[8, "qiskit.circuit.QuantumCircuit.set_unitary"]], "aererror": [[15, "qiskit_aer.AerError"]], "with_traceback() (aererror method)": [[15, "qiskit_aer.AerError.with_traceback"]], "aerprovider (class in qiskit_aer)": [[16, "qiskit_aer.AerProvider"]], "backends() (aerprovider method)": [[16, "qiskit_aer.AerProvider.backends"]], "get_backend() (aerprovider method)": [[16, "qiskit_aer.AerProvider.get_backend"]], "version (aerprovider attribute)": [[16, "qiskit_aer.AerProvider.version"]], "aersimulator (class in qiskit_aer)": [[17, "qiskit_aer.AerSimulator"]], "acquire_channel() (aersimulator method)": [[17, "qiskit_aer.AerSimulator.acquire_channel"]], "available_devices() (aersimulator method)": [[17, "qiskit_aer.AerSimulator.available_devices"]], "available_methods() (aersimulator method)": [[17, "qiskit_aer.AerSimulator.available_methods"]], "backend_version (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.backend_version"]], "clear_options() (aersimulator method)": [[17, "qiskit_aer.AerSimulator.clear_options"]], "configuration() (aersimulator method)": [[17, "qiskit_aer.AerSimulator.configuration"]], "control_channel() (aersimulator method)": [[17, "qiskit_aer.AerSimulator.control_channel"]], "coupling_map (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.coupling_map"]], "description (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.description"]], "drive_channel() (aersimulator method)": [[17, "qiskit_aer.AerSimulator.drive_channel"]], "dt (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.dt"]], "dtm (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.dtm"]], "from_backend() (aersimulator class method)": [[17, "qiskit_aer.AerSimulator.from_backend"]], "instruction_durations (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.instruction_durations"]], "instruction_schedule_map (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.instruction_schedule_map"]], "instructions (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.instructions"]], "max_circuits (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.max_circuits"]], "meas_map (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.meas_map"]], "measure_channel() (aersimulator method)": [[17, "qiskit_aer.AerSimulator.measure_channel"]], "name (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.name"]], "num_qubits (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.num_qubits"]], "online_date (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.online_date"]], "operation_names (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.operation_names"]], "operations (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.operations"]], "options (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.options"]], "properties() (aersimulator method)": [[17, "qiskit_aer.AerSimulator.properties"]], "provider (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.provider"]], "qubit_properties() (aersimulator method)": [[17, "qiskit_aer.AerSimulator.qubit_properties"]], "run() (aersimulator method)": [[17, "qiskit_aer.AerSimulator.run"]], "set_max_qubits() (aersimulator method)": [[17, "qiskit_aer.AerSimulator.set_max_qubits"]], "set_option() (aersimulator method)": [[17, "qiskit_aer.AerSimulator.set_option"]], "set_options() (aersimulator method)": [[17, "qiskit_aer.AerSimulator.set_options"]], "status() (aersimulator method)": [[17, "qiskit_aer.AerSimulator.status"]], "target (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.target"]], "version (aersimulator attribute)": [[17, "qiskit_aer.AerSimulator.version"]], "qasmsimulator (class in qiskit_aer)": [[18, "qiskit_aer.QasmSimulator"]], "acquire_channel() (qasmsimulator method)": [[18, "qiskit_aer.QasmSimulator.acquire_channel"]], "available_devices() (qasmsimulator method)": [[18, "qiskit_aer.QasmSimulator.available_devices"]], "available_methods() (qasmsimulator method)": [[18, "qiskit_aer.QasmSimulator.available_methods"]], "backend_version (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.backend_version"]], "clear_options() (qasmsimulator method)": [[18, "qiskit_aer.QasmSimulator.clear_options"]], "configuration() (qasmsimulator method)": [[18, "qiskit_aer.QasmSimulator.configuration"]], "control_channel() (qasmsimulator method)": [[18, "qiskit_aer.QasmSimulator.control_channel"]], "coupling_map (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.coupling_map"]], "description (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.description"]], "drive_channel() (qasmsimulator method)": [[18, "qiskit_aer.QasmSimulator.drive_channel"]], "dt (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.dt"]], "dtm (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.dtm"]], "from_backend() (qasmsimulator class method)": [[18, "qiskit_aer.QasmSimulator.from_backend"]], "instruction_durations (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.instruction_durations"]], "instruction_schedule_map (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.instruction_schedule_map"]], "instructions (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.instructions"]], "max_circuits (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.max_circuits"]], "meas_map (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.meas_map"]], "measure_channel() (qasmsimulator method)": [[18, "qiskit_aer.QasmSimulator.measure_channel"]], "name (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.name"]], "num_qubits (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.num_qubits"]], "online_date (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.online_date"]], "operation_names (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.operation_names"]], "operations (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.operations"]], "options (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.options"]], "properties() (qasmsimulator method)": [[18, "qiskit_aer.QasmSimulator.properties"]], "provider (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.provider"]], "qubit_properties() (qasmsimulator method)": [[18, "qiskit_aer.QasmSimulator.qubit_properties"]], "run() (qasmsimulator method)": [[18, "qiskit_aer.QasmSimulator.run"]], "set_max_qubits() (qasmsimulator method)": [[18, "qiskit_aer.QasmSimulator.set_max_qubits"]], "set_option() (qasmsimulator method)": [[18, "qiskit_aer.QasmSimulator.set_option"]], "set_options() (qasmsimulator method)": [[18, "qiskit_aer.QasmSimulator.set_options"]], "status() (qasmsimulator method)": [[18, "qiskit_aer.QasmSimulator.status"]], "target (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.target"]], "version (qasmsimulator attribute)": [[18, "qiskit_aer.QasmSimulator.version"]], "statevectorsimulator (class in qiskit_aer)": [[19, "qiskit_aer.StatevectorSimulator"]], "acquire_channel() (statevectorsimulator method)": [[19, "qiskit_aer.StatevectorSimulator.acquire_channel"]], "available_devices() (statevectorsimulator method)": [[19, "qiskit_aer.StatevectorSimulator.available_devices"]], "available_methods() (statevectorsimulator method)": [[19, "qiskit_aer.StatevectorSimulator.available_methods"]], "backend_version (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.backend_version"]], "clear_options() (statevectorsimulator method)": [[19, "qiskit_aer.StatevectorSimulator.clear_options"]], "configuration() (statevectorsimulator method)": [[19, "qiskit_aer.StatevectorSimulator.configuration"]], "control_channel() (statevectorsimulator method)": [[19, "qiskit_aer.StatevectorSimulator.control_channel"]], "coupling_map (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.coupling_map"]], "description (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.description"]], "drive_channel() (statevectorsimulator method)": [[19, "qiskit_aer.StatevectorSimulator.drive_channel"]], "dt (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.dt"]], "dtm (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.dtm"]], "instruction_durations (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.instruction_durations"]], "instruction_schedule_map (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.instruction_schedule_map"]], "instructions (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.instructions"]], "max_circuits (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.max_circuits"]], "meas_map (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.meas_map"]], "measure_channel() (statevectorsimulator method)": [[19, "qiskit_aer.StatevectorSimulator.measure_channel"]], "name (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.name"]], "num_qubits (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.num_qubits"]], "online_date (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.online_date"]], "operation_names (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.operation_names"]], "operations (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.operations"]], "options (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.options"]], "properties() (statevectorsimulator method)": [[19, "qiskit_aer.StatevectorSimulator.properties"]], "provider (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.provider"]], "qubit_properties() (statevectorsimulator method)": [[19, "qiskit_aer.StatevectorSimulator.qubit_properties"]], "run() (statevectorsimulator method)": [[19, "qiskit_aer.StatevectorSimulator.run"]], "set_max_qubits() (statevectorsimulator method)": [[19, "qiskit_aer.StatevectorSimulator.set_max_qubits"]], "set_option() (statevectorsimulator method)": [[19, "qiskit_aer.StatevectorSimulator.set_option"]], "set_options() (statevectorsimulator method)": [[19, "qiskit_aer.StatevectorSimulator.set_options"]], "status() (statevectorsimulator method)": [[19, "qiskit_aer.StatevectorSimulator.status"]], "target (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.target"]], "version (statevectorsimulator attribute)": [[19, "qiskit_aer.StatevectorSimulator.version"]], "unitarysimulator (class in qiskit_aer)": [[20, "qiskit_aer.UnitarySimulator"]], "acquire_channel() (unitarysimulator method)": [[20, "qiskit_aer.UnitarySimulator.acquire_channel"]], "available_devices() (unitarysimulator method)": [[20, "qiskit_aer.UnitarySimulator.available_devices"]], "available_methods() (unitarysimulator method)": [[20, "qiskit_aer.UnitarySimulator.available_methods"]], "backend_version (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.backend_version"]], "clear_options() (unitarysimulator method)": [[20, "qiskit_aer.UnitarySimulator.clear_options"]], "configuration() (unitarysimulator method)": [[20, "qiskit_aer.UnitarySimulator.configuration"]], "control_channel() (unitarysimulator method)": [[20, "qiskit_aer.UnitarySimulator.control_channel"]], "coupling_map (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.coupling_map"]], "description (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.description"]], "drive_channel() (unitarysimulator method)": [[20, "qiskit_aer.UnitarySimulator.drive_channel"]], "dt (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.dt"]], "dtm (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.dtm"]], "instruction_durations (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.instruction_durations"]], "instruction_schedule_map (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.instruction_schedule_map"]], "instructions (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.instructions"]], "max_circuits (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.max_circuits"]], "meas_map (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.meas_map"]], "measure_channel() (unitarysimulator method)": [[20, "qiskit_aer.UnitarySimulator.measure_channel"]], "name (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.name"]], "num_qubits (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.num_qubits"]], "online_date (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.online_date"]], "operation_names (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.operation_names"]], "operations (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.operations"]], "options (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.options"]], "properties() (unitarysimulator method)": [[20, "qiskit_aer.UnitarySimulator.properties"]], "provider (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.provider"]], "qubit_properties() (unitarysimulator method)": [[20, "qiskit_aer.UnitarySimulator.qubit_properties"]], "run() (unitarysimulator method)": [[20, "qiskit_aer.UnitarySimulator.run"]], "set_max_qubits() (unitarysimulator method)": [[20, "qiskit_aer.UnitarySimulator.set_max_qubits"]], "set_option() (unitarysimulator method)": [[20, "qiskit_aer.UnitarySimulator.set_option"]], "set_options() (unitarysimulator method)": [[20, "qiskit_aer.UnitarySimulator.set_options"]], "status() (unitarysimulator method)": [[20, "qiskit_aer.UnitarySimulator.status"]], "target (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.target"]], "version (unitarysimulator attribute)": [[20, "qiskit_aer.UnitarySimulator.version"]], "aerjob (class in qiskit_aer.jobs)": [[21, "qiskit_aer.jobs.AerJob"]], "backend() (aerjob method)": [[21, "qiskit_aer.jobs.AerJob.backend"]], "cancel() (aerjob method)": [[21, "qiskit_aer.jobs.AerJob.cancel"]], "cancelled() (aerjob method)": [[21, "qiskit_aer.jobs.AerJob.cancelled"]], "circuits() (aerjob method)": [[21, "qiskit_aer.jobs.AerJob.circuits"]], "done() (aerjob method)": [[21, "qiskit_aer.jobs.AerJob.done"]], "executor() (aerjob method)": [[21, "qiskit_aer.jobs.AerJob.executor"]], "in_final_state() (aerjob method)": [[21, "qiskit_aer.jobs.AerJob.in_final_state"]], "job_id() (aerjob method)": [[21, "qiskit_aer.jobs.AerJob.job_id"]], "result() (aerjob method)": [[21, "qiskit_aer.jobs.AerJob.result"]], "running() (aerjob method)": [[21, "qiskit_aer.jobs.AerJob.running"]], "status() (aerjob method)": [[21, "qiskit_aer.jobs.AerJob.status"]], "submit() (aerjob method)": [[21, "qiskit_aer.jobs.AerJob.submit"]], "version (aerjob attribute)": [[21, "qiskit_aer.jobs.AerJob.version"]], "wait_for_final_state() (aerjob method)": [[21, "qiskit_aer.jobs.AerJob.wait_for_final_state"]], "saveamplitudes (class in qiskit_aer.library)": [[22, "qiskit_aer.library.SaveAmplitudes"]], "add_decomposition() (saveamplitudes method)": [[22, "qiskit_aer.library.SaveAmplitudes.add_decomposition"]], "assemble() (saveamplitudes method)": [[22, "qiskit_aer.library.SaveAmplitudes.assemble"]], "base_class (saveamplitudes attribute)": [[22, "qiskit_aer.library.SaveAmplitudes.base_class"]], "broadcast_arguments() (saveamplitudes method)": [[22, "qiskit_aer.library.SaveAmplitudes.broadcast_arguments"]], "c_if() (saveamplitudes method)": [[22, "qiskit_aer.library.SaveAmplitudes.c_if"]], "condition (saveamplitudes attribute)": [[22, "qiskit_aer.library.SaveAmplitudes.condition"]], "condition_bits (saveamplitudes attribute)": [[22, "qiskit_aer.library.SaveAmplitudes.condition_bits"]], "copy() (saveamplitudes method)": [[22, "qiskit_aer.library.SaveAmplitudes.copy"]], "decompositions (saveamplitudes attribute)": [[22, "qiskit_aer.library.SaveAmplitudes.decompositions"]], "definition (saveamplitudes attribute)": [[22, "qiskit_aer.library.SaveAmplitudes.definition"]], "duration (saveamplitudes attribute)": [[22, "qiskit_aer.library.SaveAmplitudes.duration"]], "inverse() (saveamplitudes method)": [[22, "qiskit_aer.library.SaveAmplitudes.inverse"]], "is_parameterized() (saveamplitudes method)": [[22, "qiskit_aer.library.SaveAmplitudes.is_parameterized"]], "label (saveamplitudes attribute)": [[22, "qiskit_aer.library.SaveAmplitudes.label"]], "mutable (saveamplitudes attribute)": [[22, "qiskit_aer.library.SaveAmplitudes.mutable"]], "name (saveamplitudes attribute)": [[22, "qiskit_aer.library.SaveAmplitudes.name"]], "num_clbits (saveamplitudes attribute)": [[22, "qiskit_aer.library.SaveAmplitudes.num_clbits"]], "num_qubits (saveamplitudes attribute)": [[22, "qiskit_aer.library.SaveAmplitudes.num_qubits"]], "params (saveamplitudes attribute)": [[22, "qiskit_aer.library.SaveAmplitudes.params"]], "repeat() (saveamplitudes method)": [[22, "qiskit_aer.library.SaveAmplitudes.repeat"]], "reverse_ops() (saveamplitudes method)": [[22, "qiskit_aer.library.SaveAmplitudes.reverse_ops"]], "soft_compare() (saveamplitudes method)": [[22, "qiskit_aer.library.SaveAmplitudes.soft_compare"]], "to_mutable() (saveamplitudes method)": [[22, "qiskit_aer.library.SaveAmplitudes.to_mutable"]], "unit (saveamplitudes attribute)": [[22, "qiskit_aer.library.SaveAmplitudes.unit"]], "validate_parameter() (saveamplitudes method)": [[22, "qiskit_aer.library.SaveAmplitudes.validate_parameter"]], "saveamplitudessquared (class in qiskit_aer.library)": [[23, "qiskit_aer.library.SaveAmplitudesSquared"]], "add_decomposition() (saveamplitudessquared method)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.add_decomposition"]], "assemble() (saveamplitudessquared method)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.assemble"]], "base_class (saveamplitudessquared attribute)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.base_class"]], "broadcast_arguments() (saveamplitudessquared method)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.broadcast_arguments"]], "c_if() (saveamplitudessquared method)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.c_if"]], "condition (saveamplitudessquared attribute)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.condition"]], "condition_bits (saveamplitudessquared attribute)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.condition_bits"]], "copy() (saveamplitudessquared method)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.copy"]], "decompositions (saveamplitudessquared attribute)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.decompositions"]], "definition (saveamplitudessquared attribute)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.definition"]], "duration (saveamplitudessquared attribute)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.duration"]], "inverse() (saveamplitudessquared method)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.inverse"]], "is_parameterized() (saveamplitudessquared method)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.is_parameterized"]], "label (saveamplitudessquared attribute)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.label"]], "mutable (saveamplitudessquared attribute)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.mutable"]], "name (saveamplitudessquared attribute)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.name"]], "num_clbits (saveamplitudessquared attribute)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.num_clbits"]], "num_qubits (saveamplitudessquared attribute)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.num_qubits"]], "params (saveamplitudessquared attribute)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.params"]], "repeat() (saveamplitudessquared method)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.repeat"]], "reverse_ops() (saveamplitudessquared method)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.reverse_ops"]], "soft_compare() (saveamplitudessquared method)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.soft_compare"]], "to_mutable() (saveamplitudessquared method)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.to_mutable"]], "unit (saveamplitudessquared attribute)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.unit"]], "validate_parameter() (saveamplitudessquared method)": [[23, "qiskit_aer.library.SaveAmplitudesSquared.validate_parameter"]], "saveclifford (class in qiskit_aer.library)": [[24, "qiskit_aer.library.SaveClifford"]], "add_decomposition() (saveclifford method)": [[24, "qiskit_aer.library.SaveClifford.add_decomposition"]], "assemble() (saveclifford method)": [[24, "qiskit_aer.library.SaveClifford.assemble"]], "base_class (saveclifford attribute)": [[24, "qiskit_aer.library.SaveClifford.base_class"]], "broadcast_arguments() (saveclifford method)": [[24, "qiskit_aer.library.SaveClifford.broadcast_arguments"]], "c_if() (saveclifford method)": [[24, "qiskit_aer.library.SaveClifford.c_if"]], "condition (saveclifford attribute)": [[24, "qiskit_aer.library.SaveClifford.condition"]], "condition_bits (saveclifford attribute)": [[24, "qiskit_aer.library.SaveClifford.condition_bits"]], "copy() (saveclifford method)": [[24, "qiskit_aer.library.SaveClifford.copy"]], "decompositions (saveclifford attribute)": [[24, "qiskit_aer.library.SaveClifford.decompositions"]], "definition (saveclifford attribute)": [[24, "qiskit_aer.library.SaveClifford.definition"]], "duration (saveclifford attribute)": [[24, "qiskit_aer.library.SaveClifford.duration"]], "inverse() (saveclifford method)": [[24, "qiskit_aer.library.SaveClifford.inverse"]], "is_parameterized() (saveclifford method)": [[24, "qiskit_aer.library.SaveClifford.is_parameterized"]], "label (saveclifford attribute)": [[24, "qiskit_aer.library.SaveClifford.label"]], "mutable (saveclifford attribute)": [[24, "qiskit_aer.library.SaveClifford.mutable"]], "name (saveclifford attribute)": [[24, "qiskit_aer.library.SaveClifford.name"]], "num_clbits (saveclifford attribute)": [[24, "qiskit_aer.library.SaveClifford.num_clbits"]], "num_qubits (saveclifford attribute)": [[24, "qiskit_aer.library.SaveClifford.num_qubits"]], "params (saveclifford attribute)": [[24, "qiskit_aer.library.SaveClifford.params"]], "repeat() (saveclifford method)": [[24, "qiskit_aer.library.SaveClifford.repeat"]], "reverse_ops() (saveclifford method)": [[24, "qiskit_aer.library.SaveClifford.reverse_ops"]], "soft_compare() (saveclifford method)": [[24, "qiskit_aer.library.SaveClifford.soft_compare"]], "to_mutable() (saveclifford method)": [[24, "qiskit_aer.library.SaveClifford.to_mutable"]], "unit (saveclifford attribute)": [[24, "qiskit_aer.library.SaveClifford.unit"]], "validate_parameter() (saveclifford method)": [[24, "qiskit_aer.library.SaveClifford.validate_parameter"]], "savedensitymatrix (class in qiskit_aer.library)": [[25, "qiskit_aer.library.SaveDensityMatrix"]], "add_decomposition() (savedensitymatrix method)": [[25, "qiskit_aer.library.SaveDensityMatrix.add_decomposition"]], "assemble() (savedensitymatrix method)": [[25, "qiskit_aer.library.SaveDensityMatrix.assemble"]], "base_class (savedensitymatrix attribute)": [[25, "qiskit_aer.library.SaveDensityMatrix.base_class"]], "broadcast_arguments() (savedensitymatrix method)": [[25, "qiskit_aer.library.SaveDensityMatrix.broadcast_arguments"]], "c_if() (savedensitymatrix method)": [[25, "qiskit_aer.library.SaveDensityMatrix.c_if"]], "condition (savedensitymatrix attribute)": [[25, "qiskit_aer.library.SaveDensityMatrix.condition"]], "condition_bits (savedensitymatrix attribute)": [[25, "qiskit_aer.library.SaveDensityMatrix.condition_bits"]], "copy() (savedensitymatrix method)": [[25, "qiskit_aer.library.SaveDensityMatrix.copy"]], "decompositions (savedensitymatrix attribute)": [[25, "qiskit_aer.library.SaveDensityMatrix.decompositions"]], "definition (savedensitymatrix attribute)": [[25, "qiskit_aer.library.SaveDensityMatrix.definition"]], "duration (savedensitymatrix attribute)": [[25, "qiskit_aer.library.SaveDensityMatrix.duration"]], "inverse() (savedensitymatrix method)": [[25, "qiskit_aer.library.SaveDensityMatrix.inverse"]], "is_parameterized() (savedensitymatrix method)": [[25, "qiskit_aer.library.SaveDensityMatrix.is_parameterized"]], "label (savedensitymatrix attribute)": [[25, "qiskit_aer.library.SaveDensityMatrix.label"]], "mutable (savedensitymatrix attribute)": [[25, "qiskit_aer.library.SaveDensityMatrix.mutable"]], "name (savedensitymatrix attribute)": [[25, "qiskit_aer.library.SaveDensityMatrix.name"]], "num_clbits (savedensitymatrix attribute)": [[25, "qiskit_aer.library.SaveDensityMatrix.num_clbits"]], "num_qubits (savedensitymatrix attribute)": [[25, "qiskit_aer.library.SaveDensityMatrix.num_qubits"]], "params (savedensitymatrix attribute)": [[25, "qiskit_aer.library.SaveDensityMatrix.params"]], "repeat() (savedensitymatrix method)": [[25, "qiskit_aer.library.SaveDensityMatrix.repeat"]], "reverse_ops() (savedensitymatrix method)": [[25, "qiskit_aer.library.SaveDensityMatrix.reverse_ops"]], "soft_compare() (savedensitymatrix method)": [[25, "qiskit_aer.library.SaveDensityMatrix.soft_compare"]], "to_mutable() (savedensitymatrix method)": [[25, "qiskit_aer.library.SaveDensityMatrix.to_mutable"]], "unit (savedensitymatrix attribute)": [[25, "qiskit_aer.library.SaveDensityMatrix.unit"]], "validate_parameter() (savedensitymatrix method)": [[25, "qiskit_aer.library.SaveDensityMatrix.validate_parameter"]], "saveexpectationvalue (class in qiskit_aer.library)": [[26, "qiskit_aer.library.SaveExpectationValue"]], "add_decomposition() (saveexpectationvalue method)": [[26, "qiskit_aer.library.SaveExpectationValue.add_decomposition"]], "assemble() (saveexpectationvalue method)": [[26, "qiskit_aer.library.SaveExpectationValue.assemble"]], "base_class (saveexpectationvalue attribute)": [[26, "qiskit_aer.library.SaveExpectationValue.base_class"]], "broadcast_arguments() (saveexpectationvalue method)": [[26, "qiskit_aer.library.SaveExpectationValue.broadcast_arguments"]], "c_if() (saveexpectationvalue method)": [[26, "qiskit_aer.library.SaveExpectationValue.c_if"]], "condition (saveexpectationvalue attribute)": [[26, "qiskit_aer.library.SaveExpectationValue.condition"]], "condition_bits (saveexpectationvalue attribute)": [[26, "qiskit_aer.library.SaveExpectationValue.condition_bits"]], "copy() (saveexpectationvalue method)": [[26, "qiskit_aer.library.SaveExpectationValue.copy"]], "decompositions (saveexpectationvalue attribute)": [[26, "qiskit_aer.library.SaveExpectationValue.decompositions"]], "definition (saveexpectationvalue attribute)": [[26, "qiskit_aer.library.SaveExpectationValue.definition"]], "duration (saveexpectationvalue attribute)": [[26, "qiskit_aer.library.SaveExpectationValue.duration"]], "inverse() (saveexpectationvalue method)": [[26, "qiskit_aer.library.SaveExpectationValue.inverse"]], "is_parameterized() (saveexpectationvalue method)": [[26, "qiskit_aer.library.SaveExpectationValue.is_parameterized"]], "label (saveexpectationvalue attribute)": [[26, "qiskit_aer.library.SaveExpectationValue.label"]], "mutable (saveexpectationvalue attribute)": [[26, "qiskit_aer.library.SaveExpectationValue.mutable"]], "name (saveexpectationvalue attribute)": [[26, "qiskit_aer.library.SaveExpectationValue.name"]], "num_clbits (saveexpectationvalue attribute)": [[26, "qiskit_aer.library.SaveExpectationValue.num_clbits"]], "num_qubits (saveexpectationvalue attribute)": [[26, "qiskit_aer.library.SaveExpectationValue.num_qubits"]], "params (saveexpectationvalue attribute)": [[26, "qiskit_aer.library.SaveExpectationValue.params"]], "repeat() (saveexpectationvalue method)": [[26, "qiskit_aer.library.SaveExpectationValue.repeat"]], "reverse_ops() (saveexpectationvalue method)": [[26, "qiskit_aer.library.SaveExpectationValue.reverse_ops"]], "soft_compare() (saveexpectationvalue method)": [[26, "qiskit_aer.library.SaveExpectationValue.soft_compare"]], "to_mutable() (saveexpectationvalue method)": [[26, "qiskit_aer.library.SaveExpectationValue.to_mutable"]], "unit (saveexpectationvalue attribute)": [[26, "qiskit_aer.library.SaveExpectationValue.unit"]], "validate_parameter() (saveexpectationvalue method)": [[26, "qiskit_aer.library.SaveExpectationValue.validate_parameter"]], "saveexpectationvaluevariance (class in qiskit_aer.library)": [[27, "qiskit_aer.library.SaveExpectationValueVariance"]], "add_decomposition() (saveexpectationvaluevariance method)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.add_decomposition"]], "assemble() (saveexpectationvaluevariance method)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.assemble"]], "base_class (saveexpectationvaluevariance attribute)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.base_class"]], "broadcast_arguments() (saveexpectationvaluevariance method)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.broadcast_arguments"]], "c_if() (saveexpectationvaluevariance method)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.c_if"]], "condition (saveexpectationvaluevariance attribute)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.condition"]], "condition_bits (saveexpectationvaluevariance attribute)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.condition_bits"]], "copy() (saveexpectationvaluevariance method)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.copy"]], "decompositions (saveexpectationvaluevariance attribute)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.decompositions"]], "definition (saveexpectationvaluevariance attribute)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.definition"]], "duration (saveexpectationvaluevariance attribute)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.duration"]], "inverse() (saveexpectationvaluevariance method)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.inverse"]], "is_parameterized() (saveexpectationvaluevariance method)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.is_parameterized"]], "label (saveexpectationvaluevariance attribute)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.label"]], "mutable (saveexpectationvaluevariance attribute)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.mutable"]], "name (saveexpectationvaluevariance attribute)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.name"]], "num_clbits (saveexpectationvaluevariance attribute)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.num_clbits"]], "num_qubits (saveexpectationvaluevariance attribute)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.num_qubits"]], "params (saveexpectationvaluevariance attribute)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.params"]], "repeat() (saveexpectationvaluevariance method)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.repeat"]], "reverse_ops() (saveexpectationvaluevariance method)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.reverse_ops"]], "soft_compare() (saveexpectationvaluevariance method)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.soft_compare"]], "to_mutable() (saveexpectationvaluevariance method)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.to_mutable"]], "unit (saveexpectationvaluevariance attribute)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.unit"]], "validate_parameter() (saveexpectationvaluevariance method)": [[27, "qiskit_aer.library.SaveExpectationValueVariance.validate_parameter"]], "savematrixproductstate (class in qiskit_aer.library)": [[28, "qiskit_aer.library.SaveMatrixProductState"]], "add_decomposition() (savematrixproductstate method)": [[28, "qiskit_aer.library.SaveMatrixProductState.add_decomposition"]], "assemble() (savematrixproductstate method)": [[28, "qiskit_aer.library.SaveMatrixProductState.assemble"]], "base_class (savematrixproductstate attribute)": [[28, "qiskit_aer.library.SaveMatrixProductState.base_class"]], "broadcast_arguments() (savematrixproductstate method)": [[28, "qiskit_aer.library.SaveMatrixProductState.broadcast_arguments"]], "c_if() (savematrixproductstate method)": [[28, "qiskit_aer.library.SaveMatrixProductState.c_if"]], "condition (savematrixproductstate attribute)": [[28, "qiskit_aer.library.SaveMatrixProductState.condition"]], "condition_bits (savematrixproductstate attribute)": [[28, "qiskit_aer.library.SaveMatrixProductState.condition_bits"]], "copy() (savematrixproductstate method)": [[28, "qiskit_aer.library.SaveMatrixProductState.copy"]], "decompositions (savematrixproductstate attribute)": [[28, "qiskit_aer.library.SaveMatrixProductState.decompositions"]], "definition (savematrixproductstate attribute)": [[28, "qiskit_aer.library.SaveMatrixProductState.definition"]], "duration (savematrixproductstate attribute)": [[28, "qiskit_aer.library.SaveMatrixProductState.duration"]], "inverse() (savematrixproductstate method)": [[28, "qiskit_aer.library.SaveMatrixProductState.inverse"]], "is_parameterized() (savematrixproductstate method)": [[28, "qiskit_aer.library.SaveMatrixProductState.is_parameterized"]], "label (savematrixproductstate attribute)": [[28, "qiskit_aer.library.SaveMatrixProductState.label"]], "mutable (savematrixproductstate attribute)": [[28, "qiskit_aer.library.SaveMatrixProductState.mutable"]], "name (savematrixproductstate attribute)": [[28, "qiskit_aer.library.SaveMatrixProductState.name"]], "num_clbits (savematrixproductstate attribute)": [[28, "qiskit_aer.library.SaveMatrixProductState.num_clbits"]], "num_qubits (savematrixproductstate attribute)": [[28, "qiskit_aer.library.SaveMatrixProductState.num_qubits"]], "params (savematrixproductstate attribute)": [[28, "qiskit_aer.library.SaveMatrixProductState.params"]], "repeat() (savematrixproductstate method)": [[28, "qiskit_aer.library.SaveMatrixProductState.repeat"]], "reverse_ops() (savematrixproductstate method)": [[28, "qiskit_aer.library.SaveMatrixProductState.reverse_ops"]], "soft_compare() (savematrixproductstate method)": [[28, "qiskit_aer.library.SaveMatrixProductState.soft_compare"]], "to_mutable() (savematrixproductstate method)": [[28, "qiskit_aer.library.SaveMatrixProductState.to_mutable"]], "unit (savematrixproductstate attribute)": [[28, "qiskit_aer.library.SaveMatrixProductState.unit"]], "validate_parameter() (savematrixproductstate method)": [[28, "qiskit_aer.library.SaveMatrixProductState.validate_parameter"]], "saveprobabilities (class in qiskit_aer.library)": [[29, "qiskit_aer.library.SaveProbabilities"]], "add_decomposition() (saveprobabilities method)": [[29, "qiskit_aer.library.SaveProbabilities.add_decomposition"]], "assemble() (saveprobabilities method)": [[29, "qiskit_aer.library.SaveProbabilities.assemble"]], "base_class (saveprobabilities attribute)": [[29, "qiskit_aer.library.SaveProbabilities.base_class"]], "broadcast_arguments() (saveprobabilities method)": [[29, "qiskit_aer.library.SaveProbabilities.broadcast_arguments"]], "c_if() (saveprobabilities method)": [[29, "qiskit_aer.library.SaveProbabilities.c_if"]], "condition (saveprobabilities attribute)": [[29, "qiskit_aer.library.SaveProbabilities.condition"]], "condition_bits (saveprobabilities attribute)": [[29, "qiskit_aer.library.SaveProbabilities.condition_bits"]], "copy() (saveprobabilities method)": [[29, "qiskit_aer.library.SaveProbabilities.copy"]], "decompositions (saveprobabilities attribute)": [[29, "qiskit_aer.library.SaveProbabilities.decompositions"]], "definition (saveprobabilities attribute)": [[29, "qiskit_aer.library.SaveProbabilities.definition"]], "duration (saveprobabilities attribute)": [[29, "qiskit_aer.library.SaveProbabilities.duration"]], "inverse() (saveprobabilities method)": [[29, "qiskit_aer.library.SaveProbabilities.inverse"]], "is_parameterized() (saveprobabilities method)": [[29, "qiskit_aer.library.SaveProbabilities.is_parameterized"]], "label (saveprobabilities attribute)": [[29, "qiskit_aer.library.SaveProbabilities.label"]], "mutable (saveprobabilities attribute)": [[29, "qiskit_aer.library.SaveProbabilities.mutable"]], "name (saveprobabilities attribute)": [[29, "qiskit_aer.library.SaveProbabilities.name"]], "num_clbits (saveprobabilities attribute)": [[29, "qiskit_aer.library.SaveProbabilities.num_clbits"]], "num_qubits (saveprobabilities attribute)": [[29, "qiskit_aer.library.SaveProbabilities.num_qubits"]], "params (saveprobabilities attribute)": [[29, "qiskit_aer.library.SaveProbabilities.params"]], "repeat() (saveprobabilities method)": [[29, "qiskit_aer.library.SaveProbabilities.repeat"]], "reverse_ops() (saveprobabilities method)": [[29, "qiskit_aer.library.SaveProbabilities.reverse_ops"]], "soft_compare() (saveprobabilities method)": [[29, "qiskit_aer.library.SaveProbabilities.soft_compare"]], "to_mutable() (saveprobabilities method)": [[29, "qiskit_aer.library.SaveProbabilities.to_mutable"]], "unit (saveprobabilities attribute)": [[29, "qiskit_aer.library.SaveProbabilities.unit"]], "validate_parameter() (saveprobabilities method)": [[29, "qiskit_aer.library.SaveProbabilities.validate_parameter"]], "saveprobabilitiesdict (class in qiskit_aer.library)": [[30, "qiskit_aer.library.SaveProbabilitiesDict"]], "add_decomposition() (saveprobabilitiesdict method)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.add_decomposition"]], "assemble() (saveprobabilitiesdict method)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.assemble"]], "base_class (saveprobabilitiesdict attribute)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.base_class"]], "broadcast_arguments() (saveprobabilitiesdict method)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.broadcast_arguments"]], "c_if() (saveprobabilitiesdict method)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.c_if"]], "condition (saveprobabilitiesdict attribute)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.condition"]], "condition_bits (saveprobabilitiesdict attribute)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.condition_bits"]], "copy() (saveprobabilitiesdict method)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.copy"]], "decompositions (saveprobabilitiesdict attribute)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.decompositions"]], "definition (saveprobabilitiesdict attribute)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.definition"]], "duration (saveprobabilitiesdict attribute)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.duration"]], "inverse() (saveprobabilitiesdict method)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.inverse"]], "is_parameterized() (saveprobabilitiesdict method)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.is_parameterized"]], "label (saveprobabilitiesdict attribute)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.label"]], "mutable (saveprobabilitiesdict attribute)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.mutable"]], "name (saveprobabilitiesdict attribute)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.name"]], "num_clbits (saveprobabilitiesdict attribute)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.num_clbits"]], "num_qubits (saveprobabilitiesdict attribute)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.num_qubits"]], "params (saveprobabilitiesdict attribute)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.params"]], "repeat() (saveprobabilitiesdict method)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.repeat"]], "reverse_ops() (saveprobabilitiesdict method)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.reverse_ops"]], "soft_compare() (saveprobabilitiesdict method)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.soft_compare"]], "to_mutable() (saveprobabilitiesdict method)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.to_mutable"]], "unit (saveprobabilitiesdict attribute)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.unit"]], "validate_parameter() (saveprobabilitiesdict method)": [[30, "qiskit_aer.library.SaveProbabilitiesDict.validate_parameter"]], "savestabilizer (class in qiskit_aer.library)": [[31, "qiskit_aer.library.SaveStabilizer"]], "add_decomposition() (savestabilizer method)": [[31, "qiskit_aer.library.SaveStabilizer.add_decomposition"]], "assemble() (savestabilizer method)": [[31, "qiskit_aer.library.SaveStabilizer.assemble"]], "base_class (savestabilizer attribute)": [[31, "qiskit_aer.library.SaveStabilizer.base_class"]], "broadcast_arguments() (savestabilizer method)": [[31, "qiskit_aer.library.SaveStabilizer.broadcast_arguments"]], "c_if() (savestabilizer method)": [[31, "qiskit_aer.library.SaveStabilizer.c_if"]], "condition (savestabilizer attribute)": [[31, "qiskit_aer.library.SaveStabilizer.condition"]], "condition_bits (savestabilizer attribute)": [[31, "qiskit_aer.library.SaveStabilizer.condition_bits"]], "copy() (savestabilizer method)": [[31, "qiskit_aer.library.SaveStabilizer.copy"]], "decompositions (savestabilizer attribute)": [[31, "qiskit_aer.library.SaveStabilizer.decompositions"]], "definition (savestabilizer attribute)": [[31, "qiskit_aer.library.SaveStabilizer.definition"]], "duration (savestabilizer attribute)": [[31, "qiskit_aer.library.SaveStabilizer.duration"]], "inverse() (savestabilizer method)": [[31, "qiskit_aer.library.SaveStabilizer.inverse"]], "is_parameterized() (savestabilizer method)": [[31, "qiskit_aer.library.SaveStabilizer.is_parameterized"]], "label (savestabilizer attribute)": [[31, "qiskit_aer.library.SaveStabilizer.label"]], "mutable (savestabilizer attribute)": [[31, "qiskit_aer.library.SaveStabilizer.mutable"]], "name (savestabilizer attribute)": [[31, "qiskit_aer.library.SaveStabilizer.name"]], "num_clbits (savestabilizer attribute)": [[31, "qiskit_aer.library.SaveStabilizer.num_clbits"]], "num_qubits (savestabilizer attribute)": [[31, "qiskit_aer.library.SaveStabilizer.num_qubits"]], "params (savestabilizer attribute)": [[31, "qiskit_aer.library.SaveStabilizer.params"]], "repeat() (savestabilizer method)": [[31, "qiskit_aer.library.SaveStabilizer.repeat"]], "reverse_ops() (savestabilizer method)": [[31, "qiskit_aer.library.SaveStabilizer.reverse_ops"]], "soft_compare() (savestabilizer method)": [[31, "qiskit_aer.library.SaveStabilizer.soft_compare"]], "to_mutable() (savestabilizer method)": [[31, "qiskit_aer.library.SaveStabilizer.to_mutable"]], "unit (savestabilizer attribute)": [[31, "qiskit_aer.library.SaveStabilizer.unit"]], "validate_parameter() (savestabilizer method)": [[31, "qiskit_aer.library.SaveStabilizer.validate_parameter"]], "savestate (class in qiskit_aer.library)": [[32, "qiskit_aer.library.SaveState"]], "add_decomposition() (savestate method)": [[32, "qiskit_aer.library.SaveState.add_decomposition"]], "assemble() (savestate method)": [[32, "qiskit_aer.library.SaveState.assemble"]], "base_class (savestate attribute)": [[32, "qiskit_aer.library.SaveState.base_class"]], "broadcast_arguments() (savestate method)": [[32, "qiskit_aer.library.SaveState.broadcast_arguments"]], "c_if() (savestate method)": [[32, "qiskit_aer.library.SaveState.c_if"]], "condition (savestate attribute)": [[32, "qiskit_aer.library.SaveState.condition"]], "condition_bits (savestate attribute)": [[32, "qiskit_aer.library.SaveState.condition_bits"]], "copy() (savestate method)": [[32, "qiskit_aer.library.SaveState.copy"]], "decompositions (savestate attribute)": [[32, "qiskit_aer.library.SaveState.decompositions"]], "definition (savestate attribute)": [[32, "qiskit_aer.library.SaveState.definition"]], "duration (savestate attribute)": [[32, "qiskit_aer.library.SaveState.duration"]], "inverse() (savestate method)": [[32, "qiskit_aer.library.SaveState.inverse"]], "is_parameterized() (savestate method)": [[32, "qiskit_aer.library.SaveState.is_parameterized"]], "label (savestate attribute)": [[32, "qiskit_aer.library.SaveState.label"]], "mutable (savestate attribute)": [[32, "qiskit_aer.library.SaveState.mutable"]], "name (savestate attribute)": [[32, "qiskit_aer.library.SaveState.name"]], "num_clbits (savestate attribute)": [[32, "qiskit_aer.library.SaveState.num_clbits"]], "num_qubits (savestate attribute)": [[32, "qiskit_aer.library.SaveState.num_qubits"]], "params (savestate attribute)": [[32, "qiskit_aer.library.SaveState.params"]], "repeat() (savestate method)": [[32, "qiskit_aer.library.SaveState.repeat"]], "reverse_ops() (savestate method)": [[32, "qiskit_aer.library.SaveState.reverse_ops"]], "soft_compare() (savestate method)": [[32, "qiskit_aer.library.SaveState.soft_compare"]], "to_mutable() (savestate method)": [[32, "qiskit_aer.library.SaveState.to_mutable"]], "unit (savestate attribute)": [[32, "qiskit_aer.library.SaveState.unit"]], "validate_parameter() (savestate method)": [[32, "qiskit_aer.library.SaveState.validate_parameter"]], "savestatevector (class in qiskit_aer.library)": [[33, "qiskit_aer.library.SaveStatevector"]], "add_decomposition() (savestatevector method)": [[33, "qiskit_aer.library.SaveStatevector.add_decomposition"]], "assemble() (savestatevector method)": [[33, "qiskit_aer.library.SaveStatevector.assemble"]], "base_class (savestatevector attribute)": [[33, "qiskit_aer.library.SaveStatevector.base_class"]], "broadcast_arguments() (savestatevector method)": [[33, "qiskit_aer.library.SaveStatevector.broadcast_arguments"]], "c_if() (savestatevector method)": [[33, "qiskit_aer.library.SaveStatevector.c_if"]], "condition (savestatevector attribute)": [[33, "qiskit_aer.library.SaveStatevector.condition"]], "condition_bits (savestatevector attribute)": [[33, "qiskit_aer.library.SaveStatevector.condition_bits"]], "copy() (savestatevector method)": [[33, "qiskit_aer.library.SaveStatevector.copy"]], "decompositions (savestatevector attribute)": [[33, "qiskit_aer.library.SaveStatevector.decompositions"]], "definition (savestatevector attribute)": [[33, "qiskit_aer.library.SaveStatevector.definition"]], "duration (savestatevector attribute)": [[33, "qiskit_aer.library.SaveStatevector.duration"]], "inverse() (savestatevector method)": [[33, "qiskit_aer.library.SaveStatevector.inverse"]], "is_parameterized() (savestatevector method)": [[33, "qiskit_aer.library.SaveStatevector.is_parameterized"]], "label (savestatevector attribute)": [[33, "qiskit_aer.library.SaveStatevector.label"]], "mutable (savestatevector attribute)": [[33, "qiskit_aer.library.SaveStatevector.mutable"]], "name (savestatevector attribute)": [[33, "qiskit_aer.library.SaveStatevector.name"]], "num_clbits (savestatevector attribute)": [[33, "qiskit_aer.library.SaveStatevector.num_clbits"]], "num_qubits (savestatevector attribute)": [[33, "qiskit_aer.library.SaveStatevector.num_qubits"]], "params (savestatevector attribute)": [[33, "qiskit_aer.library.SaveStatevector.params"]], "repeat() (savestatevector method)": [[33, "qiskit_aer.library.SaveStatevector.repeat"]], "reverse_ops() (savestatevector method)": [[33, "qiskit_aer.library.SaveStatevector.reverse_ops"]], "soft_compare() (savestatevector method)": [[33, "qiskit_aer.library.SaveStatevector.soft_compare"]], "to_mutable() (savestatevector method)": [[33, "qiskit_aer.library.SaveStatevector.to_mutable"]], "unit (savestatevector attribute)": [[33, "qiskit_aer.library.SaveStatevector.unit"]], "validate_parameter() (savestatevector method)": [[33, "qiskit_aer.library.SaveStatevector.validate_parameter"]], "savestatevectordict (class in qiskit_aer.library)": [[34, "qiskit_aer.library.SaveStatevectorDict"]], "add_decomposition() (savestatevectordict method)": [[34, "qiskit_aer.library.SaveStatevectorDict.add_decomposition"]], "assemble() (savestatevectordict method)": [[34, "qiskit_aer.library.SaveStatevectorDict.assemble"]], "base_class (savestatevectordict attribute)": [[34, "qiskit_aer.library.SaveStatevectorDict.base_class"]], "broadcast_arguments() (savestatevectordict method)": [[34, "qiskit_aer.library.SaveStatevectorDict.broadcast_arguments"]], "c_if() (savestatevectordict method)": [[34, "qiskit_aer.library.SaveStatevectorDict.c_if"]], "condition (savestatevectordict attribute)": [[34, "qiskit_aer.library.SaveStatevectorDict.condition"]], "condition_bits (savestatevectordict attribute)": [[34, "qiskit_aer.library.SaveStatevectorDict.condition_bits"]], "copy() (savestatevectordict method)": [[34, "qiskit_aer.library.SaveStatevectorDict.copy"]], "decompositions (savestatevectordict attribute)": [[34, "qiskit_aer.library.SaveStatevectorDict.decompositions"]], "definition (savestatevectordict attribute)": [[34, "qiskit_aer.library.SaveStatevectorDict.definition"]], "duration (savestatevectordict attribute)": [[34, "qiskit_aer.library.SaveStatevectorDict.duration"]], "inverse() (savestatevectordict method)": [[34, "qiskit_aer.library.SaveStatevectorDict.inverse"]], "is_parameterized() (savestatevectordict method)": [[34, "qiskit_aer.library.SaveStatevectorDict.is_parameterized"]], "label (savestatevectordict attribute)": [[34, "qiskit_aer.library.SaveStatevectorDict.label"]], "mutable (savestatevectordict attribute)": [[34, "qiskit_aer.library.SaveStatevectorDict.mutable"]], "name (savestatevectordict attribute)": [[34, "qiskit_aer.library.SaveStatevectorDict.name"]], "num_clbits (savestatevectordict attribute)": [[34, "qiskit_aer.library.SaveStatevectorDict.num_clbits"]], "num_qubits (savestatevectordict attribute)": [[34, "qiskit_aer.library.SaveStatevectorDict.num_qubits"]], "params (savestatevectordict attribute)": [[34, "qiskit_aer.library.SaveStatevectorDict.params"]], "repeat() (savestatevectordict method)": [[34, "qiskit_aer.library.SaveStatevectorDict.repeat"]], "reverse_ops() (savestatevectordict method)": [[34, "qiskit_aer.library.SaveStatevectorDict.reverse_ops"]], "soft_compare() (savestatevectordict method)": [[34, "qiskit_aer.library.SaveStatevectorDict.soft_compare"]], "to_mutable() (savestatevectordict method)": [[34, "qiskit_aer.library.SaveStatevectorDict.to_mutable"]], "unit (savestatevectordict attribute)": [[34, "qiskit_aer.library.SaveStatevectorDict.unit"]], "validate_parameter() (savestatevectordict method)": [[34, "qiskit_aer.library.SaveStatevectorDict.validate_parameter"]], "savesuperop (class in qiskit_aer.library)": [[35, "qiskit_aer.library.SaveSuperOp"]], "add_decomposition() (savesuperop method)": [[35, "qiskit_aer.library.SaveSuperOp.add_decomposition"]], "assemble() (savesuperop method)": [[35, "qiskit_aer.library.SaveSuperOp.assemble"]], "base_class (savesuperop attribute)": [[35, "qiskit_aer.library.SaveSuperOp.base_class"]], "broadcast_arguments() (savesuperop method)": [[35, "qiskit_aer.library.SaveSuperOp.broadcast_arguments"]], "c_if() (savesuperop method)": [[35, "qiskit_aer.library.SaveSuperOp.c_if"]], "condition (savesuperop attribute)": [[35, "qiskit_aer.library.SaveSuperOp.condition"]], "condition_bits (savesuperop attribute)": [[35, "qiskit_aer.library.SaveSuperOp.condition_bits"]], "copy() (savesuperop method)": [[35, "qiskit_aer.library.SaveSuperOp.copy"]], "decompositions (savesuperop attribute)": [[35, "qiskit_aer.library.SaveSuperOp.decompositions"]], "definition (savesuperop attribute)": [[35, "qiskit_aer.library.SaveSuperOp.definition"]], "duration (savesuperop attribute)": [[35, "qiskit_aer.library.SaveSuperOp.duration"]], "inverse() (savesuperop method)": [[35, "qiskit_aer.library.SaveSuperOp.inverse"]], "is_parameterized() (savesuperop method)": [[35, "qiskit_aer.library.SaveSuperOp.is_parameterized"]], "label (savesuperop attribute)": [[35, "qiskit_aer.library.SaveSuperOp.label"]], "mutable (savesuperop attribute)": [[35, "qiskit_aer.library.SaveSuperOp.mutable"]], "name (savesuperop attribute)": [[35, "qiskit_aer.library.SaveSuperOp.name"]], "num_clbits (savesuperop attribute)": [[35, "qiskit_aer.library.SaveSuperOp.num_clbits"]], "num_qubits (savesuperop attribute)": [[35, "qiskit_aer.library.SaveSuperOp.num_qubits"]], "params (savesuperop attribute)": [[35, "qiskit_aer.library.SaveSuperOp.params"]], "repeat() (savesuperop method)": [[35, "qiskit_aer.library.SaveSuperOp.repeat"]], "reverse_ops() (savesuperop method)": [[35, "qiskit_aer.library.SaveSuperOp.reverse_ops"]], "soft_compare() (savesuperop method)": [[35, "qiskit_aer.library.SaveSuperOp.soft_compare"]], "to_mutable() (savesuperop method)": [[35, "qiskit_aer.library.SaveSuperOp.to_mutable"]], "unit (savesuperop attribute)": [[35, "qiskit_aer.library.SaveSuperOp.unit"]], "validate_parameter() (savesuperop method)": [[35, "qiskit_aer.library.SaveSuperOp.validate_parameter"]], "saveunitary (class in qiskit_aer.library)": [[36, "qiskit_aer.library.SaveUnitary"]], "add_decomposition() (saveunitary method)": [[36, "qiskit_aer.library.SaveUnitary.add_decomposition"]], "assemble() (saveunitary method)": [[36, "qiskit_aer.library.SaveUnitary.assemble"]], "base_class (saveunitary attribute)": [[36, "qiskit_aer.library.SaveUnitary.base_class"]], "broadcast_arguments() (saveunitary method)": [[36, "qiskit_aer.library.SaveUnitary.broadcast_arguments"]], "c_if() (saveunitary method)": [[36, "qiskit_aer.library.SaveUnitary.c_if"]], "condition (saveunitary attribute)": [[36, "qiskit_aer.library.SaveUnitary.condition"]], "condition_bits (saveunitary attribute)": [[36, "qiskit_aer.library.SaveUnitary.condition_bits"]], "copy() (saveunitary method)": [[36, "qiskit_aer.library.SaveUnitary.copy"]], "decompositions (saveunitary attribute)": [[36, "qiskit_aer.library.SaveUnitary.decompositions"]], "definition (saveunitary attribute)": [[36, "qiskit_aer.library.SaveUnitary.definition"]], "duration (saveunitary attribute)": [[36, "qiskit_aer.library.SaveUnitary.duration"]], "inverse() (saveunitary method)": [[36, "qiskit_aer.library.SaveUnitary.inverse"]], "is_parameterized() (saveunitary method)": [[36, "qiskit_aer.library.SaveUnitary.is_parameterized"]], "label (saveunitary attribute)": [[36, "qiskit_aer.library.SaveUnitary.label"]], "mutable (saveunitary attribute)": [[36, "qiskit_aer.library.SaveUnitary.mutable"]], "name (saveunitary attribute)": [[36, "qiskit_aer.library.SaveUnitary.name"]], "num_clbits (saveunitary attribute)": [[36, "qiskit_aer.library.SaveUnitary.num_clbits"]], "num_qubits (saveunitary attribute)": [[36, "qiskit_aer.library.SaveUnitary.num_qubits"]], "params (saveunitary attribute)": [[36, "qiskit_aer.library.SaveUnitary.params"]], "repeat() (saveunitary method)": [[36, "qiskit_aer.library.SaveUnitary.repeat"]], "reverse_ops() (saveunitary method)": [[36, "qiskit_aer.library.SaveUnitary.reverse_ops"]], "soft_compare() (saveunitary method)": [[36, "qiskit_aer.library.SaveUnitary.soft_compare"]], "to_mutable() (saveunitary method)": [[36, "qiskit_aer.library.SaveUnitary.to_mutable"]], "unit (saveunitary attribute)": [[36, "qiskit_aer.library.SaveUnitary.unit"]], "validate_parameter() (saveunitary method)": [[36, "qiskit_aer.library.SaveUnitary.validate_parameter"]], "setdensitymatrix (class in qiskit_aer.library)": [[37, "qiskit_aer.library.SetDensityMatrix"]], "add_decomposition() (setdensitymatrix method)": [[37, "qiskit_aer.library.SetDensityMatrix.add_decomposition"]], "assemble() (setdensitymatrix method)": [[37, "qiskit_aer.library.SetDensityMatrix.assemble"]], "base_class (setdensitymatrix attribute)": [[37, "qiskit_aer.library.SetDensityMatrix.base_class"]], "broadcast_arguments() (setdensitymatrix method)": [[37, "qiskit_aer.library.SetDensityMatrix.broadcast_arguments"]], "c_if() (setdensitymatrix method)": [[37, "qiskit_aer.library.SetDensityMatrix.c_if"]], "condition (setdensitymatrix attribute)": [[37, "qiskit_aer.library.SetDensityMatrix.condition"]], "condition_bits (setdensitymatrix attribute)": [[37, "qiskit_aer.library.SetDensityMatrix.condition_bits"]], "copy() (setdensitymatrix method)": [[37, "qiskit_aer.library.SetDensityMatrix.copy"]], "decompositions (setdensitymatrix attribute)": [[37, "qiskit_aer.library.SetDensityMatrix.decompositions"]], "definition (setdensitymatrix attribute)": [[37, "qiskit_aer.library.SetDensityMatrix.definition"]], "duration (setdensitymatrix attribute)": [[37, "qiskit_aer.library.SetDensityMatrix.duration"]], "inverse() (setdensitymatrix method)": [[37, "qiskit_aer.library.SetDensityMatrix.inverse"]], "is_parameterized() (setdensitymatrix method)": [[37, "qiskit_aer.library.SetDensityMatrix.is_parameterized"]], "label (setdensitymatrix attribute)": [[37, "qiskit_aer.library.SetDensityMatrix.label"]], "mutable (setdensitymatrix attribute)": [[37, "qiskit_aer.library.SetDensityMatrix.mutable"]], "name (setdensitymatrix attribute)": [[37, "qiskit_aer.library.SetDensityMatrix.name"]], "num_clbits (setdensitymatrix attribute)": [[37, "qiskit_aer.library.SetDensityMatrix.num_clbits"]], "num_qubits (setdensitymatrix attribute)": [[37, "qiskit_aer.library.SetDensityMatrix.num_qubits"]], "params (setdensitymatrix attribute)": [[37, "qiskit_aer.library.SetDensityMatrix.params"]], "repeat() (setdensitymatrix method)": [[37, "qiskit_aer.library.SetDensityMatrix.repeat"]], "reverse_ops() (setdensitymatrix method)": [[37, "qiskit_aer.library.SetDensityMatrix.reverse_ops"]], "soft_compare() (setdensitymatrix method)": [[37, "qiskit_aer.library.SetDensityMatrix.soft_compare"]], "to_mutable() (setdensitymatrix method)": [[37, "qiskit_aer.library.SetDensityMatrix.to_mutable"]], "unit (setdensitymatrix attribute)": [[37, "qiskit_aer.library.SetDensityMatrix.unit"]], "validate_parameter() (setdensitymatrix method)": [[37, "qiskit_aer.library.SetDensityMatrix.validate_parameter"]], "setmatrixproductstate (class in qiskit_aer.library)": [[38, "qiskit_aer.library.SetMatrixProductState"]], "add_decomposition() (setmatrixproductstate method)": [[38, "qiskit_aer.library.SetMatrixProductState.add_decomposition"]], "assemble() (setmatrixproductstate method)": [[38, "qiskit_aer.library.SetMatrixProductState.assemble"]], "base_class (setmatrixproductstate attribute)": [[38, "qiskit_aer.library.SetMatrixProductState.base_class"]], "broadcast_arguments() (setmatrixproductstate method)": [[38, "qiskit_aer.library.SetMatrixProductState.broadcast_arguments"]], "c_if() (setmatrixproductstate method)": [[38, "qiskit_aer.library.SetMatrixProductState.c_if"]], "condition (setmatrixproductstate attribute)": [[38, "qiskit_aer.library.SetMatrixProductState.condition"]], "condition_bits (setmatrixproductstate attribute)": [[38, "qiskit_aer.library.SetMatrixProductState.condition_bits"]], "copy() (setmatrixproductstate method)": [[38, "qiskit_aer.library.SetMatrixProductState.copy"]], "decompositions (setmatrixproductstate attribute)": [[38, "qiskit_aer.library.SetMatrixProductState.decompositions"]], "definition (setmatrixproductstate attribute)": [[38, "qiskit_aer.library.SetMatrixProductState.definition"]], "duration (setmatrixproductstate attribute)": [[38, "qiskit_aer.library.SetMatrixProductState.duration"]], "inverse() (setmatrixproductstate method)": [[38, "qiskit_aer.library.SetMatrixProductState.inverse"]], "is_parameterized() (setmatrixproductstate method)": [[38, "qiskit_aer.library.SetMatrixProductState.is_parameterized"]], "label (setmatrixproductstate attribute)": [[38, "qiskit_aer.library.SetMatrixProductState.label"]], "mutable (setmatrixproductstate attribute)": [[38, "qiskit_aer.library.SetMatrixProductState.mutable"]], "name (setmatrixproductstate attribute)": [[38, "qiskit_aer.library.SetMatrixProductState.name"]], "num_clbits (setmatrixproductstate attribute)": [[38, "qiskit_aer.library.SetMatrixProductState.num_clbits"]], "num_qubits (setmatrixproductstate attribute)": [[38, "qiskit_aer.library.SetMatrixProductState.num_qubits"]], "params (setmatrixproductstate attribute)": [[38, "qiskit_aer.library.SetMatrixProductState.params"]], "repeat() (setmatrixproductstate method)": [[38, "qiskit_aer.library.SetMatrixProductState.repeat"]], "reverse_ops() (setmatrixproductstate method)": [[38, "qiskit_aer.library.SetMatrixProductState.reverse_ops"]], "soft_compare() (setmatrixproductstate method)": [[38, "qiskit_aer.library.SetMatrixProductState.soft_compare"]], "to_mutable() (setmatrixproductstate method)": [[38, "qiskit_aer.library.SetMatrixProductState.to_mutable"]], "unit (setmatrixproductstate attribute)": [[38, "qiskit_aer.library.SetMatrixProductState.unit"]], "validate_parameter() (setmatrixproductstate method)": [[38, "qiskit_aer.library.SetMatrixProductState.validate_parameter"]], "setstabilizer (class in qiskit_aer.library)": [[39, "qiskit_aer.library.SetStabilizer"]], "add_decomposition() (setstabilizer method)": [[39, "qiskit_aer.library.SetStabilizer.add_decomposition"]], "assemble() (setstabilizer method)": [[39, "qiskit_aer.library.SetStabilizer.assemble"]], "base_class (setstabilizer attribute)": [[39, "qiskit_aer.library.SetStabilizer.base_class"]], "broadcast_arguments() (setstabilizer method)": [[39, "qiskit_aer.library.SetStabilizer.broadcast_arguments"]], "c_if() (setstabilizer method)": [[39, "qiskit_aer.library.SetStabilizer.c_if"]], "condition (setstabilizer attribute)": [[39, "qiskit_aer.library.SetStabilizer.condition"]], "condition_bits (setstabilizer attribute)": [[39, "qiskit_aer.library.SetStabilizer.condition_bits"]], "copy() (setstabilizer method)": [[39, "qiskit_aer.library.SetStabilizer.copy"]], "decompositions (setstabilizer attribute)": [[39, "qiskit_aer.library.SetStabilizer.decompositions"]], "definition (setstabilizer attribute)": [[39, "qiskit_aer.library.SetStabilizer.definition"]], "duration (setstabilizer attribute)": [[39, "qiskit_aer.library.SetStabilizer.duration"]], "inverse() (setstabilizer method)": [[39, "qiskit_aer.library.SetStabilizer.inverse"]], "is_parameterized() (setstabilizer method)": [[39, "qiskit_aer.library.SetStabilizer.is_parameterized"]], "label (setstabilizer attribute)": [[39, "qiskit_aer.library.SetStabilizer.label"]], "mutable (setstabilizer attribute)": [[39, "qiskit_aer.library.SetStabilizer.mutable"]], "name (setstabilizer attribute)": [[39, "qiskit_aer.library.SetStabilizer.name"]], "num_clbits (setstabilizer attribute)": [[39, "qiskit_aer.library.SetStabilizer.num_clbits"]], "num_qubits (setstabilizer attribute)": [[39, "qiskit_aer.library.SetStabilizer.num_qubits"]], "params (setstabilizer attribute)": [[39, "qiskit_aer.library.SetStabilizer.params"]], "repeat() (setstabilizer method)": [[39, "qiskit_aer.library.SetStabilizer.repeat"]], "reverse_ops() (setstabilizer method)": [[39, "qiskit_aer.library.SetStabilizer.reverse_ops"]], "soft_compare() (setstabilizer method)": [[39, "qiskit_aer.library.SetStabilizer.soft_compare"]], "to_mutable() (setstabilizer method)": [[39, "qiskit_aer.library.SetStabilizer.to_mutable"]], "unit (setstabilizer attribute)": [[39, "qiskit_aer.library.SetStabilizer.unit"]], "validate_parameter() (setstabilizer method)": [[39, "qiskit_aer.library.SetStabilizer.validate_parameter"]], "setstatevector (class in qiskit_aer.library)": [[40, "qiskit_aer.library.SetStatevector"]], "add_decomposition() (setstatevector method)": [[40, "qiskit_aer.library.SetStatevector.add_decomposition"]], "assemble() (setstatevector method)": [[40, "qiskit_aer.library.SetStatevector.assemble"]], "base_class (setstatevector attribute)": [[40, "qiskit_aer.library.SetStatevector.base_class"]], "broadcast_arguments() (setstatevector method)": [[40, "qiskit_aer.library.SetStatevector.broadcast_arguments"]], "c_if() (setstatevector method)": [[40, "qiskit_aer.library.SetStatevector.c_if"]], "condition (setstatevector attribute)": [[40, "qiskit_aer.library.SetStatevector.condition"]], "condition_bits (setstatevector attribute)": [[40, "qiskit_aer.library.SetStatevector.condition_bits"]], "copy() (setstatevector method)": [[40, "qiskit_aer.library.SetStatevector.copy"]], "decompositions (setstatevector attribute)": [[40, "qiskit_aer.library.SetStatevector.decompositions"]], "definition (setstatevector attribute)": [[40, "qiskit_aer.library.SetStatevector.definition"]], "duration (setstatevector attribute)": [[40, "qiskit_aer.library.SetStatevector.duration"]], "inverse() (setstatevector method)": [[40, "qiskit_aer.library.SetStatevector.inverse"]], "is_parameterized() (setstatevector method)": [[40, "qiskit_aer.library.SetStatevector.is_parameterized"]], "label (setstatevector attribute)": [[40, "qiskit_aer.library.SetStatevector.label"]], "mutable (setstatevector attribute)": [[40, "qiskit_aer.library.SetStatevector.mutable"]], "name (setstatevector attribute)": [[40, "qiskit_aer.library.SetStatevector.name"]], "num_clbits (setstatevector attribute)": [[40, "qiskit_aer.library.SetStatevector.num_clbits"]], "num_qubits (setstatevector attribute)": [[40, "qiskit_aer.library.SetStatevector.num_qubits"]], "params (setstatevector attribute)": [[40, "qiskit_aer.library.SetStatevector.params"]], "repeat() (setstatevector method)": [[40, "qiskit_aer.library.SetStatevector.repeat"]], "reverse_ops() (setstatevector method)": [[40, "qiskit_aer.library.SetStatevector.reverse_ops"]], "soft_compare() (setstatevector method)": [[40, "qiskit_aer.library.SetStatevector.soft_compare"]], "to_mutable() (setstatevector method)": [[40, "qiskit_aer.library.SetStatevector.to_mutable"]], "unit (setstatevector attribute)": [[40, "qiskit_aer.library.SetStatevector.unit"]], "validate_parameter() (setstatevector method)": [[40, "qiskit_aer.library.SetStatevector.validate_parameter"]], "setsuperop (class in qiskit_aer.library)": [[41, "qiskit_aer.library.SetSuperOp"]], "add_decomposition() (setsuperop method)": [[41, "qiskit_aer.library.SetSuperOp.add_decomposition"]], "assemble() (setsuperop method)": [[41, "qiskit_aer.library.SetSuperOp.assemble"]], "base_class (setsuperop attribute)": [[41, "qiskit_aer.library.SetSuperOp.base_class"]], "broadcast_arguments() (setsuperop method)": [[41, "qiskit_aer.library.SetSuperOp.broadcast_arguments"]], "c_if() (setsuperop method)": [[41, "qiskit_aer.library.SetSuperOp.c_if"]], "condition (setsuperop attribute)": [[41, "qiskit_aer.library.SetSuperOp.condition"]], "condition_bits (setsuperop attribute)": [[41, "qiskit_aer.library.SetSuperOp.condition_bits"]], "copy() (setsuperop method)": [[41, "qiskit_aer.library.SetSuperOp.copy"]], "decompositions (setsuperop attribute)": [[41, "qiskit_aer.library.SetSuperOp.decompositions"]], "definition (setsuperop attribute)": [[41, "qiskit_aer.library.SetSuperOp.definition"]], "duration (setsuperop attribute)": [[41, "qiskit_aer.library.SetSuperOp.duration"]], "inverse() (setsuperop method)": [[41, "qiskit_aer.library.SetSuperOp.inverse"]], "is_parameterized() (setsuperop method)": [[41, "qiskit_aer.library.SetSuperOp.is_parameterized"]], "label (setsuperop attribute)": [[41, "qiskit_aer.library.SetSuperOp.label"]], "mutable (setsuperop attribute)": [[41, "qiskit_aer.library.SetSuperOp.mutable"]], "name (setsuperop attribute)": [[41, "qiskit_aer.library.SetSuperOp.name"]], "num_clbits (setsuperop attribute)": [[41, "qiskit_aer.library.SetSuperOp.num_clbits"]], "num_qubits (setsuperop attribute)": [[41, "qiskit_aer.library.SetSuperOp.num_qubits"]], "params (setsuperop attribute)": [[41, "qiskit_aer.library.SetSuperOp.params"]], "repeat() (setsuperop method)": [[41, "qiskit_aer.library.SetSuperOp.repeat"]], "reverse_ops() (setsuperop method)": [[41, "qiskit_aer.library.SetSuperOp.reverse_ops"]], "soft_compare() (setsuperop method)": [[41, "qiskit_aer.library.SetSuperOp.soft_compare"]], "to_mutable() (setsuperop method)": [[41, "qiskit_aer.library.SetSuperOp.to_mutable"]], "unit (setsuperop attribute)": [[41, "qiskit_aer.library.SetSuperOp.unit"]], "validate_parameter() (setsuperop method)": [[41, "qiskit_aer.library.SetSuperOp.validate_parameter"]], "setunitary (class in qiskit_aer.library)": [[42, "qiskit_aer.library.SetUnitary"]], "add_decomposition() (setunitary method)": [[42, "qiskit_aer.library.SetUnitary.add_decomposition"]], "assemble() (setunitary method)": [[42, "qiskit_aer.library.SetUnitary.assemble"]], "base_class (setunitary attribute)": [[42, "qiskit_aer.library.SetUnitary.base_class"]], "broadcast_arguments() (setunitary method)": [[42, "qiskit_aer.library.SetUnitary.broadcast_arguments"]], "c_if() (setunitary method)": [[42, "qiskit_aer.library.SetUnitary.c_if"]], "condition (setunitary attribute)": [[42, "qiskit_aer.library.SetUnitary.condition"]], "condition_bits (setunitary attribute)": [[42, "qiskit_aer.library.SetUnitary.condition_bits"]], "copy() (setunitary method)": [[42, "qiskit_aer.library.SetUnitary.copy"]], "decompositions (setunitary attribute)": [[42, "qiskit_aer.library.SetUnitary.decompositions"]], "definition (setunitary attribute)": [[42, "qiskit_aer.library.SetUnitary.definition"]], "duration (setunitary attribute)": [[42, "qiskit_aer.library.SetUnitary.duration"]], "inverse() (setunitary method)": [[42, "qiskit_aer.library.SetUnitary.inverse"]], "is_parameterized() (setunitary method)": [[42, "qiskit_aer.library.SetUnitary.is_parameterized"]], "label (setunitary attribute)": [[42, "qiskit_aer.library.SetUnitary.label"]], "mutable (setunitary attribute)": [[42, "qiskit_aer.library.SetUnitary.mutable"]], "name (setunitary attribute)": [[42, "qiskit_aer.library.SetUnitary.name"]], "num_clbits (setunitary attribute)": [[42, "qiskit_aer.library.SetUnitary.num_clbits"]], "num_qubits (setunitary attribute)": [[42, "qiskit_aer.library.SetUnitary.num_qubits"]], "params (setunitary attribute)": [[42, "qiskit_aer.library.SetUnitary.params"]], "repeat() (setunitary method)": [[42, "qiskit_aer.library.SetUnitary.repeat"]], "reverse_ops() (setunitary method)": [[42, "qiskit_aer.library.SetUnitary.reverse_ops"]], "soft_compare() (setunitary method)": [[42, "qiskit_aer.library.SetUnitary.soft_compare"]], "to_mutable() (setunitary method)": [[42, "qiskit_aer.library.SetUnitary.to_mutable"]], "unit (setunitary attribute)": [[42, "qiskit_aer.library.SetUnitary.unit"]], "validate_parameter() (setunitary method)": [[42, "qiskit_aer.library.SetUnitary.validate_parameter"]], "save_amplitudes() (in module qiskit_aer.library)": [[43, "qiskit_aer.library.save_amplitudes"]], "save_amplitudes_squared() (in module qiskit_aer.library)": [[44, "qiskit_aer.library.save_amplitudes_squared"]], "save_clifford() (in module qiskit_aer.library)": [[45, "qiskit_aer.library.save_clifford"]], "save_density_matrix() (in module qiskit_aer.library)": [[46, "qiskit_aer.library.save_density_matrix"]], "save_expectation_value() (in module qiskit_aer.library)": [[47, "qiskit_aer.library.save_expectation_value"]], "save_expectation_value_variance() (in module qiskit_aer.library)": [[48, "qiskit_aer.library.save_expectation_value_variance"]], "save_matrix_product_state() (in module qiskit_aer.library)": [[49, "qiskit_aer.library.save_matrix_product_state"]], "save_probabilities() (in module qiskit_aer.library)": [[50, "qiskit_aer.library.save_probabilities"]], "save_probabilities_dict() (in module qiskit_aer.library)": [[51, "qiskit_aer.library.save_probabilities_dict"]], "save_stabilizer() (in module qiskit_aer.library)": [[52, "qiskit_aer.library.save_stabilizer"]], "save_state() (in module qiskit_aer.library)": [[53, "qiskit_aer.library.save_state"]], "save_statevector() (in module qiskit_aer.library)": [[54, "qiskit_aer.library.save_statevector"]], "save_statevector_dict() (in module qiskit_aer.library)": [[55, "qiskit_aer.library.save_statevector_dict"]], "save_superop() (in module qiskit_aer.library)": [[56, "qiskit_aer.library.save_superop"]], "save_unitary() (in module qiskit_aer.library)": [[57, "qiskit_aer.library.save_unitary"]], "set_density_matrix() (in module qiskit_aer.library)": [[58, "qiskit_aer.library.set_density_matrix"]], "set_matrix_product_state() (in module qiskit_aer.library)": [[59, "qiskit_aer.library.set_matrix_product_state"]], "set_stabilizer() (in module qiskit_aer.library)": [[60, "qiskit_aer.library.set_stabilizer"]], "set_statevector() (in module qiskit_aer.library)": [[61, "qiskit_aer.library.set_statevector"]], "set_superop() (in module qiskit_aer.library)": [[62, "qiskit_aer.library.set_superop"]], "set_unitary() (in module qiskit_aer.library)": [[63, "qiskit_aer.library.set_unitary"]], "localnoisepass (class in qiskit_aer.noise)": [[64, "qiskit_aer.noise.LocalNoisePass"]], "__call__() (localnoisepass method)": [[64, "qiskit_aer.noise.LocalNoisePass.__call__"]], "execute() (localnoisepass method)": [[64, "qiskit_aer.noise.LocalNoisePass.execute"]], "is_analysis_pass (localnoisepass attribute)": [[64, "qiskit_aer.noise.LocalNoisePass.is_analysis_pass"]], "is_transformation_pass (localnoisepass attribute)": [[64, "qiskit_aer.noise.LocalNoisePass.is_transformation_pass"]], "name() (localnoisepass method)": [[64, "qiskit_aer.noise.LocalNoisePass.name"]], "run() (localnoisepass method)": [[64, "qiskit_aer.noise.LocalNoisePass.run"]], "update_status() (localnoisepass method)": [[64, "qiskit_aer.noise.LocalNoisePass.update_status"]], "noisemodel (class in qiskit_aer.noise)": [[65, "qiskit_aer.noise.NoiseModel"]], "add_all_qubit_quantum_error() (noisemodel method)": [[65, "qiskit_aer.noise.NoiseModel.add_all_qubit_quantum_error"]], "add_all_qubit_readout_error() (noisemodel method)": [[65, "qiskit_aer.noise.NoiseModel.add_all_qubit_readout_error"]], "add_basis_gates() (noisemodel method)": [[65, "qiskit_aer.noise.NoiseModel.add_basis_gates"]], "add_quantum_error() (noisemodel method)": [[65, "qiskit_aer.noise.NoiseModel.add_quantum_error"]], "add_readout_error() (noisemodel method)": [[65, "qiskit_aer.noise.NoiseModel.add_readout_error"]], "basis_gates (noisemodel attribute)": [[65, "qiskit_aer.noise.NoiseModel.basis_gates"]], "from_backend() (noisemodel class method)": [[65, "qiskit_aer.noise.NoiseModel.from_backend"]], "from_backend_properties() (noisemodel class method)": [[65, "qiskit_aer.noise.NoiseModel.from_backend_properties"]], "from_dict() (noisemodel static method)": [[65, "qiskit_aer.noise.NoiseModel.from_dict"]], "is_ideal() (noisemodel method)": [[65, "qiskit_aer.noise.NoiseModel.is_ideal"]], "noise_instructions (noisemodel attribute)": [[65, "qiskit_aer.noise.NoiseModel.noise_instructions"]], "noise_qubits (noisemodel attribute)": [[65, "qiskit_aer.noise.NoiseModel.noise_qubits"]], "reset() (noisemodel method)": [[65, "qiskit_aer.noise.NoiseModel.reset"]], "to_dict() (noisemodel method)": [[65, "qiskit_aer.noise.NoiseModel.to_dict"]], "paulilindbladerror (class in qiskit_aer.noise)": [[66, "qiskit_aer.noise.PauliLindbladError"]], "__call__() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.__call__"]], "atol (paulilindbladerror attribute)": [[66, "qiskit_aer.noise.PauliLindbladError.atol"]], "compose() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.compose"]], "copy() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.copy"]], "dim (paulilindbladerror attribute)": [[66, "qiskit_aer.noise.PauliLindbladError.dim"]], "dot() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.dot"]], "expand() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.expand"]], "from_dict() (paulilindbladerror static method)": [[66, "qiskit_aer.noise.PauliLindbladError.from_dict"]], "generators (paulilindbladerror attribute)": [[66, "qiskit_aer.noise.PauliLindbladError.generators"]], "id (paulilindbladerror attribute)": [[66, "qiskit_aer.noise.PauliLindbladError.id"]], "ideal() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.ideal"]], "input_dims() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.input_dims"]], "inverse() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.inverse"]], "is_cp() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.is_cp"]], "is_cptp() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.is_cptp"]], "is_tp() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.is_tp"]], "num_qubits (paulilindbladerror attribute)": [[66, "qiskit_aer.noise.PauliLindbladError.num_qubits"]], "output_dims() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.output_dims"]], "power() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.power"]], "qargs (paulilindbladerror attribute)": [[66, "qiskit_aer.noise.PauliLindbladError.qargs"]], "rates (paulilindbladerror attribute)": [[66, "qiskit_aer.noise.PauliLindbladError.rates"]], "reshape() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.reshape"]], "rtol (paulilindbladerror attribute)": [[66, "qiskit_aer.noise.PauliLindbladError.rtol"]], "settings (paulilindbladerror attribute)": [[66, "qiskit_aer.noise.PauliLindbladError.settings"]], "simplify() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.simplify"]], "size (paulilindbladerror attribute)": [[66, "qiskit_aer.noise.PauliLindbladError.size"]], "subsystem_errors() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.subsystem_errors"]], "tensor() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.tensor"]], "to_dict() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.to_dict"]], "to_instruction() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.to_instruction"]], "to_pauli_error() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.to_pauli_error"]], "to_quantum_error() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.to_quantum_error"]], "to_quantumchannel() (paulilindbladerror method)": [[66, "qiskit_aer.noise.PauliLindbladError.to_quantumchannel"]], "quantumerror (class in qiskit_aer.noise)": [[67, "qiskit_aer.noise.QuantumError"]], "__call__() (quantumerror method)": [[67, "qiskit_aer.noise.QuantumError.__call__"]], "atol (quantumerror attribute)": [[67, "qiskit_aer.noise.QuantumError.atol"]], "circuits (quantumerror attribute)": [[67, "qiskit_aer.noise.QuantumError.circuits"]], "compose() (quantumerror method)": [[67, "qiskit_aer.noise.QuantumError.compose"]], "copy() (quantumerror method)": [[67, "qiskit_aer.noise.QuantumError.copy"]], "dim (quantumerror attribute)": [[67, "qiskit_aer.noise.QuantumError.dim"]], "dot() (quantumerror method)": [[67, "qiskit_aer.noise.QuantumError.dot"]], "error_term() (quantumerror method)": [[67, "qiskit_aer.noise.QuantumError.error_term"]], "expand() (quantumerror method)": [[67, "qiskit_aer.noise.QuantumError.expand"]], "from_dict() (quantumerror static method)": [[67, "qiskit_aer.noise.QuantumError.from_dict"]], "id (quantumerror attribute)": [[67, "qiskit_aer.noise.QuantumError.id"]], "ideal() (quantumerror method)": [[67, "qiskit_aer.noise.QuantumError.ideal"]], "input_dims() (quantumerror method)": [[67, "qiskit_aer.noise.QuantumError.input_dims"]], "num_qubits (quantumerror attribute)": [[67, "qiskit_aer.noise.QuantumError.num_qubits"]], "output_dims() (quantumerror method)": [[67, "qiskit_aer.noise.QuantumError.output_dims"]], "power() (quantumerror method)": [[67, "qiskit_aer.noise.QuantumError.power"]], "probabilities (quantumerror attribute)": [[67, "qiskit_aer.noise.QuantumError.probabilities"]], "qargs (quantumerror attribute)": [[67, "qiskit_aer.noise.QuantumError.qargs"]], "reshape() (quantumerror method)": [[67, "qiskit_aer.noise.QuantumError.reshape"]], "rtol (quantumerror attribute)": [[67, "qiskit_aer.noise.QuantumError.rtol"]], "size (quantumerror attribute)": [[67, "qiskit_aer.noise.QuantumError.size"]], "tensor() (quantumerror method)": [[67, "qiskit_aer.noise.QuantumError.tensor"]], "to_dict() (quantumerror method)": [[67, "qiskit_aer.noise.QuantumError.to_dict"]], "to_instruction() (quantumerror method)": [[67, "qiskit_aer.noise.QuantumError.to_instruction"]], "to_quantumchannel() (quantumerror method)": [[67, "qiskit_aer.noise.QuantumError.to_quantumchannel"]], "readouterror (class in qiskit_aer.noise)": [[68, "qiskit_aer.noise.ReadoutError"]], "__mul__() (readouterror method)": [[68, "qiskit_aer.noise.ReadoutError.__mul__"]], "atol (readouterror attribute)": [[68, "qiskit_aer.noise.ReadoutError.atol"]], "compose() (readouterror method)": [[68, "qiskit_aer.noise.ReadoutError.compose"]], "copy() (readouterror method)": [[68, "qiskit_aer.noise.ReadoutError.copy"]], "dot() (readouterror method)": [[68, "qiskit_aer.noise.ReadoutError.dot"]], "expand() (readouterror method)": [[68, "qiskit_aer.noise.ReadoutError.expand"]], "ideal() (readouterror method)": [[68, "qiskit_aer.noise.ReadoutError.ideal"]], "num_qubits (readouterror attribute)": [[68, "qiskit_aer.noise.ReadoutError.num_qubits"]], "number_of_qubits (readouterror attribute)": [[68, "qiskit_aer.noise.ReadoutError.number_of_qubits"]], "power() (readouterror method)": [[68, "qiskit_aer.noise.ReadoutError.power"]], "probabilities (readouterror attribute)": [[68, "qiskit_aer.noise.ReadoutError.probabilities"]], "rtol (readouterror attribute)": [[68, "qiskit_aer.noise.ReadoutError.rtol"]], "set_atol() (readouterror class method)": [[68, "qiskit_aer.noise.ReadoutError.set_atol"]], "set_rtol() (readouterror class method)": [[68, "qiskit_aer.noise.ReadoutError.set_rtol"]], "tensor() (readouterror method)": [[68, "qiskit_aer.noise.ReadoutError.tensor"]], "to_dict() (readouterror method)": [[68, "qiskit_aer.noise.ReadoutError.to_dict"]], "to_instruction() (readouterror method)": [[68, "qiskit_aer.noise.ReadoutError.to_instruction"]], "relaxationnoisepass (class in qiskit_aer.noise)": [[69, "qiskit_aer.noise.RelaxationNoisePass"]], "__call__() (relaxationnoisepass method)": [[69, "qiskit_aer.noise.RelaxationNoisePass.__call__"]], "execute() (relaxationnoisepass method)": [[69, "qiskit_aer.noise.RelaxationNoisePass.execute"]], "is_analysis_pass (relaxationnoisepass attribute)": [[69, "qiskit_aer.noise.RelaxationNoisePass.is_analysis_pass"]], "is_transformation_pass (relaxationnoisepass attribute)": [[69, "qiskit_aer.noise.RelaxationNoisePass.is_transformation_pass"]], "name() (relaxationnoisepass method)": [[69, "qiskit_aer.noise.RelaxationNoisePass.name"]], "run() (relaxationnoisepass method)": [[69, "qiskit_aer.noise.RelaxationNoisePass.run"]], "update_status() (relaxationnoisepass method)": [[69, "qiskit_aer.noise.RelaxationNoisePass.update_status"]], "amplitude_damping_error() (in module qiskit_aer.noise)": [[70, "qiskit_aer.noise.amplitude_damping_error"]], "coherent_unitary_error() (in module qiskit_aer.noise)": [[71, "qiskit_aer.noise.coherent_unitary_error"]], "depolarizing_error() (in module qiskit_aer.noise)": [[72, "qiskit_aer.noise.depolarizing_error"]], "basic_device_gate_errors() (in module qiskit_aer.noise.device)": [[73, "qiskit_aer.noise.device.basic_device_gate_errors"]], "basic_device_readout_errors() (in module qiskit_aer.noise.device)": [[74, "qiskit_aer.noise.device.basic_device_readout_errors"]], "gate_error_values() (in module qiskit_aer.noise.device)": [[75, "qiskit_aer.noise.device.gate_error_values"]], "gate_length_values() (in module qiskit_aer.noise.device)": [[76, "qiskit_aer.noise.device.gate_length_values"]], "gate_param_values() (in module qiskit_aer.noise.device)": [[77, "qiskit_aer.noise.device.gate_param_values"]], "readout_error_values() (in module qiskit_aer.noise.device)": [[78, "qiskit_aer.noise.device.readout_error_values"]], "thermal_relaxation_values() (in module qiskit_aer.noise.device)": [[79, "qiskit_aer.noise.device.thermal_relaxation_values"]], "kraus_error() (in module qiskit_aer.noise)": [[80, "qiskit_aer.noise.kraus_error"]], "mixed_unitary_error() (in module qiskit_aer.noise)": [[81, "qiskit_aer.noise.mixed_unitary_error"]], "pauli_error() (in module qiskit_aer.noise)": [[82, "qiskit_aer.noise.pauli_error"]], "phase_amplitude_damping_error() (in module qiskit_aer.noise)": [[83, "qiskit_aer.noise.phase_amplitude_damping_error"]], "phase_damping_error() (in module qiskit_aer.noise)": [[84, "qiskit_aer.noise.phase_damping_error"]], "reset_error() (in module qiskit_aer.noise)": [[85, "qiskit_aer.noise.reset_error"]], "thermal_relaxation_error() (in module qiskit_aer.noise)": [[86, "qiskit_aer.noise.thermal_relaxation_error"]], "estimator (class in qiskit_aer.primitives)": [[87, "qiskit_aer.primitives.Estimator"]], "approximation (estimator attribute)": [[87, "qiskit_aer.primitives.Estimator.approximation"]], "options (estimator attribute)": [[87, "qiskit_aer.primitives.Estimator.options"]], "run() (estimator method)": [[87, "qiskit_aer.primitives.Estimator.run"]], "set_options() (estimator method)": [[87, "qiskit_aer.primitives.Estimator.set_options"]], "estimatorv2 (class in qiskit_aer.primitives)": [[88, "qiskit_aer.primitives.EstimatorV2"]], "from_backend() (estimatorv2 class method)": [[88, "qiskit_aer.primitives.EstimatorV2.from_backend"]], "options (estimatorv2 attribute)": [[88, "qiskit_aer.primitives.EstimatorV2.options"]], "run() (estimatorv2 method)": [[88, "qiskit_aer.primitives.EstimatorV2.run"]], "sampler (class in qiskit_aer.primitives)": [[89, "qiskit_aer.primitives.Sampler"]], "options (sampler attribute)": [[89, "qiskit_aer.primitives.Sampler.options"]], "run() (sampler method)": [[89, "qiskit_aer.primitives.Sampler.run"]], "set_options() (sampler method)": [[89, "qiskit_aer.primitives.Sampler.set_options"]], "samplerv2 (class in qiskit_aer.primitives)": [[90, "qiskit_aer.primitives.SamplerV2"]], "default_shots (samplerv2 attribute)": [[90, "qiskit_aer.primitives.SamplerV2.default_shots"]], "from_backend() (samplerv2 class method)": [[90, "qiskit_aer.primitives.SamplerV2.from_backend"]], "options (samplerv2 attribute)": [[90, "qiskit_aer.primitives.SamplerV2.options"]], "run() (samplerv2 method)": [[90, "qiskit_aer.primitives.SamplerV2.run"]], "seed (samplerv2 attribute)": [[90, "qiskit_aer.primitives.SamplerV2.seed"]], "aerdensitymatrix (class in qiskit_aer.quantum_info)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix"]], "__mul__() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.__mul__"]], "atol (aerdensitymatrix attribute)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.atol"]], "conjugate() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.conjugate"]], "copy() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.copy"]], "data (aerdensitymatrix attribute)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.data"]], "dim (aerdensitymatrix attribute)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.dim"]], "dims() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.dims"]], "draw() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.draw"]], "evolve() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.evolve"]], "expand() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.expand"]], "expectation_value() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.expectation_value"]], "from_instruction() (aerdensitymatrix class method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.from_instruction"]], "from_int() (aerdensitymatrix static method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.from_int"]], "from_label() (aerdensitymatrix class method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.from_label"]], "is_valid() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.is_valid"]], "measure() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.measure"]], "metadata() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.metadata"]], "num_qubits (aerdensitymatrix attribute)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.num_qubits"]], "partial_transpose() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.partial_transpose"]], "probabilities() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.probabilities"]], "probabilities_dict() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.probabilities_dict"]], "purity() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.purity"]], "reset() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.reset"]], "reverse_qargs() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.reverse_qargs"]], "rtol (aerdensitymatrix attribute)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.rtol"]], "sample_counts() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.sample_counts"]], "sample_memory() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.sample_memory"]], "seed() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.seed"]], "settings (aerdensitymatrix attribute)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.settings"]], "tensor() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.tensor"]], "to_dict() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.to_dict"]], "to_operator() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.to_operator"]], "to_statevector() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.to_statevector"]], "trace() (aerdensitymatrix method)": [[91, "qiskit_aer.quantum_info.AerDensityMatrix.trace"]], "aerstatevector (class in qiskit_aer.quantum_info)": [[92, "qiskit_aer.quantum_info.AerStatevector"]], "__getitem__() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.__getitem__"]], "__len__() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.__len__"]], "__mul__() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.__mul__"]], "atol (aerstatevector attribute)": [[92, "qiskit_aer.quantum_info.AerStatevector.atol"]], "conjugate() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.conjugate"]], "copy() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.copy"]], "data (aerstatevector attribute)": [[92, "qiskit_aer.quantum_info.AerStatevector.data"]], "dim (aerstatevector attribute)": [[92, "qiskit_aer.quantum_info.AerStatevector.dim"]], "dims() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.dims"]], "draw() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.draw"]], "equiv() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.equiv"]], "evolve() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.evolve"]], "expand() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.expand"]], "expectation_value() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.expectation_value"]], "from_instruction() (aerstatevector class method)": [[92, "qiskit_aer.quantum_info.AerStatevector.from_instruction"]], "from_int() (aerstatevector static method)": [[92, "qiskit_aer.quantum_info.AerStatevector.from_int"]], "from_label() (aerstatevector class method)": [[92, "qiskit_aer.quantum_info.AerStatevector.from_label"]], "inner() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.inner"]], "is_valid() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.is_valid"]], "measure() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.measure"]], "metadata() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.metadata"]], "num_qubits (aerstatevector attribute)": [[92, "qiskit_aer.quantum_info.AerStatevector.num_qubits"]], "probabilities() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.probabilities"]], "probabilities_dict() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.probabilities_dict"]], "purity() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.purity"]], "reset() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.reset"]], "reverse_qargs() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.reverse_qargs"]], "rtol (aerstatevector attribute)": [[92, "qiskit_aer.quantum_info.AerStatevector.rtol"]], "sample_counts() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.sample_counts"]], "sample_memory() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.sample_memory"]], "seed() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.seed"]], "settings (aerstatevector attribute)": [[92, "qiskit_aer.quantum_info.AerStatevector.settings"]], "tensor() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.tensor"]], "to_dict() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.to_dict"]], "to_operator() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.to_operator"]], "trace() (aerstatevector method)": [[92, "qiskit_aer.quantum_info.AerStatevector.trace"]], "approximate_noise_model() (in module qiskit_aer.utils)": [[93, "qiskit_aer.utils.approximate_noise_model"]], "approximate_quantum_error() (in module qiskit_aer.utils)": [[94, "qiskit_aer.utils.approximate_quantum_error"]], "insert_noise() (in module qiskit_aer.utils)": [[95, "qiskit_aer.utils.insert_noise"]], "transform_noise_model() (in module qiskit_aer.utils)": [[96, "qiskit_aer.utils.transform_noise_model"]], "transpile_noise_model() (in module qiskit_aer.utils)": [[97, "qiskit_aer.utils.transpile_noise_model"]], "transpile_quantum_error() (in module qiskit_aer.utils)": [[98, "qiskit_aer.utils.transpile_quantum_error"]]}})