---
features:
  - |
    The :meth:`~qiskit.providers.aer.AerSimulator.run` method for the
    :class:`~qiskit.providers.aer.AerSimulator`,
    :class:`~qiskit.providers.aer.QasmSimulator`,
    :class:`~qiskit.providers.aer.StatevectorSimulator`, and
    :class:`~qiskit.providers.aer.UnitarySimulator` backends now takes a
    :class:`~qiskit.circuit.QuantumCircuit` (or a list of
    :class:`~qiskit.circuit.QuantumCircuit` objects) as it's input.
    The previous :class:`~qiskit.qobj.QasmQobj` object is still supported for
    now, but will be deprecated in a future release.

    For an example of how to use this see::

      from qiskit import transpile, QuantumCircuit

      from qiskit.providers.aer import Aer

      backend = Aer.get_backend('aer_simulator')

      circuit = QuantumCircuit(2)
      qc.h(0)
      qc.cx(0, 1)
      qc.measure_all()

      tqc = transpile(circuit, backend)
      result = backend.run(tqc, shots=4096).result()

  - |
    The :meth:`~qiskit.providers.aer.PulseSimulator.run` method for the
    :class:`~qiskit.providers.aer.PulseSimulator` backend now takes a 
    :class:`~qiskit.pulse.Schedule` (or a list of
    :class:`~qiskit.pulse.Schedule` objects) as it's input.
    The previous :class:`~qiskit.qobj.PulseQobj` object is still supported for
    now, but will be deprecated in a future release.
