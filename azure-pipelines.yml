# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master
- stable

jobs:
  - job: 'Docs'
    pool: {vmImage: 'ubuntu-16.04'}
    strategy:
      matrix:
        Python37:
          python.version: '3.7'
    steps:
     - checkout: self
       submodules: true
     - task: UsePythonVersion@0
       inputs:
         versionSpec: '$(python.version)'
       displayName: 'Use Python $(python.version)'
     - bash: |
         set -e
         python -m pip install --upgrade pip virtualenv
         pip install -U tox
         sudo apt-get update
         sudo apt-get install -y build-essential libopenblas-dev
       displayName: 'Install dependencies'
     - bash: |
         tox -edocs -- -j auto
       displayName: 'Run Docs build'
     - task: PublishBuildArtifacts@1
       displayName: 'Publish docs'
       inputs:
         pathtoPublish: 'docs/_build/html'
         artifactName: 'html_docs'
  - job: 'Windows'
    pool: {vmImage: 'vs2017-win2016'}
    strategy:
      matrix:
        Python35:
          python.version: '3.5'
        Python36:
          python.version: '3.6'
        Python37:
          python.version: '3.7'
        Python38:
          python.version: '3.8'
    steps:
      - checkout: self
        submodules: true
      - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
        displayName: Add conda to PATH
      - script: conda create --yes --quiet --name qiskit-aer-$(Build.BuildNumber) python=%PYTHON_VERSION%
        displayName: Create Anaconda environment
      - bash: |
          set -x
          set -e
          source activate qiskit-aer-$(Build.BuildNumber)
          conda install --yes --quiet --name qiskit-aer-$(Build.BuildNumber) python==$(python.version) numpy pip virtualenv
          conda install -c conda-forge --yes --quiet --name qiskit-aer-$(Build.BuildNumber) python==$(python.version) setuptools
        displayName: Install Anaconda packages
        condition: ne(variables['python.version'], '3.5')
      - bash: |
          set -x
          set -e
          source activate qiskit-aer-$(Build.BuildNumber)
          conda install --yes --quiet --name qiskit-aer-$(Build.BuildNumber) python=$(python.version) mkl
          conda install -c conda-forge --yes --quiet --name qiskit-aer-$(Build.BuildNumber) python=$(python.version) openblas
        displayName: Install Anaconda packages
        condition: or(eq(variables['python.version'], '3.5'), eq(variables['python.version'], '3.8'))
      - bash: |
          set -e
          source activate qiskit-aer-$(Build.BuildNumber)
          conda install -c conda-forge --yes --quiet --name qiskit-aer-$(Build.BuildNumber) python=$(python.version) osqp
          pip install -r requirements-dev.txt
          pip install git+https://github.com/Qiskit/qiskit-terra.git
        displayName: "Install dependencies py3.8"
        condition: eq(variables['python.version'], '3.8')
      - bash: |
          set -e
          source activate qiskit-aer-$(Build.BuildNumber)
          pip install -r requirements-dev.txt
          pip install git+https://github.com/Qiskit/qiskit-terra.git
        displayName: "Install dependencies"
        condition: ne(variables['python.version'], '3.8')
      - bash: |
          set -e
          source activate qiskit-aer-$(Build.BuildNumber)
          git clean -fdX
          python setup.py bdist_wheel -- -G "Visual Studio 15 2017 Win64"
        displayName: 'Build Aer'
      - bash: |
          set -e
          source activate qiskit-aer-$(Build.BuildNumber)
          pip install -v dist/qiskit_aer*.whl
          stestr run --slowest
        displayName: 'Install Aer and Run Tests'
